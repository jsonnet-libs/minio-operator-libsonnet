{"config":{"lang":["en"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"minio-operator Jsonnet library","text":"<p>This library is generated with <code>k8s</code>.</p> <ul> <li>v6.0.0</li> <li>v5.0.15</li> </ul>"},{"location":"v5.0.15/","title":"minio-operator","text":"<pre><code>local minio-operator = import \"github.com/jsonnet-libs/minio-operator-libsonnet/v5.0.15/main.libsonnet\"\n</code></pre> <ul> <li>job</li> <li>minio</li> </ul>"},{"location":"v5.0.15/job/","title":"job","text":"<ul> <li>v1alpha1</li> </ul>"},{"location":"v5.0.15/job/v1alpha1/","title":"job.v1alpha1","text":"<ul> <li>minIOJob</li> </ul>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/","title":"job.v1alpha1.minIOJob","text":""},{"location":"v5.0.15/job/v1alpha1/minIOJob/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCommands(commands)</code></li> <li><code>fn withCommandsMixin(commands)</code></li> <li><code>fn withExecution(execution)</code></li> <li><code>fn withFailureStrategy(failureStrategy)</code></li> <li><code>fn withMcImage(mcImage)</code></li> <li><code>fn withServiceAccountName(serviceAccountName)</code></li> <li><code>obj spec.commands</code><ul> <li><code>fn withArgs(args)</code></li> <li><code>fn withArgsMixin(args)</code></li> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOp(op)</code></li> </ul> </li> <li><code>obj spec.tenant</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fields","title":"Fields","text":""},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of MinIOJob</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#obj-spec","title":"obj spec","text":""},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-specwithcommands","title":"fn spec.withCommands","text":"<pre><code>withCommands(commands)\n</code></pre>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-specwithcommandsmixin","title":"fn spec.withCommandsMixin","text":"<pre><code>withCommandsMixin(commands)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-specwithexecution","title":"fn spec.withExecution","text":"<pre><code>withExecution(execution)\n</code></pre>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-specwithfailurestrategy","title":"fn spec.withFailureStrategy","text":"<pre><code>withFailureStrategy(failureStrategy)\n</code></pre>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-specwithmcimage","title":"fn spec.withMcImage","text":"<pre><code>withMcImage(mcImage)\n</code></pre>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-specwithserviceaccountname","title":"fn spec.withServiceAccountName","text":"<pre><code>withServiceAccountName(serviceAccountName)\n</code></pre>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#obj-speccommands","title":"obj spec.commands","text":""},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-speccommandswithargs","title":"fn spec.commands.withArgs","text":"<pre><code>withArgs(args)\n</code></pre>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-speccommandswithargsmixin","title":"fn spec.commands.withArgsMixin","text":"<pre><code>withArgsMixin(args)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-speccommandswithdependson","title":"fn spec.commands.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-speccommandswithdependsonmixin","title":"fn spec.commands.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-speccommandswithname","title":"fn spec.commands.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-speccommandswithop","title":"fn spec.commands.withOp","text":"<pre><code>withOp(op)\n</code></pre>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#obj-spectenant","title":"obj spec.tenant","text":""},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-spectenantwithname","title":"fn spec.tenant.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/job/v1alpha1/minIOJob/#fn-spectenantwithnamespace","title":"fn spec.tenant.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v5.0.15/minio/","title":"minio","text":"<ul> <li>v2</li> </ul>"},{"location":"v5.0.15/minio/v2/","title":"minio.v2","text":"<ul> <li>tenant</li> </ul>"},{"location":"v5.0.15/minio/v2/tenant/","title":"minio.v2.tenant","text":""},{"location":"v5.0.15/minio/v2/tenant/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj scheduler</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAdditionalVolumeMounts(additionalVolumeMounts)</code></li> <li><code>fn withAdditionalVolumeMountsMixin(additionalVolumeMounts)</code></li> <li><code>fn withAdditionalVolumes(additionalVolumes)</code></li> <li><code>fn withAdditionalVolumesMixin(additionalVolumes)</code></li> <li><code>fn withBuckets(buckets)</code></li> <li><code>fn withBucketsMixin(buckets)</code></li> <li><code>fn withEnv(env)</code></li> <li><code>fn withEnvMixin(env)</code></li> <li><code>fn withExternalCaCertSecret(externalCaCertSecret)</code></li> <li><code>fn withExternalCaCertSecretMixin(externalCaCertSecret)</code></li> <li><code>fn withExternalCertSecret(externalCertSecret)</code></li> <li><code>fn withExternalCertSecretMixin(externalCertSecret)</code></li> <li><code>fn withExternalClientCertSecrets(externalClientCertSecrets)</code></li> <li><code>fn withExternalClientCertSecretsMixin(externalClientCertSecrets)</code></li> <li><code>fn withImage(image)</code></li> <li><code>fn withImagePullPolicy(imagePullPolicy)</code></li> <li><code>fn withInitContainers(initContainers)</code></li> <li><code>fn withInitContainersMixin(initContainers)</code></li> <li><code>fn withMountPath(mountPath)</code></li> <li><code>fn withPodManagementPolicy(podManagementPolicy)</code></li> <li><code>fn withPools(pools)</code></li> <li><code>fn withPoolsMixin(pools)</code></li> <li><code>fn withPriorityClassName(priorityClassName)</code></li> <li><code>fn withPrometheusOperator(prometheusOperator)</code></li> <li><code>fn withRequestAutoCert(requestAutoCert)</code></li> <li><code>fn withServiceAccountName(serviceAccountName)</code></li> <li><code>fn withSubPath(subPath)</code></li> <li><code>fn withUsers(users)</code></li> <li><code>fn withUsersMixin(users)</code></li> <li><code>obj spec.additionalVolumeMounts</code><ul> <li><code>fn withMountPath(mountPath)</code></li> <li><code>fn withMountPropagation(mountPropagation)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSubPath(subPath)</code></li> <li><code>fn withSubPathExpr(subPathExpr)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes</code><ul> <li><code>fn withName(name)</code></li> <li><code>obj spec.additionalVolumes.awsElasticBlockStore</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withPartition(partition)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeID(volumeID)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.azureDisk</code><ul> <li><code>fn withCachingMode(cachingMode)</code></li> <li><code>fn withDiskName(diskName)</code></li> <li><code>fn withDiskURI(diskURI)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.azureFile</code><ul> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSecretName(secretName)</code></li> <li><code>fn withShareName(shareName)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.cephfs</code><ul> <li><code>fn withMonitors(monitors)</code></li> <li><code>fn withMonitorsMixin(monitors)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSecretFile(secretFile)</code></li> <li><code>fn withUser(user)</code></li> <li><code>obj spec.additionalVolumes.cephfs.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.cinder</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeID(volumeID)</code></li> <li><code>obj spec.additionalVolumes.cinder.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.configMap</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>obj spec.additionalVolumes.configMap.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.csi</code><ul> <li><code>fn withDriver(driver)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeAttributes(volumeAttributes)</code></li> <li><code>fn withVolumeAttributesMixin(volumeAttributes)</code></li> <li><code>obj spec.additionalVolumes.csi.nodePublishSecretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.downwardAPI</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>obj spec.additionalVolumes.downwardAPI.items</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> <li><code>obj spec.additionalVolumes.downwardAPI.items.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.downwardAPI.items.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.emptyDir</code><ul> <li><code>fn withMedium(medium)</code></li> <li><code>fn withSizeLimit(sizeLimit)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.ephemeral</code><ul> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate</code><ul> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec</code><ul> <li><code>fn withAccessModes(accessModes)</code></li> <li><code>fn withAccessModesMixin(accessModes)</code></li> <li><code>fn withStorageClassName(storageClassName)</code></li> <li><code>fn withVolumeAttributesClassName(volumeAttributesClassName)</code></li> <li><code>fn withVolumeMode(volumeMode)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSource</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.resources</code><ul> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.fc</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withLun(lun)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withTargetWWNs(targetWWNs)</code></li> <li><code>fn withTargetWWNsMixin(targetWWNs)</code></li> <li><code>fn withWwids(wwids)</code></li> <li><code>fn withWwidsMixin(wwids)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.flexVolume</code><ul> <li><code>fn withDriver(driver)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withOptions(options)</code></li> <li><code>fn withOptionsMixin(options)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>obj spec.additionalVolumes.flexVolume.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.flocker</code><ul> <li><code>fn withDatasetName(datasetName)</code></li> <li><code>fn withDatasetUUID(datasetUUID)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.gcePersistentDisk</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withPartition(partition)</code></li> <li><code>fn withPdName(pdName)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.gitRepo</code><ul> <li><code>fn withDirectory(directory)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRevision(revision)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.glusterfs</code><ul> <li><code>fn withEndpoints(endpoints)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.hostPath</code><ul> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.iscsi</code><ul> <li><code>fn withChapAuthDiscovery(chapAuthDiscovery)</code></li> <li><code>fn withChapAuthSession(chapAuthSession)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withInitiatorName(initiatorName)</code></li> <li><code>fn withIqn(iqn)</code></li> <li><code>fn withIscsiInterface(iscsiInterface)</code></li> <li><code>fn withLun(lun)</code></li> <li><code>fn withPortals(portals)</code></li> <li><code>fn withPortalsMixin(portals)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withTargetPortal(targetPortal)</code></li> <li><code>obj spec.additionalVolumes.iscsi.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.nfs</code><ul> <li><code>fn withPath(path)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withServer(server)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.persistentVolumeClaim</code><ul> <li><code>fn withClaimName(claimName)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.photonPersistentDisk</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withPdID(pdID)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.portworxVolume</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeID(volumeID)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.projected</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withSources(sources)</code></li> <li><code>fn withSourcesMixin(sources)</code></li> <li><code>obj spec.additionalVolumes.projected.sources</code><ul> <li><code>obj spec.additionalVolumes.projected.sources.clusterTrustBundle</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withSignerName(signerName)</code></li> <li><code>obj spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.projected.sources.configMap</code><ul> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>obj spec.additionalVolumes.projected.sources.configMap.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.projected.sources.downwardAPI</code><ul> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>obj spec.additionalVolumes.projected.sources.downwardAPI.items</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> <li><code>obj spec.additionalVolumes.projected.sources.downwardAPI.items.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.projected.sources.downwardAPI.items.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.projected.sources.secret</code><ul> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>obj spec.additionalVolumes.projected.sources.secret.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.projected.sources.serviceAccountToken</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withExpirationSeconds(expirationSeconds)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.quobyte</code><ul> <li><code>fn withGroup(group)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withRegistry(registry)</code></li> <li><code>fn withTenant(tenant)</code></li> <li><code>fn withUser(user)</code></li> <li><code>fn withVolume(volume)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.rbd</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withImage(image)</code></li> <li><code>fn withKeyring(keyring)</code></li> <li><code>fn withMonitors(monitors)</code></li> <li><code>fn withMonitorsMixin(monitors)</code></li> <li><code>fn withPool(pool)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withUser(user)</code></li> <li><code>obj spec.additionalVolumes.rbd.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.scaleIO</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withGateway(gateway)</code></li> <li><code>fn withProtectionDomain(protectionDomain)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSslEnabled(sslEnabled)</code></li> <li><code>fn withStorageMode(storageMode)</code></li> <li><code>fn withStoragePool(storagePool)</code></li> <li><code>fn withSystem(system)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>obj spec.additionalVolumes.scaleIO.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.secret</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>fn withSecretName(secretName)</code></li> <li><code>obj spec.additionalVolumes.secret.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.storageos</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>fn withVolumeNamespace(volumeNamespace)</code></li> <li><code>obj spec.additionalVolumes.storageos.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.vsphereVolume</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withStoragePolicyID(storagePolicyID)</code></li> <li><code>fn withStoragePolicyName(storagePolicyName)</code></li> <li><code>fn withVolumePath(volumePath)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.buckets</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withObjectLock(objectLock)</code></li> <li><code>fn withRegion(region)</code></li> </ul> </li> <li><code>obj spec.certConfig</code><ul> <li><code>fn withCommonName(commonName)</code></li> <li><code>fn withDnsNames(dnsNames)</code></li> <li><code>fn withDnsNamesMixin(dnsNames)</code></li> <li><code>fn withOrganizationName(organizationName)</code></li> <li><code>fn withOrganizationNameMixin(organizationName)</code></li> </ul> </li> <li><code>obj spec.configuration</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.credsSecret</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.env</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj spec.env.valueFrom</code><ul> <li><code>obj spec.env.valueFrom.configMapKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> <li><code>obj spec.env.valueFrom.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.env.valueFrom.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> <li><code>obj spec.env.valueFrom.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.exposeServices</code><ul> <li><code>fn withConsole(console)</code></li> <li><code>fn withMinio(minio)</code></li> </ul> </li> <li><code>obj spec.externalCaCertSecret</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.externalCertSecret</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.externalClientCertSecret</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.externalClientCertSecrets</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.features</code><ul> <li><code>fn withBucketDNS(bucketDNS)</code></li> <li><code>fn withEnableSFTP(enableSFTP)</code></li> <li><code>obj spec.features.domains</code><ul> <li><code>fn withConsole(console)</code></li> <li><code>fn withMinio(minio)</code></li> <li><code>fn withMinioMixin(minio)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.imagePullSecret</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.initContainers</code><ul> <li><code>fn withArgs(args)</code></li> <li><code>fn withArgsMixin(args)</code></li> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> <li><code>fn withEnv(env)</code></li> <li><code>fn withEnvFrom(envFrom)</code></li> <li><code>fn withEnvFromMixin(envFrom)</code></li> <li><code>fn withEnvMixin(env)</code></li> <li><code>fn withImage(image)</code></li> <li><code>fn withImagePullPolicy(imagePullPolicy)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withResizePolicy(resizePolicy)</code></li> <li><code>fn withResizePolicyMixin(resizePolicy)</code></li> <li><code>fn withRestartPolicy(restartPolicy)</code></li> <li><code>fn withStdin(stdin)</code></li> <li><code>fn withStdinOnce(stdinOnce)</code></li> <li><code>fn withTerminationMessagePath(terminationMessagePath)</code></li> <li><code>fn withTerminationMessagePolicy(terminationMessagePolicy)</code></li> <li><code>fn withTty(tty)</code></li> <li><code>fn withVolumeDevices(volumeDevices)</code></li> <li><code>fn withVolumeDevicesMixin(volumeDevices)</code></li> <li><code>fn withVolumeMounts(volumeMounts)</code></li> <li><code>fn withVolumeMountsMixin(volumeMounts)</code></li> <li><code>fn withWorkingDir(workingDir)</code></li> <li><code>obj spec.initContainers.env</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj spec.initContainers.env.valueFrom</code><ul> <li><code>obj spec.initContainers.env.valueFrom.configMapKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> <li><code>obj spec.initContainers.env.valueFrom.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.initContainers.env.valueFrom.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> <li><code>obj spec.initContainers.env.valueFrom.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.envFrom</code><ul> <li><code>fn withPrefix(prefix)</code></li> <li><code>obj spec.initContainers.envFrom.configMapRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> <li><code>obj spec.initContainers.envFrom.secretRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.lifecycle</code><ul> <li><code>obj spec.initContainers.lifecycle.postStart</code><ul> <li><code>obj spec.initContainers.lifecycle.postStart.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.initContainers.lifecycle.postStart.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.initContainers.lifecycle.postStart.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.lifecycle.postStart.sleep</code><ul> <li><code>fn withSeconds(seconds)</code></li> </ul> </li> <li><code>obj spec.initContainers.lifecycle.postStart.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.lifecycle.preStop</code><ul> <li><code>obj spec.initContainers.lifecycle.preStop.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.initContainers.lifecycle.preStop.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.initContainers.lifecycle.preStop.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.lifecycle.preStop.sleep</code><ul> <li><code>fn withSeconds(seconds)</code></li> </ul> </li> <li><code>obj spec.initContainers.lifecycle.preStop.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.livenessProbe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.initContainers.livenessProbe.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.initContainers.livenessProbe.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.initContainers.livenessProbe.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.initContainers.livenessProbe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.livenessProbe.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.ports</code><ul> <li><code>fn withContainerPort(containerPort)</code></li> <li><code>fn withHostIP(hostIP)</code></li> <li><code>fn withHostPort(hostPort)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.initContainers.readinessProbe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.initContainers.readinessProbe.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.initContainers.readinessProbe.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.initContainers.readinessProbe.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.initContainers.readinessProbe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.readinessProbe.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.resizePolicy</code><ul> <li><code>fn withResourceName(resourceName)</code></li> <li><code>fn withRestartPolicy(restartPolicy)</code></li> </ul> </li> <li><code>obj spec.initContainers.resources</code><ul> <li><code>fn withClaims(claims)</code></li> <li><code>fn withClaimsMixin(claims)</code></li> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> <li><code>obj spec.initContainers.resources.claims</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.securityContext</code><ul> <li><code>fn withAllowPrivilegeEscalation(allowPrivilegeEscalation)</code></li> <li><code>fn withPrivileged(privileged)</code></li> <li><code>fn withProcMount(procMount)</code></li> <li><code>fn withReadOnlyRootFilesystem(readOnlyRootFilesystem)</code></li> <li><code>fn withRunAsGroup(runAsGroup)</code></li> <li><code>fn withRunAsNonRoot(runAsNonRoot)</code></li> <li><code>fn withRunAsUser(runAsUser)</code></li> <li><code>obj spec.initContainers.securityContext.capabilities</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withDrop(drop)</code></li> <li><code>fn withDropMixin(drop)</code></li> </ul> </li> <li><code>obj spec.initContainers.securityContext.seLinuxOptions</code><ul> <li><code>fn withLevel(level)</code></li> <li><code>fn withRole(role)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUser(user)</code></li> </ul> </li> <li><code>obj spec.initContainers.securityContext.seccompProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.initContainers.securityContext.windowsOptions</code><ul> <li><code>fn withGmsaCredentialSpec(gmsaCredentialSpec)</code></li> <li><code>fn withGmsaCredentialSpecName(gmsaCredentialSpecName)</code></li> <li><code>fn withHostProcess(hostProcess)</code></li> <li><code>fn withRunAsUserName(runAsUserName)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.startupProbe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.initContainers.startupProbe.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.initContainers.startupProbe.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.initContainers.startupProbe.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.initContainers.startupProbe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.startupProbe.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.volumeDevices</code><ul> <li><code>fn withDevicePath(devicePath)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.initContainers.volumeMounts</code><ul> <li><code>fn withMountPath(mountPath)</code></li> <li><code>fn withMountPropagation(mountPropagation)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSubPath(subPath)</code></li> <li><code>fn withSubPathExpr(subPathExpr)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withEnv(env)</code></li> <li><code>fn withEnvMixin(env)</code></li> <li><code>fn withGcpCredentialSecretName(gcpCredentialSecretName)</code></li> <li><code>fn withGcpWorkloadIdentityPool(gcpWorkloadIdentityPool)</code></li> <li><code>fn withImage(image)</code></li> <li><code>fn withImagePullPolicy(imagePullPolicy)</code></li> <li><code>fn withKeyName(keyName)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withNodeSelector(nodeSelector)</code></li> <li><code>fn withNodeSelectorMixin(nodeSelector)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>fn withServiceAccountName(serviceAccountName)</code></li> <li><code>fn withTolerations(tolerations)</code></li> <li><code>fn withTolerationsMixin(tolerations)</code></li> <li><code>fn withTopologySpreadConstraints(topologySpreadConstraints)</code></li> <li><code>fn withTopologySpreadConstraintsMixin(topologySpreadConstraints)</code></li> <li><code>obj spec.kes.affinity</code><ul> <li><code>obj spec.kes.affinity.nodeAffinity</code><ul> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchFields(matchFields)</code></li> <li><code>fn withMatchFieldsMixin(matchFields)</code></li> <li><code>obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> <li><code>obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withNodeSelectorTerms(nodeSelectorTerms)</code></li> <li><code>fn withNodeSelectorTermsMixin(nodeSelectorTerms)</code></li> <li><code>obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchFields(matchFields)</code></li> <li><code>fn withMatchFieldsMixin(matchFields)</code></li> <li><code>obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> <li><code>obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAffinity</code><ul> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAntiAffinity</code><ul> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.kes.clientCertSecret</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.kes.containerSecurityContext</code><ul> <li><code>fn withAllowPrivilegeEscalation(allowPrivilegeEscalation)</code></li> <li><code>fn withPrivileged(privileged)</code></li> <li><code>fn withProcMount(procMount)</code></li> <li><code>fn withReadOnlyRootFilesystem(readOnlyRootFilesystem)</code></li> <li><code>fn withRunAsGroup(runAsGroup)</code></li> <li><code>fn withRunAsNonRoot(runAsNonRoot)</code></li> <li><code>fn withRunAsUser(runAsUser)</code></li> <li><code>obj spec.kes.containerSecurityContext.capabilities</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withDrop(drop)</code></li> <li><code>fn withDropMixin(drop)</code></li> </ul> </li> <li><code>obj spec.kes.containerSecurityContext.seLinuxOptions</code><ul> <li><code>fn withLevel(level)</code></li> <li><code>fn withRole(role)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUser(user)</code></li> </ul> </li> <li><code>obj spec.kes.containerSecurityContext.seccompProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.kes.containerSecurityContext.windowsOptions</code><ul> <li><code>fn withGmsaCredentialSpec(gmsaCredentialSpec)</code></li> <li><code>fn withGmsaCredentialSpecName(gmsaCredentialSpecName)</code></li> <li><code>fn withHostProcess(hostProcess)</code></li> <li><code>fn withRunAsUserName(runAsUserName)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes.env</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj spec.kes.env.valueFrom</code><ul> <li><code>obj spec.kes.env.valueFrom.configMapKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> <li><code>obj spec.kes.env.valueFrom.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.kes.env.valueFrom.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> <li><code>obj spec.kes.env.valueFrom.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.kes.externalCertSecret</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.kes.kesSecret</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.kes.resources</code><ul> <li><code>fn withClaims(claims)</code></li> <li><code>fn withClaimsMixin(claims)</code></li> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> <li><code>obj spec.kes.resources.claims</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes.securityContext</code><ul> <li><code>fn withFsGroup(fsGroup)</code></li> <li><code>fn withFsGroupChangePolicy(fsGroupChangePolicy)</code></li> <li><code>fn withRunAsGroup(runAsGroup)</code></li> <li><code>fn withRunAsNonRoot(runAsNonRoot)</code></li> <li><code>fn withRunAsUser(runAsUser)</code></li> <li><code>fn withSupplementalGroups(supplementalGroups)</code></li> <li><code>fn withSupplementalGroupsMixin(supplementalGroups)</code></li> <li><code>fn withSysctls(sysctls)</code></li> <li><code>fn withSysctlsMixin(sysctls)</code></li> <li><code>obj spec.kes.securityContext.seLinuxOptions</code><ul> <li><code>fn withLevel(level)</code></li> <li><code>fn withRole(role)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUser(user)</code></li> </ul> </li> <li><code>obj spec.kes.securityContext.seccompProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.kes.securityContext.sysctls</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.kes.securityContext.windowsOptions</code><ul> <li><code>fn withGmsaCredentialSpec(gmsaCredentialSpec)</code></li> <li><code>fn withGmsaCredentialSpecName(gmsaCredentialSpecName)</code></li> <li><code>fn withHostProcess(hostProcess)</code></li> <li><code>fn withRunAsUserName(runAsUserName)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes.tolerations</code><ul> <li><code>fn withEffect(effect)</code></li> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withTolerationSeconds(tolerationSeconds)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.kes.topologySpreadConstraints</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMaxSkew(maxSkew)</code></li> <li><code>fn withMinDomains(minDomains)</code></li> <li><code>fn withNodeAffinityPolicy(nodeAffinityPolicy)</code></li> <li><code>fn withNodeTaintsPolicy(nodeTaintsPolicy)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>fn withWhenUnsatisfiable(whenUnsatisfiable)</code></li> <li><code>obj spec.kes.topologySpreadConstraints.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.topologySpreadConstraints.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.lifecycle</code><ul> <li><code>obj spec.lifecycle.postStart</code><ul> <li><code>obj spec.lifecycle.postStart.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.lifecycle.postStart.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.lifecycle.postStart.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.lifecycle.postStart.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.lifecycle.preStop</code><ul> <li><code>obj spec.lifecycle.preStop.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.lifecycle.preStop.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.lifecycle.preStop.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.lifecycle.preStop.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.liveness</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.liveness.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.liveness.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.liveness.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.liveness.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.liveness.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.logging</code><ul> <li><code>fn withAnonymous(anonymous)</code></li> <li><code>fn withJson(json)</code></li> <li><code>fn withQuiet(quiet)</code></li> </ul> </li> <li><code>obj spec.pools</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNodeSelector(nodeSelector)</code></li> <li><code>fn withNodeSelectorMixin(nodeSelector)</code></li> <li><code>fn withReclaimStorage(reclaimStorage)</code></li> <li><code>fn withRuntimeClassName(runtimeClassName)</code></li> <li><code>fn withServers(servers)</code></li> <li><code>fn withTolerations(tolerations)</code></li> <li><code>fn withTolerationsMixin(tolerations)</code></li> <li><code>fn withTopologySpreadConstraints(topologySpreadConstraints)</code></li> <li><code>fn withTopologySpreadConstraintsMixin(topologySpreadConstraints)</code></li> <li><code>fn withVolumesPerServer(volumesPerServer)</code></li> <li><code>obj spec.pools.affinity</code><ul> <li><code>obj spec.pools.affinity.nodeAffinity</code><ul> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchFields(matchFields)</code></li> <li><code>fn withMatchFieldsMixin(matchFields)</code></li> <li><code>obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> <li><code>obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withNodeSelectorTerms(nodeSelectorTerms)</code></li> <li><code>fn withNodeSelectorTermsMixin(nodeSelectorTerms)</code></li> <li><code>obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchFields(matchFields)</code></li> <li><code>fn withMatchFieldsMixin(matchFields)</code></li> <li><code>obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> <li><code>obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAffinity</code><ul> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAntiAffinity</code><ul> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.pools.containerSecurityContext</code><ul> <li><code>fn withAllowPrivilegeEscalation(allowPrivilegeEscalation)</code></li> <li><code>fn withPrivileged(privileged)</code></li> <li><code>fn withProcMount(procMount)</code></li> <li><code>fn withReadOnlyRootFilesystem(readOnlyRootFilesystem)</code></li> <li><code>fn withRunAsGroup(runAsGroup)</code></li> <li><code>fn withRunAsNonRoot(runAsNonRoot)</code></li> <li><code>fn withRunAsUser(runAsUser)</code></li> <li><code>obj spec.pools.containerSecurityContext.capabilities</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withDrop(drop)</code></li> <li><code>fn withDropMixin(drop)</code></li> </ul> </li> <li><code>obj spec.pools.containerSecurityContext.seLinuxOptions</code><ul> <li><code>fn withLevel(level)</code></li> <li><code>fn withRole(role)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUser(user)</code></li> </ul> </li> <li><code>obj spec.pools.containerSecurityContext.seccompProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.pools.containerSecurityContext.windowsOptions</code><ul> <li><code>fn withGmsaCredentialSpec(gmsaCredentialSpec)</code></li> <li><code>fn withGmsaCredentialSpecName(gmsaCredentialSpecName)</code></li> <li><code>fn withHostProcess(hostProcess)</code></li> <li><code>fn withRunAsUserName(runAsUserName)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.pools.resources</code><ul> <li><code>fn withClaims(claims)</code></li> <li><code>fn withClaimsMixin(claims)</code></li> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> <li><code>obj spec.pools.resources.claims</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.pools.securityContext</code><ul> <li><code>fn withFsGroup(fsGroup)</code></li> <li><code>fn withFsGroupChangePolicy(fsGroupChangePolicy)</code></li> <li><code>fn withRunAsGroup(runAsGroup)</code></li> <li><code>fn withRunAsNonRoot(runAsNonRoot)</code></li> <li><code>fn withRunAsUser(runAsUser)</code></li> <li><code>fn withSupplementalGroups(supplementalGroups)</code></li> <li><code>fn withSupplementalGroupsMixin(supplementalGroups)</code></li> <li><code>fn withSysctls(sysctls)</code></li> <li><code>fn withSysctlsMixin(sysctls)</code></li> <li><code>obj spec.pools.securityContext.seLinuxOptions</code><ul> <li><code>fn withLevel(level)</code></li> <li><code>fn withRole(role)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUser(user)</code></li> </ul> </li> <li><code>obj spec.pools.securityContext.seccompProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.pools.securityContext.sysctls</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.pools.securityContext.windowsOptions</code><ul> <li><code>fn withGmsaCredentialSpec(gmsaCredentialSpec)</code></li> <li><code>fn withGmsaCredentialSpecName(gmsaCredentialSpecName)</code></li> <li><code>fn withHostProcess(hostProcess)</code></li> <li><code>fn withRunAsUserName(runAsUserName)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.pools.tolerations</code><ul> <li><code>fn withEffect(effect)</code></li> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withTolerationSeconds(tolerationSeconds)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.pools.topologySpreadConstraints</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMaxSkew(maxSkew)</code></li> <li><code>fn withMinDomains(minDomains)</code></li> <li><code>fn withNodeAffinityPolicy(nodeAffinityPolicy)</code></li> <li><code>fn withNodeTaintsPolicy(nodeTaintsPolicy)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>fn withWhenUnsatisfiable(whenUnsatisfiable)</code></li> <li><code>obj spec.pools.topologySpreadConstraints.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.topologySpreadConstraints.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.pools.volumeClaimTemplate</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.pools.volumeClaimTemplate.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.pools.volumeClaimTemplate.spec</code><ul> <li><code>fn withAccessModes(accessModes)</code></li> <li><code>fn withAccessModesMixin(accessModes)</code></li> <li><code>fn withStorageClassName(storageClassName)</code></li> <li><code>fn withVolumeAttributesClassName(volumeAttributesClassName)</code></li> <li><code>fn withVolumeMode(volumeMode)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>obj spec.pools.volumeClaimTemplate.spec.dataSource</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.pools.volumeClaimTemplate.spec.dataSourceRef</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.pools.volumeClaimTemplate.spec.resources</code><ul> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> </ul> </li> <li><code>obj spec.pools.volumeClaimTemplate.spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.volumeClaimTemplate.spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.readiness</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.readiness.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.readiness.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.readiness.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.readiness.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.readiness.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.serviceMetadata</code><ul> <li><code>fn withConsoleServiceAnnotations(consoleServiceAnnotations)</code></li> <li><code>fn withConsoleServiceAnnotationsMixin(consoleServiceAnnotations)</code></li> <li><code>fn withConsoleServiceLabels(consoleServiceLabels)</code></li> <li><code>fn withConsoleServiceLabelsMixin(consoleServiceLabels)</code></li> <li><code>fn withMinioServiceAnnotations(minioServiceAnnotations)</code></li> <li><code>fn withMinioServiceAnnotationsMixin(minioServiceAnnotations)</code></li> <li><code>fn withMinioServiceLabels(minioServiceLabels)</code></li> <li><code>fn withMinioServiceLabelsMixin(minioServiceLabels)</code></li> </ul> </li> <li><code>obj spec.sideCars</code><ul> <li><code>fn withContainers(containers)</code></li> <li><code>fn withContainersMixin(containers)</code></li> <li><code>fn withVolumeClaimTemplates(volumeClaimTemplates)</code></li> <li><code>fn withVolumeClaimTemplatesMixin(volumeClaimTemplates)</code></li> <li><code>fn withVolumes(volumes)</code></li> <li><code>fn withVolumesMixin(volumes)</code></li> <li><code>obj spec.sideCars.containers</code><ul> <li><code>fn withArgs(args)</code></li> <li><code>fn withArgsMixin(args)</code></li> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> <li><code>fn withEnv(env)</code></li> <li><code>fn withEnvFrom(envFrom)</code></li> <li><code>fn withEnvFromMixin(envFrom)</code></li> <li><code>fn withEnvMixin(env)</code></li> <li><code>fn withImage(image)</code></li> <li><code>fn withImagePullPolicy(imagePullPolicy)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withResizePolicy(resizePolicy)</code></li> <li><code>fn withResizePolicyMixin(resizePolicy)</code></li> <li><code>fn withRestartPolicy(restartPolicy)</code></li> <li><code>fn withStdin(stdin)</code></li> <li><code>fn withStdinOnce(stdinOnce)</code></li> <li><code>fn withTerminationMessagePath(terminationMessagePath)</code></li> <li><code>fn withTerminationMessagePolicy(terminationMessagePolicy)</code></li> <li><code>fn withTty(tty)</code></li> <li><code>fn withVolumeDevices(volumeDevices)</code></li> <li><code>fn withVolumeDevicesMixin(volumeDevices)</code></li> <li><code>fn withVolumeMounts(volumeMounts)</code></li> <li><code>fn withVolumeMountsMixin(volumeMounts)</code></li> <li><code>fn withWorkingDir(workingDir)</code></li> <li><code>obj spec.sideCars.containers.env</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj spec.sideCars.containers.env.valueFrom</code><ul> <li><code>obj spec.sideCars.containers.env.valueFrom.configMapKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.env.valueFrom.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.env.valueFrom.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.env.valueFrom.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.envFrom</code><ul> <li><code>fn withPrefix(prefix)</code></li> <li><code>obj spec.sideCars.containers.envFrom.configMapRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.envFrom.secretRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle</code><ul> <li><code>obj spec.sideCars.containers.lifecycle.postStart</code><ul> <li><code>obj spec.sideCars.containers.lifecycle.postStart.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle.postStart.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.sideCars.containers.lifecycle.postStart.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle.postStart.sleep</code><ul> <li><code>fn withSeconds(seconds)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle.postStart.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle.preStop</code><ul> <li><code>obj spec.sideCars.containers.lifecycle.preStop.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle.preStop.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.sideCars.containers.lifecycle.preStop.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle.preStop.sleep</code><ul> <li><code>fn withSeconds(seconds)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle.preStop.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.livenessProbe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.sideCars.containers.livenessProbe.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.livenessProbe.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.livenessProbe.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.sideCars.containers.livenessProbe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.livenessProbe.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.ports</code><ul> <li><code>fn withContainerPort(containerPort)</code></li> <li><code>fn withHostIP(hostIP)</code></li> <li><code>fn withHostPort(hostPort)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.readinessProbe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.sideCars.containers.readinessProbe.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.readinessProbe.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.readinessProbe.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.sideCars.containers.readinessProbe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.readinessProbe.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.resizePolicy</code><ul> <li><code>fn withResourceName(resourceName)</code></li> <li><code>fn withRestartPolicy(restartPolicy)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.resources</code><ul> <li><code>fn withClaims(claims)</code></li> <li><code>fn withClaimsMixin(claims)</code></li> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> <li><code>obj spec.sideCars.containers.resources.claims</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.securityContext</code><ul> <li><code>fn withAllowPrivilegeEscalation(allowPrivilegeEscalation)</code></li> <li><code>fn withPrivileged(privileged)</code></li> <li><code>fn withProcMount(procMount)</code></li> <li><code>fn withReadOnlyRootFilesystem(readOnlyRootFilesystem)</code></li> <li><code>fn withRunAsGroup(runAsGroup)</code></li> <li><code>fn withRunAsNonRoot(runAsNonRoot)</code></li> <li><code>fn withRunAsUser(runAsUser)</code></li> <li><code>obj spec.sideCars.containers.securityContext.capabilities</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withDrop(drop)</code></li> <li><code>fn withDropMixin(drop)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.securityContext.seLinuxOptions</code><ul> <li><code>fn withLevel(level)</code></li> <li><code>fn withRole(role)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUser(user)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.securityContext.seccompProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.securityContext.windowsOptions</code><ul> <li><code>fn withGmsaCredentialSpec(gmsaCredentialSpec)</code></li> <li><code>fn withGmsaCredentialSpecName(gmsaCredentialSpecName)</code></li> <li><code>fn withHostProcess(hostProcess)</code></li> <li><code>fn withRunAsUserName(runAsUserName)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.startupProbe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.sideCars.containers.startupProbe.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.startupProbe.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.startupProbe.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.sideCars.containers.startupProbe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.startupProbe.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.volumeDevices</code><ul> <li><code>fn withDevicePath(devicePath)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.volumeMounts</code><ul> <li><code>fn withMountPath(mountPath)</code></li> <li><code>fn withMountPropagation(mountPropagation)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSubPath(subPath)</code></li> <li><code>fn withSubPathExpr(subPathExpr)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.resources</code><ul> <li><code>fn withClaims(claims)</code></li> <li><code>fn withClaimsMixin(claims)</code></li> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> <li><code>obj spec.sideCars.resources.claims</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumeClaimTemplates</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.sideCars.volumeClaimTemplates.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumeClaimTemplates.spec</code><ul> <li><code>fn withAccessModes(accessModes)</code></li> <li><code>fn withAccessModesMixin(accessModes)</code></li> <li><code>fn withStorageClassName(storageClassName)</code></li> <li><code>fn withVolumeAttributesClassName(volumeAttributesClassName)</code></li> <li><code>fn withVolumeMode(volumeMode)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>obj spec.sideCars.volumeClaimTemplates.spec.dataSource</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumeClaimTemplates.spec.dataSourceRef</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumeClaimTemplates.spec.resources</code><ul> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumeClaimTemplates.spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.sideCars.volumeClaimTemplates.spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes</code><ul> <li><code>fn withName(name)</code></li> <li><code>obj spec.sideCars.volumes.awsElasticBlockStore</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withPartition(partition)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeID(volumeID)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.azureDisk</code><ul> <li><code>fn withCachingMode(cachingMode)</code></li> <li><code>fn withDiskName(diskName)</code></li> <li><code>fn withDiskURI(diskURI)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.azureFile</code><ul> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSecretName(secretName)</code></li> <li><code>fn withShareName(shareName)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.cephfs</code><ul> <li><code>fn withMonitors(monitors)</code></li> <li><code>fn withMonitorsMixin(monitors)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSecretFile(secretFile)</code></li> <li><code>fn withUser(user)</code></li> <li><code>obj spec.sideCars.volumes.cephfs.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.cinder</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeID(volumeID)</code></li> <li><code>obj spec.sideCars.volumes.cinder.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.configMap</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>obj spec.sideCars.volumes.configMap.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.csi</code><ul> <li><code>fn withDriver(driver)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeAttributes(volumeAttributes)</code></li> <li><code>fn withVolumeAttributesMixin(volumeAttributes)</code></li> <li><code>obj spec.sideCars.volumes.csi.nodePublishSecretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.downwardAPI</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>obj spec.sideCars.volumes.downwardAPI.items</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> <li><code>obj spec.sideCars.volumes.downwardAPI.items.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.downwardAPI.items.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.emptyDir</code><ul> <li><code>fn withMedium(medium)</code></li> <li><code>fn withSizeLimit(sizeLimit)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.ephemeral</code><ul> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate</code><ul> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec</code><ul> <li><code>fn withAccessModes(accessModes)</code></li> <li><code>fn withAccessModesMixin(accessModes)</code></li> <li><code>fn withStorageClassName(storageClassName)</code></li> <li><code>fn withVolumeAttributesClassName(volumeAttributesClassName)</code></li> <li><code>fn withVolumeMode(volumeMode)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSource</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.resources</code><ul> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.fc</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withLun(lun)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withTargetWWNs(targetWWNs)</code></li> <li><code>fn withTargetWWNsMixin(targetWWNs)</code></li> <li><code>fn withWwids(wwids)</code></li> <li><code>fn withWwidsMixin(wwids)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.flexVolume</code><ul> <li><code>fn withDriver(driver)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withOptions(options)</code></li> <li><code>fn withOptionsMixin(options)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>obj spec.sideCars.volumes.flexVolume.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.flocker</code><ul> <li><code>fn withDatasetName(datasetName)</code></li> <li><code>fn withDatasetUUID(datasetUUID)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.gcePersistentDisk</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withPartition(partition)</code></li> <li><code>fn withPdName(pdName)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.gitRepo</code><ul> <li><code>fn withDirectory(directory)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRevision(revision)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.glusterfs</code><ul> <li><code>fn withEndpoints(endpoints)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.hostPath</code><ul> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.iscsi</code><ul> <li><code>fn withChapAuthDiscovery(chapAuthDiscovery)</code></li> <li><code>fn withChapAuthSession(chapAuthSession)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withInitiatorName(initiatorName)</code></li> <li><code>fn withIqn(iqn)</code></li> <li><code>fn withIscsiInterface(iscsiInterface)</code></li> <li><code>fn withLun(lun)</code></li> <li><code>fn withPortals(portals)</code></li> <li><code>fn withPortalsMixin(portals)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withTargetPortal(targetPortal)</code></li> <li><code>obj spec.sideCars.volumes.iscsi.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.nfs</code><ul> <li><code>fn withPath(path)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withServer(server)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.persistentVolumeClaim</code><ul> <li><code>fn withClaimName(claimName)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.photonPersistentDisk</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withPdID(pdID)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.portworxVolume</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeID(volumeID)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.projected</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withSources(sources)</code></li> <li><code>fn withSourcesMixin(sources)</code></li> <li><code>obj spec.sideCars.volumes.projected.sources</code><ul> <li><code>obj spec.sideCars.volumes.projected.sources.clusterTrustBundle</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withSignerName(signerName)</code></li> <li><code>obj spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.projected.sources.configMap</code><ul> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>obj spec.sideCars.volumes.projected.sources.configMap.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.projected.sources.downwardAPI</code><ul> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>obj spec.sideCars.volumes.projected.sources.downwardAPI.items</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> <li><code>obj spec.sideCars.volumes.projected.sources.downwardAPI.items.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.projected.sources.downwardAPI.items.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.projected.sources.secret</code><ul> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>obj spec.sideCars.volumes.projected.sources.secret.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.projected.sources.serviceAccountToken</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withExpirationSeconds(expirationSeconds)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.quobyte</code><ul> <li><code>fn withGroup(group)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withRegistry(registry)</code></li> <li><code>fn withTenant(tenant)</code></li> <li><code>fn withUser(user)</code></li> <li><code>fn withVolume(volume)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.rbd</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withImage(image)</code></li> <li><code>fn withKeyring(keyring)</code></li> <li><code>fn withMonitors(monitors)</code></li> <li><code>fn withMonitorsMixin(monitors)</code></li> <li><code>fn withPool(pool)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withUser(user)</code></li> <li><code>obj spec.sideCars.volumes.rbd.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.scaleIO</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withGateway(gateway)</code></li> <li><code>fn withProtectionDomain(protectionDomain)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSslEnabled(sslEnabled)</code></li> <li><code>fn withStorageMode(storageMode)</code></li> <li><code>fn withStoragePool(storagePool)</code></li> <li><code>fn withSystem(system)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>obj spec.sideCars.volumes.scaleIO.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.secret</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>fn withSecretName(secretName)</code></li> <li><code>obj spec.sideCars.volumes.secret.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.storageos</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>fn withVolumeNamespace(volumeNamespace)</code></li> <li><code>obj spec.sideCars.volumes.storageos.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.vsphereVolume</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withStoragePolicyID(storagePolicyID)</code></li> <li><code>fn withStoragePolicyName(storagePolicyName)</code></li> <li><code>fn withVolumePath(volumePath)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.startup</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.startup.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.startup.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.startup.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.startup.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.startup.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.users</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"v5.0.15/minio/v2/tenant/#fields","title":"Fields","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Tenant</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-scheduler","title":"obj scheduler","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-schedulerwithname","title":"fn scheduler.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-spec","title":"obj spec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithadditionalvolumemounts","title":"fn spec.withAdditionalVolumeMounts","text":"<pre><code>withAdditionalVolumeMounts(additionalVolumeMounts)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithadditionalvolumemountsmixin","title":"fn spec.withAdditionalVolumeMountsMixin","text":"<pre><code>withAdditionalVolumeMountsMixin(additionalVolumeMounts)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithadditionalvolumes","title":"fn spec.withAdditionalVolumes","text":"<pre><code>withAdditionalVolumes(additionalVolumes)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithadditionalvolumesmixin","title":"fn spec.withAdditionalVolumesMixin","text":"<pre><code>withAdditionalVolumesMixin(additionalVolumes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithbuckets","title":"fn spec.withBuckets","text":"<pre><code>withBuckets(buckets)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithbucketsmixin","title":"fn spec.withBucketsMixin","text":"<pre><code>withBucketsMixin(buckets)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithenv","title":"fn spec.withEnv","text":"<pre><code>withEnv(env)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithenvmixin","title":"fn spec.withEnvMixin","text":"<pre><code>withEnvMixin(env)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithexternalcacertsecret","title":"fn spec.withExternalCaCertSecret","text":"<pre><code>withExternalCaCertSecret(externalCaCertSecret)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithexternalcacertsecretmixin","title":"fn spec.withExternalCaCertSecretMixin","text":"<pre><code>withExternalCaCertSecretMixin(externalCaCertSecret)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithexternalcertsecret","title":"fn spec.withExternalCertSecret","text":"<pre><code>withExternalCertSecret(externalCertSecret)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithexternalcertsecretmixin","title":"fn spec.withExternalCertSecretMixin","text":"<pre><code>withExternalCertSecretMixin(externalCertSecret)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithexternalclientcertsecrets","title":"fn spec.withExternalClientCertSecrets","text":"<pre><code>withExternalClientCertSecrets(externalClientCertSecrets)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithexternalclientcertsecretsmixin","title":"fn spec.withExternalClientCertSecretsMixin","text":"<pre><code>withExternalClientCertSecretsMixin(externalClientCertSecrets)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithimage","title":"fn spec.withImage","text":"<pre><code>withImage(image)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithimagepullpolicy","title":"fn spec.withImagePullPolicy","text":"<pre><code>withImagePullPolicy(imagePullPolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithinitcontainers","title":"fn spec.withInitContainers","text":"<pre><code>withInitContainers(initContainers)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithinitcontainersmixin","title":"fn spec.withInitContainersMixin","text":"<pre><code>withInitContainersMixin(initContainers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithmountpath","title":"fn spec.withMountPath","text":"<pre><code>withMountPath(mountPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithpodmanagementpolicy","title":"fn spec.withPodManagementPolicy","text":"<pre><code>withPodManagementPolicy(podManagementPolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithpools","title":"fn spec.withPools","text":"<pre><code>withPools(pools)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithpoolsmixin","title":"fn spec.withPoolsMixin","text":"<pre><code>withPoolsMixin(pools)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithpriorityclassname","title":"fn spec.withPriorityClassName","text":"<pre><code>withPriorityClassName(priorityClassName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithprometheusoperator","title":"fn spec.withPrometheusOperator","text":"<pre><code>withPrometheusOperator(prometheusOperator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithrequestautocert","title":"fn spec.withRequestAutoCert","text":"<pre><code>withRequestAutoCert(requestAutoCert)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithserviceaccountname","title":"fn spec.withServiceAccountName","text":"<pre><code>withServiceAccountName(serviceAccountName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithsubpath","title":"fn spec.withSubPath","text":"<pre><code>withSubPath(subPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithusers","title":"fn spec.withUsers","text":"<pre><code>withUsers(users)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specwithusersmixin","title":"fn spec.withUsersMixin","text":"<pre><code>withUsersMixin(users)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumemounts","title":"obj spec.additionalVolumeMounts","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumemountswithmountpath","title":"fn spec.additionalVolumeMounts.withMountPath","text":"<pre><code>withMountPath(mountPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumemountswithmountpropagation","title":"fn spec.additionalVolumeMounts.withMountPropagation","text":"<pre><code>withMountPropagation(mountPropagation)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumemountswithname","title":"fn spec.additionalVolumeMounts.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumemountswithreadonly","title":"fn spec.additionalVolumeMounts.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumemountswithsubpath","title":"fn spec.additionalVolumeMounts.withSubPath","text":"<pre><code>withSubPath(subPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumemountswithsubpathexpr","title":"fn spec.additionalVolumeMounts.withSubPathExpr","text":"<pre><code>withSubPathExpr(subPathExpr)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumes","title":"obj spec.additionalVolumes","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumeswithname","title":"fn spec.additionalVolumes.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesawselasticblockstore","title":"obj spec.additionalVolumes.awsElasticBlockStore","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesawselasticblockstorewithfstype","title":"fn spec.additionalVolumes.awsElasticBlockStore.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesawselasticblockstorewithpartition","title":"fn spec.additionalVolumes.awsElasticBlockStore.withPartition","text":"<pre><code>withPartition(partition)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesawselasticblockstorewithreadonly","title":"fn spec.additionalVolumes.awsElasticBlockStore.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesawselasticblockstorewithvolumeid","title":"fn spec.additionalVolumes.awsElasticBlockStore.withVolumeID","text":"<pre><code>withVolumeID(volumeID)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesazuredisk","title":"obj spec.additionalVolumes.azureDisk","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesazurediskwithcachingmode","title":"fn spec.additionalVolumes.azureDisk.withCachingMode","text":"<pre><code>withCachingMode(cachingMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesazurediskwithdiskname","title":"fn spec.additionalVolumes.azureDisk.withDiskName","text":"<pre><code>withDiskName(diskName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesazurediskwithdiskuri","title":"fn spec.additionalVolumes.azureDisk.withDiskURI","text":"<pre><code>withDiskURI(diskURI)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesazurediskwithfstype","title":"fn spec.additionalVolumes.azureDisk.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesazurediskwithkind","title":"fn spec.additionalVolumes.azureDisk.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesazurediskwithreadonly","title":"fn spec.additionalVolumes.azureDisk.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesazurefile","title":"obj spec.additionalVolumes.azureFile","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesazurefilewithreadonly","title":"fn spec.additionalVolumes.azureFile.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesazurefilewithsecretname","title":"fn spec.additionalVolumes.azureFile.withSecretName","text":"<pre><code>withSecretName(secretName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesazurefilewithsharename","title":"fn spec.additionalVolumes.azureFile.withShareName","text":"<pre><code>withShareName(shareName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumescephfs","title":"obj spec.additionalVolumes.cephfs","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescephfswithmonitors","title":"fn spec.additionalVolumes.cephfs.withMonitors","text":"<pre><code>withMonitors(monitors)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescephfswithmonitorsmixin","title":"fn spec.additionalVolumes.cephfs.withMonitorsMixin","text":"<pre><code>withMonitorsMixin(monitors)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescephfswithpath","title":"fn spec.additionalVolumes.cephfs.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescephfswithreadonly","title":"fn spec.additionalVolumes.cephfs.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescephfswithsecretfile","title":"fn spec.additionalVolumes.cephfs.withSecretFile","text":"<pre><code>withSecretFile(secretFile)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescephfswithuser","title":"fn spec.additionalVolumes.cephfs.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumescephfssecretref","title":"obj spec.additionalVolumes.cephfs.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescephfssecretrefwithname","title":"fn spec.additionalVolumes.cephfs.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumescinder","title":"obj spec.additionalVolumes.cinder","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescinderwithfstype","title":"fn spec.additionalVolumes.cinder.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescinderwithreadonly","title":"fn spec.additionalVolumes.cinder.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescinderwithvolumeid","title":"fn spec.additionalVolumes.cinder.withVolumeID","text":"<pre><code>withVolumeID(volumeID)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumescindersecretref","title":"obj spec.additionalVolumes.cinder.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescindersecretrefwithname","title":"fn spec.additionalVolumes.cinder.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesconfigmap","title":"obj spec.additionalVolumes.configMap","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesconfigmapwithdefaultmode","title":"fn spec.additionalVolumes.configMap.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesconfigmapwithitems","title":"fn spec.additionalVolumes.configMap.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesconfigmapwithitemsmixin","title":"fn spec.additionalVolumes.configMap.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesconfigmapwithname","title":"fn spec.additionalVolumes.configMap.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesconfigmapwithoptional","title":"fn spec.additionalVolumes.configMap.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesconfigmapitems","title":"obj spec.additionalVolumes.configMap.items","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesconfigmapitemswithkey","title":"fn spec.additionalVolumes.configMap.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesconfigmapitemswithmode","title":"fn spec.additionalVolumes.configMap.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesconfigmapitemswithpath","title":"fn spec.additionalVolumes.configMap.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumescsi","title":"obj spec.additionalVolumes.csi","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescsiwithdriver","title":"fn spec.additionalVolumes.csi.withDriver","text":"<pre><code>withDriver(driver)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescsiwithfstype","title":"fn spec.additionalVolumes.csi.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescsiwithreadonly","title":"fn spec.additionalVolumes.csi.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescsiwithvolumeattributes","title":"fn spec.additionalVolumes.csi.withVolumeAttributes","text":"<pre><code>withVolumeAttributes(volumeAttributes)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescsiwithvolumeattributesmixin","title":"fn spec.additionalVolumes.csi.withVolumeAttributesMixin","text":"<pre><code>withVolumeAttributesMixin(volumeAttributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumescsinodepublishsecretref","title":"obj spec.additionalVolumes.csi.nodePublishSecretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumescsinodepublishsecretrefwithname","title":"fn spec.additionalVolumes.csi.nodePublishSecretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesdownwardapi","title":"obj spec.additionalVolumes.downwardAPI","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiwithdefaultmode","title":"fn spec.additionalVolumes.downwardAPI.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiwithitems","title":"fn spec.additionalVolumes.downwardAPI.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiwithitemsmixin","title":"fn spec.additionalVolumes.downwardAPI.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesdownwardapiitems","title":"obj spec.additionalVolumes.downwardAPI.items","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiitemswithmode","title":"fn spec.additionalVolumes.downwardAPI.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiitemswithpath","title":"fn spec.additionalVolumes.downwardAPI.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesdownwardapiitemsfieldref","title":"obj spec.additionalVolumes.downwardAPI.items.fieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiitemsfieldrefwithapiversion","title":"fn spec.additionalVolumes.downwardAPI.items.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiitemsfieldrefwithfieldpath","title":"fn spec.additionalVolumes.downwardAPI.items.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesdownwardapiitemsresourcefieldref","title":"obj spec.additionalVolumes.downwardAPI.items.resourceFieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiitemsresourcefieldrefwithcontainername","title":"fn spec.additionalVolumes.downwardAPI.items.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiitemsresourcefieldrefwithdivisor","title":"fn spec.additionalVolumes.downwardAPI.items.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiitemsresourcefieldrefwithresource","title":"fn spec.additionalVolumes.downwardAPI.items.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesemptydir","title":"obj spec.additionalVolumes.emptyDir","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesemptydirwithmedium","title":"fn spec.additionalVolumes.emptyDir.withMedium","text":"<pre><code>withMedium(medium)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesemptydirwithsizelimit","title":"fn spec.additionalVolumes.emptyDir.withSizeLimit","text":"<pre><code>withSizeLimit(sizeLimit)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesephemeral","title":"obj spec.additionalVolumes.ephemeral","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplate","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplatemetadata","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithannotations","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithannotationsmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithfinalizers","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithfinalizersmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithlabels","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithlabelsmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithname","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithnamespace","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplatespec","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecwithaccessmodes","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.withAccessModes","text":"<pre><code>withAccessModes(accessModes)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecwithaccessmodesmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.withAccessModesMixin","text":"<pre><code>withAccessModesMixin(accessModes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecwithstorageclassname","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.withStorageClassName","text":"<pre><code>withStorageClassName(storageClassName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecwithvolumeattributesclassname","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.withVolumeAttributesClassName","text":"<pre><code>withVolumeAttributesClassName(volumeAttributesClassName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecwithvolumemode","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.withVolumeMode","text":"<pre><code>withVolumeMode(volumeMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecwithvolumename","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasource","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSource","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourcewithapigroup","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSource.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourcewithkind","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSource.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourcewithname","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSource.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourceref","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithapigroup","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithkind","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithname","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithnamespace","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplatespecresources","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.resources","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecresourceswithlimits","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecresourceswithlimitsmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecresourceswithrequests","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecresourceswithrequestsmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplatespecselector","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectorwithmatchexpressions","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectorwithmatchexpressionsmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectorwithmatchlabels","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectorwithmatchlabelsmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplatespecselectormatchexpressions","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithkey","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithoperator","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithvalues","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithvaluesmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesfc","title":"obj spec.additionalVolumes.fc","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesfcwithfstype","title":"fn spec.additionalVolumes.fc.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesfcwithlun","title":"fn spec.additionalVolumes.fc.withLun","text":"<pre><code>withLun(lun)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesfcwithreadonly","title":"fn spec.additionalVolumes.fc.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesfcwithtargetwwns","title":"fn spec.additionalVolumes.fc.withTargetWWNs","text":"<pre><code>withTargetWWNs(targetWWNs)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesfcwithtargetwwnsmixin","title":"fn spec.additionalVolumes.fc.withTargetWWNsMixin","text":"<pre><code>withTargetWWNsMixin(targetWWNs)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesfcwithwwids","title":"fn spec.additionalVolumes.fc.withWwids","text":"<pre><code>withWwids(wwids)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesfcwithwwidsmixin","title":"fn spec.additionalVolumes.fc.withWwidsMixin","text":"<pre><code>withWwidsMixin(wwids)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesflexvolume","title":"obj spec.additionalVolumes.flexVolume","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesflexvolumewithdriver","title":"fn spec.additionalVolumes.flexVolume.withDriver","text":"<pre><code>withDriver(driver)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesflexvolumewithfstype","title":"fn spec.additionalVolumes.flexVolume.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesflexvolumewithoptions","title":"fn spec.additionalVolumes.flexVolume.withOptions","text":"<pre><code>withOptions(options)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesflexvolumewithoptionsmixin","title":"fn spec.additionalVolumes.flexVolume.withOptionsMixin","text":"<pre><code>withOptionsMixin(options)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesflexvolumewithreadonly","title":"fn spec.additionalVolumes.flexVolume.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesflexvolumesecretref","title":"obj spec.additionalVolumes.flexVolume.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesflexvolumesecretrefwithname","title":"fn spec.additionalVolumes.flexVolume.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesflocker","title":"obj spec.additionalVolumes.flocker","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesflockerwithdatasetname","title":"fn spec.additionalVolumes.flocker.withDatasetName","text":"<pre><code>withDatasetName(datasetName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesflockerwithdatasetuuid","title":"fn spec.additionalVolumes.flocker.withDatasetUUID","text":"<pre><code>withDatasetUUID(datasetUUID)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesgcepersistentdisk","title":"obj spec.additionalVolumes.gcePersistentDisk","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesgcepersistentdiskwithfstype","title":"fn spec.additionalVolumes.gcePersistentDisk.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesgcepersistentdiskwithpartition","title":"fn spec.additionalVolumes.gcePersistentDisk.withPartition","text":"<pre><code>withPartition(partition)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesgcepersistentdiskwithpdname","title":"fn spec.additionalVolumes.gcePersistentDisk.withPdName","text":"<pre><code>withPdName(pdName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesgcepersistentdiskwithreadonly","title":"fn spec.additionalVolumes.gcePersistentDisk.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesgitrepo","title":"obj spec.additionalVolumes.gitRepo","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesgitrepowithdirectory","title":"fn spec.additionalVolumes.gitRepo.withDirectory","text":"<pre><code>withDirectory(directory)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesgitrepowithrepository","title":"fn spec.additionalVolumes.gitRepo.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesgitrepowithrevision","title":"fn spec.additionalVolumes.gitRepo.withRevision","text":"<pre><code>withRevision(revision)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesglusterfs","title":"obj spec.additionalVolumes.glusterfs","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesglusterfswithendpoints","title":"fn spec.additionalVolumes.glusterfs.withEndpoints","text":"<pre><code>withEndpoints(endpoints)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesglusterfswithpath","title":"fn spec.additionalVolumes.glusterfs.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesglusterfswithreadonly","title":"fn spec.additionalVolumes.glusterfs.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumeshostpath","title":"obj spec.additionalVolumes.hostPath","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumeshostpathwithpath","title":"fn spec.additionalVolumes.hostPath.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumeshostpathwithtype","title":"fn spec.additionalVolumes.hostPath.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesiscsi","title":"obj spec.additionalVolumes.iscsi","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithchapauthdiscovery","title":"fn spec.additionalVolumes.iscsi.withChapAuthDiscovery","text":"<pre><code>withChapAuthDiscovery(chapAuthDiscovery)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithchapauthsession","title":"fn spec.additionalVolumes.iscsi.withChapAuthSession","text":"<pre><code>withChapAuthSession(chapAuthSession)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithfstype","title":"fn spec.additionalVolumes.iscsi.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithinitiatorname","title":"fn spec.additionalVolumes.iscsi.withInitiatorName","text":"<pre><code>withInitiatorName(initiatorName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithiqn","title":"fn spec.additionalVolumes.iscsi.withIqn","text":"<pre><code>withIqn(iqn)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithiscsiinterface","title":"fn spec.additionalVolumes.iscsi.withIscsiInterface","text":"<pre><code>withIscsiInterface(iscsiInterface)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithlun","title":"fn spec.additionalVolumes.iscsi.withLun","text":"<pre><code>withLun(lun)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithportals","title":"fn spec.additionalVolumes.iscsi.withPortals","text":"<pre><code>withPortals(portals)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithportalsmixin","title":"fn spec.additionalVolumes.iscsi.withPortalsMixin","text":"<pre><code>withPortalsMixin(portals)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithreadonly","title":"fn spec.additionalVolumes.iscsi.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithtargetportal","title":"fn spec.additionalVolumes.iscsi.withTargetPortal","text":"<pre><code>withTargetPortal(targetPortal)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesiscsisecretref","title":"obj spec.additionalVolumes.iscsi.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesiscsisecretrefwithname","title":"fn spec.additionalVolumes.iscsi.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesnfs","title":"obj spec.additionalVolumes.nfs","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesnfswithpath","title":"fn spec.additionalVolumes.nfs.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesnfswithreadonly","title":"fn spec.additionalVolumes.nfs.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesnfswithserver","title":"fn spec.additionalVolumes.nfs.withServer","text":"<pre><code>withServer(server)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumespersistentvolumeclaim","title":"obj spec.additionalVolumes.persistentVolumeClaim","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumespersistentvolumeclaimwithclaimname","title":"fn spec.additionalVolumes.persistentVolumeClaim.withClaimName","text":"<pre><code>withClaimName(claimName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumespersistentvolumeclaimwithreadonly","title":"fn spec.additionalVolumes.persistentVolumeClaim.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesphotonpersistentdisk","title":"obj spec.additionalVolumes.photonPersistentDisk","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesphotonpersistentdiskwithfstype","title":"fn spec.additionalVolumes.photonPersistentDisk.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesphotonpersistentdiskwithpdid","title":"fn spec.additionalVolumes.photonPersistentDisk.withPdID","text":"<pre><code>withPdID(pdID)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesportworxvolume","title":"obj spec.additionalVolumes.portworxVolume","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesportworxvolumewithfstype","title":"fn spec.additionalVolumes.portworxVolume.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesportworxvolumewithreadonly","title":"fn spec.additionalVolumes.portworxVolume.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesportworxvolumewithvolumeid","title":"fn spec.additionalVolumes.portworxVolume.withVolumeID","text":"<pre><code>withVolumeID(volumeID)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesprojected","title":"obj spec.additionalVolumes.projected","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedwithdefaultmode","title":"fn spec.additionalVolumes.projected.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedwithsources","title":"fn spec.additionalVolumes.projected.withSources","text":"<pre><code>withSources(sources)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedwithsourcesmixin","title":"fn spec.additionalVolumes.projected.withSourcesMixin","text":"<pre><code>withSourcesMixin(sources)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesprojectedsources","title":"obj spec.additionalVolumes.projected.sources","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesclustertrustbundle","title":"obj spec.additionalVolumes.projected.sources.clusterTrustBundle","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlewithname","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlewithoptional","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlewithpath","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlewithsignername","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.withSignerName","text":"<pre><code>withSignerName(signerName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselector","title":"obj spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchexpressions","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchexpressionsmixin","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchlabels","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchlabelsmixin","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressions","title":"obj spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithkey","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithoperator","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithvalues","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithvaluesmixin","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesconfigmap","title":"obj spec.additionalVolumes.projected.sources.configMap","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesconfigmapwithitems","title":"fn spec.additionalVolumes.projected.sources.configMap.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesconfigmapwithitemsmixin","title":"fn spec.additionalVolumes.projected.sources.configMap.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesconfigmapwithname","title":"fn spec.additionalVolumes.projected.sources.configMap.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesconfigmapwithoptional","title":"fn spec.additionalVolumes.projected.sources.configMap.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesconfigmapitems","title":"obj spec.additionalVolumes.projected.sources.configMap.items","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesconfigmapitemswithkey","title":"fn spec.additionalVolumes.projected.sources.configMap.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesconfigmapitemswithmode","title":"fn spec.additionalVolumes.projected.sources.configMap.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesconfigmapitemswithpath","title":"fn spec.additionalVolumes.projected.sources.configMap.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesdownwardapi","title":"obj spec.additionalVolumes.projected.sources.downwardAPI","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiwithitems","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiwithitemsmixin","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesdownwardapiitems","title":"obj spec.additionalVolumes.projected.sources.downwardAPI.items","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiitemswithmode","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiitemswithpath","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesdownwardapiitemsfieldref","title":"obj spec.additionalVolumes.projected.sources.downwardAPI.items.fieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiitemsfieldrefwithapiversion","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.items.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiitemsfieldrefwithfieldpath","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.items.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesdownwardapiitemsresourcefieldref","title":"obj spec.additionalVolumes.projected.sources.downwardAPI.items.resourceFieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiitemsresourcefieldrefwithcontainername","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.items.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiitemsresourcefieldrefwithdivisor","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.items.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiitemsresourcefieldrefwithresource","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.items.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcessecret","title":"obj spec.additionalVolumes.projected.sources.secret","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcessecretwithitems","title":"fn spec.additionalVolumes.projected.sources.secret.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcessecretwithitemsmixin","title":"fn spec.additionalVolumes.projected.sources.secret.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcessecretwithname","title":"fn spec.additionalVolumes.projected.sources.secret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcessecretwithoptional","title":"fn spec.additionalVolumes.projected.sources.secret.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcessecretitems","title":"obj spec.additionalVolumes.projected.sources.secret.items","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcessecretitemswithkey","title":"fn spec.additionalVolumes.projected.sources.secret.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcessecretitemswithmode","title":"fn spec.additionalVolumes.projected.sources.secret.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcessecretitemswithpath","title":"fn spec.additionalVolumes.projected.sources.secret.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesserviceaccounttoken","title":"obj spec.additionalVolumes.projected.sources.serviceAccountToken","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesserviceaccounttokenwithaudience","title":"fn spec.additionalVolumes.projected.sources.serviceAccountToken.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesserviceaccounttokenwithexpirationseconds","title":"fn spec.additionalVolumes.projected.sources.serviceAccountToken.withExpirationSeconds","text":"<pre><code>withExpirationSeconds(expirationSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesserviceaccounttokenwithpath","title":"fn spec.additionalVolumes.projected.sources.serviceAccountToken.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesquobyte","title":"obj spec.additionalVolumes.quobyte","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesquobytewithgroup","title":"fn spec.additionalVolumes.quobyte.withGroup","text":"<pre><code>withGroup(group)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesquobytewithreadonly","title":"fn spec.additionalVolumes.quobyte.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesquobytewithregistry","title":"fn spec.additionalVolumes.quobyte.withRegistry","text":"<pre><code>withRegistry(registry)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesquobytewithtenant","title":"fn spec.additionalVolumes.quobyte.withTenant","text":"<pre><code>withTenant(tenant)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesquobytewithuser","title":"fn spec.additionalVolumes.quobyte.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesquobytewithvolume","title":"fn spec.additionalVolumes.quobyte.withVolume","text":"<pre><code>withVolume(volume)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesrbd","title":"obj spec.additionalVolumes.rbd","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesrbdwithfstype","title":"fn spec.additionalVolumes.rbd.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesrbdwithimage","title":"fn spec.additionalVolumes.rbd.withImage","text":"<pre><code>withImage(image)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesrbdwithkeyring","title":"fn spec.additionalVolumes.rbd.withKeyring","text":"<pre><code>withKeyring(keyring)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesrbdwithmonitors","title":"fn spec.additionalVolumes.rbd.withMonitors","text":"<pre><code>withMonitors(monitors)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesrbdwithmonitorsmixin","title":"fn spec.additionalVolumes.rbd.withMonitorsMixin","text":"<pre><code>withMonitorsMixin(monitors)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesrbdwithpool","title":"fn spec.additionalVolumes.rbd.withPool","text":"<pre><code>withPool(pool)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesrbdwithreadonly","title":"fn spec.additionalVolumes.rbd.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesrbdwithuser","title":"fn spec.additionalVolumes.rbd.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesrbdsecretref","title":"obj spec.additionalVolumes.rbd.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesrbdsecretrefwithname","title":"fn spec.additionalVolumes.rbd.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesscaleio","title":"obj spec.additionalVolumes.scaleIO","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithfstype","title":"fn spec.additionalVolumes.scaleIO.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithgateway","title":"fn spec.additionalVolumes.scaleIO.withGateway","text":"<pre><code>withGateway(gateway)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithprotectiondomain","title":"fn spec.additionalVolumes.scaleIO.withProtectionDomain","text":"<pre><code>withProtectionDomain(protectionDomain)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithreadonly","title":"fn spec.additionalVolumes.scaleIO.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithsslenabled","title":"fn spec.additionalVolumes.scaleIO.withSslEnabled","text":"<pre><code>withSslEnabled(sslEnabled)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithstoragemode","title":"fn spec.additionalVolumes.scaleIO.withStorageMode","text":"<pre><code>withStorageMode(storageMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithstoragepool","title":"fn spec.additionalVolumes.scaleIO.withStoragePool","text":"<pre><code>withStoragePool(storagePool)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithsystem","title":"fn spec.additionalVolumes.scaleIO.withSystem","text":"<pre><code>withSystem(system)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithvolumename","title":"fn spec.additionalVolumes.scaleIO.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesscaleiosecretref","title":"obj spec.additionalVolumes.scaleIO.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesscaleiosecretrefwithname","title":"fn spec.additionalVolumes.scaleIO.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumessecret","title":"obj spec.additionalVolumes.secret","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumessecretwithdefaultmode","title":"fn spec.additionalVolumes.secret.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumessecretwithitems","title":"fn spec.additionalVolumes.secret.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumessecretwithitemsmixin","title":"fn spec.additionalVolumes.secret.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumessecretwithoptional","title":"fn spec.additionalVolumes.secret.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumessecretwithsecretname","title":"fn spec.additionalVolumes.secret.withSecretName","text":"<pre><code>withSecretName(secretName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumessecretitems","title":"obj spec.additionalVolumes.secret.items","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumessecretitemswithkey","title":"fn spec.additionalVolumes.secret.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumessecretitemswithmode","title":"fn spec.additionalVolumes.secret.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumessecretitemswithpath","title":"fn spec.additionalVolumes.secret.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesstorageos","title":"obj spec.additionalVolumes.storageos","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesstorageoswithfstype","title":"fn spec.additionalVolumes.storageos.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesstorageoswithreadonly","title":"fn spec.additionalVolumes.storageos.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesstorageoswithvolumename","title":"fn spec.additionalVolumes.storageos.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesstorageoswithvolumenamespace","title":"fn spec.additionalVolumes.storageos.withVolumeNamespace","text":"<pre><code>withVolumeNamespace(volumeNamespace)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesstorageossecretref","title":"obj spec.additionalVolumes.storageos.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesstorageossecretrefwithname","title":"fn spec.additionalVolumes.storageos.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specadditionalvolumesvspherevolume","title":"obj spec.additionalVolumes.vsphereVolume","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesvspherevolumewithfstype","title":"fn spec.additionalVolumes.vsphereVolume.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesvspherevolumewithstoragepolicyid","title":"fn spec.additionalVolumes.vsphereVolume.withStoragePolicyID","text":"<pre><code>withStoragePolicyID(storagePolicyID)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesvspherevolumewithstoragepolicyname","title":"fn spec.additionalVolumes.vsphereVolume.withStoragePolicyName","text":"<pre><code>withStoragePolicyName(storagePolicyName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specadditionalvolumesvspherevolumewithvolumepath","title":"fn spec.additionalVolumes.vsphereVolume.withVolumePath","text":"<pre><code>withVolumePath(volumePath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specbuckets","title":"obj spec.buckets","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specbucketswithname","title":"fn spec.buckets.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specbucketswithobjectlock","title":"fn spec.buckets.withObjectLock","text":"<pre><code>withObjectLock(objectLock)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specbucketswithregion","title":"fn spec.buckets.withRegion","text":"<pre><code>withRegion(region)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speccertconfig","title":"obj spec.certConfig","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speccertconfigwithcommonname","title":"fn spec.certConfig.withCommonName","text":"<pre><code>withCommonName(commonName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speccertconfigwithdnsnames","title":"fn spec.certConfig.withDnsNames","text":"<pre><code>withDnsNames(dnsNames)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speccertconfigwithdnsnamesmixin","title":"fn spec.certConfig.withDnsNamesMixin","text":"<pre><code>withDnsNamesMixin(dnsNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speccertconfigwithorganizationname","title":"fn spec.certConfig.withOrganizationName","text":"<pre><code>withOrganizationName(organizationName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speccertconfigwithorganizationnamemixin","title":"fn spec.certConfig.withOrganizationNameMixin","text":"<pre><code>withOrganizationNameMixin(organizationName)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specconfiguration","title":"obj spec.configuration","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specconfigurationwithname","title":"fn spec.configuration.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speccredssecret","title":"obj spec.credsSecret","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speccredssecretwithname","title":"fn spec.credsSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specenv","title":"obj spec.env","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specenvwithname","title":"fn spec.env.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specenvwithvalue","title":"fn spec.env.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specenvvaluefrom","title":"obj spec.env.valueFrom","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specenvvaluefromconfigmapkeyref","title":"obj spec.env.valueFrom.configMapKeyRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specenvvaluefromconfigmapkeyrefwithkey","title":"fn spec.env.valueFrom.configMapKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specenvvaluefromconfigmapkeyrefwithname","title":"fn spec.env.valueFrom.configMapKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specenvvaluefromconfigmapkeyrefwithoptional","title":"fn spec.env.valueFrom.configMapKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specenvvaluefromfieldref","title":"obj spec.env.valueFrom.fieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specenvvaluefromfieldrefwithapiversion","title":"fn spec.env.valueFrom.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specenvvaluefromfieldrefwithfieldpath","title":"fn spec.env.valueFrom.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specenvvaluefromresourcefieldref","title":"obj spec.env.valueFrom.resourceFieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specenvvaluefromresourcefieldrefwithcontainername","title":"fn spec.env.valueFrom.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specenvvaluefromresourcefieldrefwithdivisor","title":"fn spec.env.valueFrom.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specenvvaluefromresourcefieldrefwithresource","title":"fn spec.env.valueFrom.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specenvvaluefromsecretkeyref","title":"obj spec.env.valueFrom.secretKeyRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specenvvaluefromsecretkeyrefwithkey","title":"fn spec.env.valueFrom.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specenvvaluefromsecretkeyrefwithname","title":"fn spec.env.valueFrom.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specenvvaluefromsecretkeyrefwithoptional","title":"fn spec.env.valueFrom.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specexposeservices","title":"obj spec.exposeServices","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specexposeserviceswithconsole","title":"fn spec.exposeServices.withConsole","text":"<pre><code>withConsole(console)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specexposeserviceswithminio","title":"fn spec.exposeServices.withMinio","text":"<pre><code>withMinio(minio)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specexternalcacertsecret","title":"obj spec.externalCaCertSecret","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specexternalcacertsecretwithname","title":"fn spec.externalCaCertSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specexternalcacertsecretwithtype","title":"fn spec.externalCaCertSecret.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specexternalcertsecret","title":"obj spec.externalCertSecret","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specexternalcertsecretwithname","title":"fn spec.externalCertSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specexternalcertsecretwithtype","title":"fn spec.externalCertSecret.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specexternalclientcertsecret","title":"obj spec.externalClientCertSecret","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specexternalclientcertsecretwithname","title":"fn spec.externalClientCertSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specexternalclientcertsecretwithtype","title":"fn spec.externalClientCertSecret.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specexternalclientcertsecrets","title":"obj spec.externalClientCertSecrets","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specexternalclientcertsecretswithname","title":"fn spec.externalClientCertSecrets.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specexternalclientcertsecretswithtype","title":"fn spec.externalClientCertSecrets.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specfeatures","title":"obj spec.features","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specfeatureswithbucketdns","title":"fn spec.features.withBucketDNS","text":"<pre><code>withBucketDNS(bucketDNS)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specfeatureswithenablesftp","title":"fn spec.features.withEnableSFTP","text":"<pre><code>withEnableSFTP(enableSFTP)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specfeaturesdomains","title":"obj spec.features.domains","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specfeaturesdomainswithconsole","title":"fn spec.features.domains.withConsole","text":"<pre><code>withConsole(console)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specfeaturesdomainswithminio","title":"fn spec.features.domains.withMinio","text":"<pre><code>withMinio(minio)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specfeaturesdomainswithminiomixin","title":"fn spec.features.domains.withMinioMixin","text":"<pre><code>withMinioMixin(minio)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specimagepullsecret","title":"obj spec.imagePullSecret","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specimagepullsecretwithname","title":"fn spec.imagePullSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainers","title":"obj spec.initContainers","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithargs","title":"fn spec.initContainers.withArgs","text":"<pre><code>withArgs(args)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithargsmixin","title":"fn spec.initContainers.withArgsMixin","text":"<pre><code>withArgsMixin(args)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithcommand","title":"fn spec.initContainers.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithcommandmixin","title":"fn spec.initContainers.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithenv","title":"fn spec.initContainers.withEnv","text":"<pre><code>withEnv(env)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithenvfrom","title":"fn spec.initContainers.withEnvFrom","text":"<pre><code>withEnvFrom(envFrom)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithenvfrommixin","title":"fn spec.initContainers.withEnvFromMixin","text":"<pre><code>withEnvFromMixin(envFrom)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithenvmixin","title":"fn spec.initContainers.withEnvMixin","text":"<pre><code>withEnvMixin(env)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithimage","title":"fn spec.initContainers.withImage","text":"<pre><code>withImage(image)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithimagepullpolicy","title":"fn spec.initContainers.withImagePullPolicy","text":"<pre><code>withImagePullPolicy(imagePullPolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithname","title":"fn spec.initContainers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithports","title":"fn spec.initContainers.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithportsmixin","title":"fn spec.initContainers.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithresizepolicy","title":"fn spec.initContainers.withResizePolicy","text":"<pre><code>withResizePolicy(resizePolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithresizepolicymixin","title":"fn spec.initContainers.withResizePolicyMixin","text":"<pre><code>withResizePolicyMixin(resizePolicy)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithrestartpolicy","title":"fn spec.initContainers.withRestartPolicy","text":"<pre><code>withRestartPolicy(restartPolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithstdin","title":"fn spec.initContainers.withStdin","text":"<pre><code>withStdin(stdin)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithstdinonce","title":"fn spec.initContainers.withStdinOnce","text":"<pre><code>withStdinOnce(stdinOnce)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithterminationmessagepath","title":"fn spec.initContainers.withTerminationMessagePath","text":"<pre><code>withTerminationMessagePath(terminationMessagePath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithterminationmessagepolicy","title":"fn spec.initContainers.withTerminationMessagePolicy","text":"<pre><code>withTerminationMessagePolicy(terminationMessagePolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithtty","title":"fn spec.initContainers.withTty","text":"<pre><code>withTty(tty)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithvolumedevices","title":"fn spec.initContainers.withVolumeDevices","text":"<pre><code>withVolumeDevices(volumeDevices)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithvolumedevicesmixin","title":"fn spec.initContainers.withVolumeDevicesMixin","text":"<pre><code>withVolumeDevicesMixin(volumeDevices)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithvolumemounts","title":"fn spec.initContainers.withVolumeMounts","text":"<pre><code>withVolumeMounts(volumeMounts)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithvolumemountsmixin","title":"fn spec.initContainers.withVolumeMountsMixin","text":"<pre><code>withVolumeMountsMixin(volumeMounts)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerswithworkingdir","title":"fn spec.initContainers.withWorkingDir","text":"<pre><code>withWorkingDir(workingDir)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersenv","title":"obj spec.initContainers.env","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvwithname","title":"fn spec.initContainers.env.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvwithvalue","title":"fn spec.initContainers.env.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersenvvaluefrom","title":"obj spec.initContainers.env.valueFrom","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersenvvaluefromconfigmapkeyref","title":"obj spec.initContainers.env.valueFrom.configMapKeyRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvvaluefromconfigmapkeyrefwithkey","title":"fn spec.initContainers.env.valueFrom.configMapKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvvaluefromconfigmapkeyrefwithname","title":"fn spec.initContainers.env.valueFrom.configMapKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvvaluefromconfigmapkeyrefwithoptional","title":"fn spec.initContainers.env.valueFrom.configMapKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersenvvaluefromfieldref","title":"obj spec.initContainers.env.valueFrom.fieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvvaluefromfieldrefwithapiversion","title":"fn spec.initContainers.env.valueFrom.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvvaluefromfieldrefwithfieldpath","title":"fn spec.initContainers.env.valueFrom.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersenvvaluefromresourcefieldref","title":"obj spec.initContainers.env.valueFrom.resourceFieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvvaluefromresourcefieldrefwithcontainername","title":"fn spec.initContainers.env.valueFrom.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvvaluefromresourcefieldrefwithdivisor","title":"fn spec.initContainers.env.valueFrom.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvvaluefromresourcefieldrefwithresource","title":"fn spec.initContainers.env.valueFrom.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersenvvaluefromsecretkeyref","title":"obj spec.initContainers.env.valueFrom.secretKeyRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvvaluefromsecretkeyrefwithkey","title":"fn spec.initContainers.env.valueFrom.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvvaluefromsecretkeyrefwithname","title":"fn spec.initContainers.env.valueFrom.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvvaluefromsecretkeyrefwithoptional","title":"fn spec.initContainers.env.valueFrom.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersenvfrom","title":"obj spec.initContainers.envFrom","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvfromwithprefix","title":"fn spec.initContainers.envFrom.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersenvfromconfigmapref","title":"obj spec.initContainers.envFrom.configMapRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvfromconfigmaprefwithname","title":"fn spec.initContainers.envFrom.configMapRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvfromconfigmaprefwithoptional","title":"fn spec.initContainers.envFrom.configMapRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersenvfromsecretref","title":"obj spec.initContainers.envFrom.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvfromsecretrefwithname","title":"fn spec.initContainers.envFrom.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersenvfromsecretrefwithoptional","title":"fn spec.initContainers.envFrom.secretRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslifecycle","title":"obj spec.initContainers.lifecycle","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslifecyclepoststart","title":"obj spec.initContainers.lifecycle.postStart","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslifecyclepoststartexec","title":"obj spec.initContainers.lifecycle.postStart.exec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststartexecwithcommand","title":"fn spec.initContainers.lifecycle.postStart.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststartexecwithcommandmixin","title":"fn spec.initContainers.lifecycle.postStart.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslifecyclepoststarthttpget","title":"obj spec.initContainers.lifecycle.postStart.httpGet","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgetwithhost","title":"fn spec.initContainers.lifecycle.postStart.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgetwithhttpheaders","title":"fn spec.initContainers.lifecycle.postStart.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgetwithhttpheadersmixin","title":"fn spec.initContainers.lifecycle.postStart.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgetwithpath","title":"fn spec.initContainers.lifecycle.postStart.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgetwithport","title":"fn spec.initContainers.lifecycle.postStart.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgetwithscheme","title":"fn spec.initContainers.lifecycle.postStart.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslifecyclepoststarthttpgethttpheaders","title":"obj spec.initContainers.lifecycle.postStart.httpGet.httpHeaders","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgethttpheaderswithname","title":"fn spec.initContainers.lifecycle.postStart.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgethttpheaderswithvalue","title":"fn spec.initContainers.lifecycle.postStart.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslifecyclepoststartsleep","title":"obj spec.initContainers.lifecycle.postStart.sleep","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststartsleepwithseconds","title":"fn spec.initContainers.lifecycle.postStart.sleep.withSeconds","text":"<pre><code>withSeconds(seconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslifecyclepoststarttcpsocket","title":"obj spec.initContainers.lifecycle.postStart.tcpSocket","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarttcpsocketwithhost","title":"fn spec.initContainers.lifecycle.postStart.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarttcpsocketwithport","title":"fn spec.initContainers.lifecycle.postStart.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslifecycleprestop","title":"obj spec.initContainers.lifecycle.preStop","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslifecycleprestopexec","title":"obj spec.initContainers.lifecycle.preStop.exec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecycleprestopexecwithcommand","title":"fn spec.initContainers.lifecycle.preStop.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecycleprestopexecwithcommandmixin","title":"fn spec.initContainers.lifecycle.preStop.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslifecycleprestophttpget","title":"obj spec.initContainers.lifecycle.preStop.httpGet","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgetwithhost","title":"fn spec.initContainers.lifecycle.preStop.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgetwithhttpheaders","title":"fn spec.initContainers.lifecycle.preStop.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgetwithhttpheadersmixin","title":"fn spec.initContainers.lifecycle.preStop.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgetwithpath","title":"fn spec.initContainers.lifecycle.preStop.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgetwithport","title":"fn spec.initContainers.lifecycle.preStop.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgetwithscheme","title":"fn spec.initContainers.lifecycle.preStop.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslifecycleprestophttpgethttpheaders","title":"obj spec.initContainers.lifecycle.preStop.httpGet.httpHeaders","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgethttpheaderswithname","title":"fn spec.initContainers.lifecycle.preStop.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgethttpheaderswithvalue","title":"fn spec.initContainers.lifecycle.preStop.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslifecycleprestopsleep","title":"obj spec.initContainers.lifecycle.preStop.sleep","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecycleprestopsleepwithseconds","title":"fn spec.initContainers.lifecycle.preStop.sleep.withSeconds","text":"<pre><code>withSeconds(seconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslifecycleprestoptcpsocket","title":"obj spec.initContainers.lifecycle.preStop.tcpSocket","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecycleprestoptcpsocketwithhost","title":"fn spec.initContainers.lifecycle.preStop.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslifecycleprestoptcpsocketwithport","title":"fn spec.initContainers.lifecycle.preStop.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslivenessprobe","title":"obj spec.initContainers.livenessProbe","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobewithfailurethreshold","title":"fn spec.initContainers.livenessProbe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobewithinitialdelayseconds","title":"fn spec.initContainers.livenessProbe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobewithperiodseconds","title":"fn spec.initContainers.livenessProbe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobewithsuccessthreshold","title":"fn spec.initContainers.livenessProbe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobewithterminationgraceperiodseconds","title":"fn spec.initContainers.livenessProbe.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobewithtimeoutseconds","title":"fn spec.initContainers.livenessProbe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslivenessprobeexec","title":"obj spec.initContainers.livenessProbe.exec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobeexecwithcommand","title":"fn spec.initContainers.livenessProbe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobeexecwithcommandmixin","title":"fn spec.initContainers.livenessProbe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslivenessprobegrpc","title":"obj spec.initContainers.livenessProbe.grpc","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobegrpcwithport","title":"fn spec.initContainers.livenessProbe.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobegrpcwithservice","title":"fn spec.initContainers.livenessProbe.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslivenessprobehttpget","title":"obj spec.initContainers.livenessProbe.httpGet","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgetwithhost","title":"fn spec.initContainers.livenessProbe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgetwithhttpheaders","title":"fn spec.initContainers.livenessProbe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgetwithhttpheadersmixin","title":"fn spec.initContainers.livenessProbe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgetwithpath","title":"fn spec.initContainers.livenessProbe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgetwithport","title":"fn spec.initContainers.livenessProbe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgetwithscheme","title":"fn spec.initContainers.livenessProbe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslivenessprobehttpgethttpheaders","title":"obj spec.initContainers.livenessProbe.httpGet.httpHeaders","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgethttpheaderswithname","title":"fn spec.initContainers.livenessProbe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgethttpheaderswithvalue","title":"fn spec.initContainers.livenessProbe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerslivenessprobetcpsocket","title":"obj spec.initContainers.livenessProbe.tcpSocket","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobetcpsocketwithhost","title":"fn spec.initContainers.livenessProbe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerslivenessprobetcpsocketwithport","title":"fn spec.initContainers.livenessProbe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersports","title":"obj spec.initContainers.ports","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersportswithcontainerport","title":"fn spec.initContainers.ports.withContainerPort","text":"<pre><code>withContainerPort(containerPort)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersportswithhostip","title":"fn spec.initContainers.ports.withHostIP","text":"<pre><code>withHostIP(hostIP)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersportswithhostport","title":"fn spec.initContainers.ports.withHostPort","text":"<pre><code>withHostPort(hostPort)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersportswithname","title":"fn spec.initContainers.ports.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersportswithprotocol","title":"fn spec.initContainers.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersreadinessprobe","title":"obj spec.initContainers.readinessProbe","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobewithfailurethreshold","title":"fn spec.initContainers.readinessProbe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobewithinitialdelayseconds","title":"fn spec.initContainers.readinessProbe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobewithperiodseconds","title":"fn spec.initContainers.readinessProbe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobewithsuccessthreshold","title":"fn spec.initContainers.readinessProbe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobewithterminationgraceperiodseconds","title":"fn spec.initContainers.readinessProbe.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobewithtimeoutseconds","title":"fn spec.initContainers.readinessProbe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersreadinessprobeexec","title":"obj spec.initContainers.readinessProbe.exec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobeexecwithcommand","title":"fn spec.initContainers.readinessProbe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobeexecwithcommandmixin","title":"fn spec.initContainers.readinessProbe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersreadinessprobegrpc","title":"obj spec.initContainers.readinessProbe.grpc","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobegrpcwithport","title":"fn spec.initContainers.readinessProbe.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobegrpcwithservice","title":"fn spec.initContainers.readinessProbe.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersreadinessprobehttpget","title":"obj spec.initContainers.readinessProbe.httpGet","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgetwithhost","title":"fn spec.initContainers.readinessProbe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgetwithhttpheaders","title":"fn spec.initContainers.readinessProbe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgetwithhttpheadersmixin","title":"fn spec.initContainers.readinessProbe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgetwithpath","title":"fn spec.initContainers.readinessProbe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgetwithport","title":"fn spec.initContainers.readinessProbe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgetwithscheme","title":"fn spec.initContainers.readinessProbe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersreadinessprobehttpgethttpheaders","title":"obj spec.initContainers.readinessProbe.httpGet.httpHeaders","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgethttpheaderswithname","title":"fn spec.initContainers.readinessProbe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgethttpheaderswithvalue","title":"fn spec.initContainers.readinessProbe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersreadinessprobetcpsocket","title":"obj spec.initContainers.readinessProbe.tcpSocket","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobetcpsocketwithhost","title":"fn spec.initContainers.readinessProbe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersreadinessprobetcpsocketwithport","title":"fn spec.initContainers.readinessProbe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersresizepolicy","title":"obj spec.initContainers.resizePolicy","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersresizepolicywithresourcename","title":"fn spec.initContainers.resizePolicy.withResourceName","text":"<pre><code>withResourceName(resourceName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersresizepolicywithrestartpolicy","title":"fn spec.initContainers.resizePolicy.withRestartPolicy","text":"<pre><code>withRestartPolicy(restartPolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersresources","title":"obj spec.initContainers.resources","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersresourceswithclaims","title":"fn spec.initContainers.resources.withClaims","text":"<pre><code>withClaims(claims)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersresourceswithclaimsmixin","title":"fn spec.initContainers.resources.withClaimsMixin","text":"<pre><code>withClaimsMixin(claims)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersresourceswithlimits","title":"fn spec.initContainers.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersresourceswithlimitsmixin","title":"fn spec.initContainers.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersresourceswithrequests","title":"fn spec.initContainers.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersresourceswithrequestsmixin","title":"fn spec.initContainers.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersresourcesclaims","title":"obj spec.initContainers.resources.claims","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersresourcesclaimswithname","title":"fn spec.initContainers.resources.claims.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerssecuritycontext","title":"obj spec.initContainers.securityContext","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwithallowprivilegeescalation","title":"fn spec.initContainers.securityContext.withAllowPrivilegeEscalation","text":"<pre><code>withAllowPrivilegeEscalation(allowPrivilegeEscalation)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwithprivileged","title":"fn spec.initContainers.securityContext.withPrivileged","text":"<pre><code>withPrivileged(privileged)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwithprocmount","title":"fn spec.initContainers.securityContext.withProcMount","text":"<pre><code>withProcMount(procMount)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwithreadonlyrootfilesystem","title":"fn spec.initContainers.securityContext.withReadOnlyRootFilesystem","text":"<pre><code>withReadOnlyRootFilesystem(readOnlyRootFilesystem)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwithrunasgroup","title":"fn spec.initContainers.securityContext.withRunAsGroup","text":"<pre><code>withRunAsGroup(runAsGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwithrunasnonroot","title":"fn spec.initContainers.securityContext.withRunAsNonRoot","text":"<pre><code>withRunAsNonRoot(runAsNonRoot)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwithrunasuser","title":"fn spec.initContainers.securityContext.withRunAsUser","text":"<pre><code>withRunAsUser(runAsUser)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerssecuritycontextcapabilities","title":"obj spec.initContainers.securityContext.capabilities","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextcapabilitieswithadd","title":"fn spec.initContainers.securityContext.capabilities.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextcapabilitieswithaddmixin","title":"fn spec.initContainers.securityContext.capabilities.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextcapabilitieswithdrop","title":"fn spec.initContainers.securityContext.capabilities.withDrop","text":"<pre><code>withDrop(drop)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextcapabilitieswithdropmixin","title":"fn spec.initContainers.securityContext.capabilities.withDropMixin","text":"<pre><code>withDropMixin(drop)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerssecuritycontextselinuxoptions","title":"obj spec.initContainers.securityContext.seLinuxOptions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextselinuxoptionswithlevel","title":"fn spec.initContainers.securityContext.seLinuxOptions.withLevel","text":"<pre><code>withLevel(level)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextselinuxoptionswithrole","title":"fn spec.initContainers.securityContext.seLinuxOptions.withRole","text":"<pre><code>withRole(role)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextselinuxoptionswithtype","title":"fn spec.initContainers.securityContext.seLinuxOptions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextselinuxoptionswithuser","title":"fn spec.initContainers.securityContext.seLinuxOptions.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerssecuritycontextseccompprofile","title":"obj spec.initContainers.securityContext.seccompProfile","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextseccompprofilewithlocalhostprofile","title":"fn spec.initContainers.securityContext.seccompProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextseccompprofilewithtype","title":"fn spec.initContainers.securityContext.seccompProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainerssecuritycontextwindowsoptions","title":"obj spec.initContainers.securityContext.windowsOptions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwindowsoptionswithgmsacredentialspec","title":"fn spec.initContainers.securityContext.windowsOptions.withGmsaCredentialSpec","text":"<pre><code>withGmsaCredentialSpec(gmsaCredentialSpec)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwindowsoptionswithgmsacredentialspecname","title":"fn spec.initContainers.securityContext.windowsOptions.withGmsaCredentialSpecName","text":"<pre><code>withGmsaCredentialSpecName(gmsaCredentialSpecName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwindowsoptionswithhostprocess","title":"fn spec.initContainers.securityContext.windowsOptions.withHostProcess","text":"<pre><code>withHostProcess(hostProcess)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwindowsoptionswithrunasusername","title":"fn spec.initContainers.securityContext.windowsOptions.withRunAsUserName","text":"<pre><code>withRunAsUserName(runAsUserName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersstartupprobe","title":"obj spec.initContainers.startupProbe","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobewithfailurethreshold","title":"fn spec.initContainers.startupProbe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobewithinitialdelayseconds","title":"fn spec.initContainers.startupProbe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobewithperiodseconds","title":"fn spec.initContainers.startupProbe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobewithsuccessthreshold","title":"fn spec.initContainers.startupProbe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobewithterminationgraceperiodseconds","title":"fn spec.initContainers.startupProbe.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobewithtimeoutseconds","title":"fn spec.initContainers.startupProbe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersstartupprobeexec","title":"obj spec.initContainers.startupProbe.exec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobeexecwithcommand","title":"fn spec.initContainers.startupProbe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobeexecwithcommandmixin","title":"fn spec.initContainers.startupProbe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersstartupprobegrpc","title":"obj spec.initContainers.startupProbe.grpc","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobegrpcwithport","title":"fn spec.initContainers.startupProbe.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobegrpcwithservice","title":"fn spec.initContainers.startupProbe.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersstartupprobehttpget","title":"obj spec.initContainers.startupProbe.httpGet","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgetwithhost","title":"fn spec.initContainers.startupProbe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgetwithhttpheaders","title":"fn spec.initContainers.startupProbe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgetwithhttpheadersmixin","title":"fn spec.initContainers.startupProbe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgetwithpath","title":"fn spec.initContainers.startupProbe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgetwithport","title":"fn spec.initContainers.startupProbe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgetwithscheme","title":"fn spec.initContainers.startupProbe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersstartupprobehttpgethttpheaders","title":"obj spec.initContainers.startupProbe.httpGet.httpHeaders","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgethttpheaderswithname","title":"fn spec.initContainers.startupProbe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgethttpheaderswithvalue","title":"fn spec.initContainers.startupProbe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersstartupprobetcpsocket","title":"obj spec.initContainers.startupProbe.tcpSocket","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobetcpsocketwithhost","title":"fn spec.initContainers.startupProbe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersstartupprobetcpsocketwithport","title":"fn spec.initContainers.startupProbe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersvolumedevices","title":"obj spec.initContainers.volumeDevices","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersvolumedeviceswithdevicepath","title":"fn spec.initContainers.volumeDevices.withDevicePath","text":"<pre><code>withDevicePath(devicePath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersvolumedeviceswithname","title":"fn spec.initContainers.volumeDevices.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specinitcontainersvolumemounts","title":"obj spec.initContainers.volumeMounts","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersvolumemountswithmountpath","title":"fn spec.initContainers.volumeMounts.withMountPath","text":"<pre><code>withMountPath(mountPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersvolumemountswithmountpropagation","title":"fn spec.initContainers.volumeMounts.withMountPropagation","text":"<pre><code>withMountPropagation(mountPropagation)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersvolumemountswithname","title":"fn spec.initContainers.volumeMounts.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersvolumemountswithreadonly","title":"fn spec.initContainers.volumeMounts.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersvolumemountswithsubpath","title":"fn spec.initContainers.volumeMounts.withSubPath","text":"<pre><code>withSubPath(subPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specinitcontainersvolumemountswithsubpathexpr","title":"fn spec.initContainers.volumeMounts.withSubPathExpr","text":"<pre><code>withSubPathExpr(subPathExpr)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckes","title":"obj spec.kes","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithannotations","title":"fn spec.kes.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithannotationsmixin","title":"fn spec.kes.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithenv","title":"fn spec.kes.withEnv","text":"<pre><code>withEnv(env)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithenvmixin","title":"fn spec.kes.withEnvMixin","text":"<pre><code>withEnvMixin(env)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithgcpcredentialsecretname","title":"fn spec.kes.withGcpCredentialSecretName","text":"<pre><code>withGcpCredentialSecretName(gcpCredentialSecretName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithgcpworkloadidentitypool","title":"fn spec.kes.withGcpWorkloadIdentityPool","text":"<pre><code>withGcpWorkloadIdentityPool(gcpWorkloadIdentityPool)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithimage","title":"fn spec.kes.withImage","text":"<pre><code>withImage(image)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithimagepullpolicy","title":"fn spec.kes.withImagePullPolicy","text":"<pre><code>withImagePullPolicy(imagePullPolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithkeyname","title":"fn spec.kes.withKeyName","text":"<pre><code>withKeyName(keyName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithlabels","title":"fn spec.kes.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithlabelsmixin","title":"fn spec.kes.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithnodeselector","title":"fn spec.kes.withNodeSelector","text":"<pre><code>withNodeSelector(nodeSelector)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithnodeselectormixin","title":"fn spec.kes.withNodeSelectorMixin","text":"<pre><code>withNodeSelectorMixin(nodeSelector)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithreplicas","title":"fn spec.kes.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithserviceaccountname","title":"fn spec.kes.withServiceAccountName","text":"<pre><code>withServiceAccountName(serviceAccountName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithtolerations","title":"fn spec.kes.withTolerations","text":"<pre><code>withTolerations(tolerations)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithtolerationsmixin","title":"fn spec.kes.withTolerationsMixin","text":"<pre><code>withTolerationsMixin(tolerations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithtopologyspreadconstraints","title":"fn spec.kes.withTopologySpreadConstraints","text":"<pre><code>withTopologySpreadConstraints(topologySpreadConstraints)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeswithtopologyspreadconstraintsmixin","title":"fn spec.kes.withTopologySpreadConstraintsMixin","text":"<pre><code>withTopologySpreadConstraintsMixin(topologySpreadConstraints)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinity","title":"obj spec.kes.affinity","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitynodeaffinity","title":"obj spec.kes.affinity.nodeAffinity","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinitywithpreferredduringschedulingignoredduringexecution","title":"fn spec.kes.affinity.nodeAffinity.withPreferredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinitywithpreferredduringschedulingignoredduringexecutionmixin","title":"fn spec.kes.affinity.nodeAffinity.withPreferredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecution","title":"obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionwithweight","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreference","title":"obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchexpressions","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchexpressionsmixin","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchfields","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchFields","text":"<pre><code>withMatchFields(matchFields)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchfieldsmixin","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchFieldsMixin","text":"<pre><code>withMatchFieldsMixin(matchFields)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressions","title":"obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithkey","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithoperator","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithvalues","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfields","title":"obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithkey","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithoperator","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithvalues","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithvaluesmixin","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecution","title":"obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionwithnodeselectorterms","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNodeSelectorTerms","text":"<pre><code>withNodeSelectorTerms(nodeSelectorTerms)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionwithnodeselectortermsmixin","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNodeSelectorTermsMixin","text":"<pre><code>withNodeSelectorTermsMixin(nodeSelectorTerms)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectorterms","title":"obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchexpressions","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchexpressionsmixin","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchfields","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchFields","text":"<pre><code>withMatchFields(matchFields)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchfieldsmixin","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchFieldsMixin","text":"<pre><code>withMatchFieldsMixin(matchFields)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressions","title":"obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithkey","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithoperator","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithvalues","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfields","title":"obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithkey","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithoperator","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithvalues","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithvaluesmixin","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodaffinity","title":"obj spec.kes.affinity.podAffinity","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitywithpreferredduringschedulingignoredduringexecution","title":"fn spec.kes.affinity.podAffinity.withPreferredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitywithpreferredduringschedulingignoredduringexecutionmixin","title":"fn spec.kes.affinity.podAffinity.withPreferredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitywithrequiredduringschedulingignoredduringexecution","title":"fn spec.kes.affinity.podAffinity.withRequiredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitywithrequiredduringschedulingignoredduringexecutionmixin","title":"fn spec.kes.affinity.podAffinity.withRequiredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecution","title":"obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionwithweight","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinityterm","title":"obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeys","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeysmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeys","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeysmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespaces","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespacesmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithtopologykey","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselector","title":"obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabels","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressions","title":"obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselector","title":"obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabels","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressions","title":"obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecution","title":"obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeys","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeysmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeys","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeysmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithnamespaces","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithnamespacesmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithtopologykey","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselector","title":"obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabels","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressions","title":"obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselector","title":"obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabels","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressions","title":"obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodantiaffinity","title":"obj spec.kes.affinity.podAntiAffinity","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitywithpreferredduringschedulingignoredduringexecution","title":"fn spec.kes.affinity.podAntiAffinity.withPreferredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitywithpreferredduringschedulingignoredduringexecutionmixin","title":"fn spec.kes.affinity.podAntiAffinity.withPreferredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitywithrequiredduringschedulingignoredduringexecution","title":"fn spec.kes.affinity.podAntiAffinity.withRequiredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitywithrequiredduringschedulingignoredduringexecutionmixin","title":"fn spec.kes.affinity.podAntiAffinity.withRequiredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecution","title":"obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionwithweight","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinityterm","title":"obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeys","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeysmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeys","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeysmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespaces","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespacesmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithtopologykey","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselector","title":"obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabels","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressions","title":"obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselector","title":"obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabels","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressions","title":"obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecution","title":"obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeys","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeysmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeys","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeysmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithnamespaces","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithnamespacesmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithtopologykey","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselector","title":"obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabels","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressions","title":"obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselector","title":"obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabels","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressions","title":"obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesclientcertsecret","title":"obj spec.kes.clientCertSecret","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesclientcertsecretwithname","title":"fn spec.kes.clientCertSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesclientcertsecretwithtype","title":"fn spec.kes.clientCertSecret.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckescontainersecuritycontext","title":"obj spec.kes.containerSecurityContext","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextwithallowprivilegeescalation","title":"fn spec.kes.containerSecurityContext.withAllowPrivilegeEscalation","text":"<pre><code>withAllowPrivilegeEscalation(allowPrivilegeEscalation)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextwithprivileged","title":"fn spec.kes.containerSecurityContext.withPrivileged","text":"<pre><code>withPrivileged(privileged)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextwithprocmount","title":"fn spec.kes.containerSecurityContext.withProcMount","text":"<pre><code>withProcMount(procMount)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextwithreadonlyrootfilesystem","title":"fn spec.kes.containerSecurityContext.withReadOnlyRootFilesystem","text":"<pre><code>withReadOnlyRootFilesystem(readOnlyRootFilesystem)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextwithrunasgroup","title":"fn spec.kes.containerSecurityContext.withRunAsGroup","text":"<pre><code>withRunAsGroup(runAsGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextwithrunasnonroot","title":"fn spec.kes.containerSecurityContext.withRunAsNonRoot","text":"<pre><code>withRunAsNonRoot(runAsNonRoot)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextwithrunasuser","title":"fn spec.kes.containerSecurityContext.withRunAsUser","text":"<pre><code>withRunAsUser(runAsUser)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckescontainersecuritycontextcapabilities","title":"obj spec.kes.containerSecurityContext.capabilities","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextcapabilitieswithadd","title":"fn spec.kes.containerSecurityContext.capabilities.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextcapabilitieswithaddmixin","title":"fn spec.kes.containerSecurityContext.capabilities.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextcapabilitieswithdrop","title":"fn spec.kes.containerSecurityContext.capabilities.withDrop","text":"<pre><code>withDrop(drop)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextcapabilitieswithdropmixin","title":"fn spec.kes.containerSecurityContext.capabilities.withDropMixin","text":"<pre><code>withDropMixin(drop)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckescontainersecuritycontextselinuxoptions","title":"obj spec.kes.containerSecurityContext.seLinuxOptions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextselinuxoptionswithlevel","title":"fn spec.kes.containerSecurityContext.seLinuxOptions.withLevel","text":"<pre><code>withLevel(level)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextselinuxoptionswithrole","title":"fn spec.kes.containerSecurityContext.seLinuxOptions.withRole","text":"<pre><code>withRole(role)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextselinuxoptionswithtype","title":"fn spec.kes.containerSecurityContext.seLinuxOptions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextselinuxoptionswithuser","title":"fn spec.kes.containerSecurityContext.seLinuxOptions.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckescontainersecuritycontextseccompprofile","title":"obj spec.kes.containerSecurityContext.seccompProfile","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextseccompprofilewithlocalhostprofile","title":"fn spec.kes.containerSecurityContext.seccompProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextseccompprofilewithtype","title":"fn spec.kes.containerSecurityContext.seccompProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckescontainersecuritycontextwindowsoptions","title":"obj spec.kes.containerSecurityContext.windowsOptions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextwindowsoptionswithgmsacredentialspec","title":"fn spec.kes.containerSecurityContext.windowsOptions.withGmsaCredentialSpec","text":"<pre><code>withGmsaCredentialSpec(gmsaCredentialSpec)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextwindowsoptionswithgmsacredentialspecname","title":"fn spec.kes.containerSecurityContext.windowsOptions.withGmsaCredentialSpecName","text":"<pre><code>withGmsaCredentialSpecName(gmsaCredentialSpecName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextwindowsoptionswithhostprocess","title":"fn spec.kes.containerSecurityContext.windowsOptions.withHostProcess","text":"<pre><code>withHostProcess(hostProcess)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckescontainersecuritycontextwindowsoptionswithrunasusername","title":"fn spec.kes.containerSecurityContext.windowsOptions.withRunAsUserName","text":"<pre><code>withRunAsUserName(runAsUserName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesenv","title":"obj spec.kes.env","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesenvwithname","title":"fn spec.kes.env.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesenvwithvalue","title":"fn spec.kes.env.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesenvvaluefrom","title":"obj spec.kes.env.valueFrom","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesenvvaluefromconfigmapkeyref","title":"obj spec.kes.env.valueFrom.configMapKeyRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesenvvaluefromconfigmapkeyrefwithkey","title":"fn spec.kes.env.valueFrom.configMapKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesenvvaluefromconfigmapkeyrefwithname","title":"fn spec.kes.env.valueFrom.configMapKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesenvvaluefromconfigmapkeyrefwithoptional","title":"fn spec.kes.env.valueFrom.configMapKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesenvvaluefromfieldref","title":"obj spec.kes.env.valueFrom.fieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesenvvaluefromfieldrefwithapiversion","title":"fn spec.kes.env.valueFrom.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesenvvaluefromfieldrefwithfieldpath","title":"fn spec.kes.env.valueFrom.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesenvvaluefromresourcefieldref","title":"obj spec.kes.env.valueFrom.resourceFieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesenvvaluefromresourcefieldrefwithcontainername","title":"fn spec.kes.env.valueFrom.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesenvvaluefromresourcefieldrefwithdivisor","title":"fn spec.kes.env.valueFrom.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesenvvaluefromresourcefieldrefwithresource","title":"fn spec.kes.env.valueFrom.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesenvvaluefromsecretkeyref","title":"obj spec.kes.env.valueFrom.secretKeyRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesenvvaluefromsecretkeyrefwithkey","title":"fn spec.kes.env.valueFrom.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesenvvaluefromsecretkeyrefwithname","title":"fn spec.kes.env.valueFrom.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesenvvaluefromsecretkeyrefwithoptional","title":"fn spec.kes.env.valueFrom.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesexternalcertsecret","title":"obj spec.kes.externalCertSecret","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesexternalcertsecretwithname","title":"fn spec.kes.externalCertSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesexternalcertsecretwithtype","title":"fn spec.kes.externalCertSecret.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckeskessecret","title":"obj spec.kes.kesSecret","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckeskessecretwithname","title":"fn spec.kes.kesSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesresources","title":"obj spec.kes.resources","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesresourceswithclaims","title":"fn spec.kes.resources.withClaims","text":"<pre><code>withClaims(claims)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesresourceswithclaimsmixin","title":"fn spec.kes.resources.withClaimsMixin","text":"<pre><code>withClaimsMixin(claims)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesresourceswithlimits","title":"fn spec.kes.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesresourceswithlimitsmixin","title":"fn spec.kes.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesresourceswithrequests","title":"fn spec.kes.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesresourceswithrequestsmixin","title":"fn spec.kes.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckesresourcesclaims","title":"obj spec.kes.resources.claims","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckesresourcesclaimswithname","title":"fn spec.kes.resources.claims.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckessecuritycontext","title":"obj spec.kes.securityContext","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextwithfsgroup","title":"fn spec.kes.securityContext.withFsGroup","text":"<pre><code>withFsGroup(fsGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextwithfsgroupchangepolicy","title":"fn spec.kes.securityContext.withFsGroupChangePolicy","text":"<pre><code>withFsGroupChangePolicy(fsGroupChangePolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextwithrunasgroup","title":"fn spec.kes.securityContext.withRunAsGroup","text":"<pre><code>withRunAsGroup(runAsGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextwithrunasnonroot","title":"fn spec.kes.securityContext.withRunAsNonRoot","text":"<pre><code>withRunAsNonRoot(runAsNonRoot)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextwithrunasuser","title":"fn spec.kes.securityContext.withRunAsUser","text":"<pre><code>withRunAsUser(runAsUser)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextwithsupplementalgroups","title":"fn spec.kes.securityContext.withSupplementalGroups","text":"<pre><code>withSupplementalGroups(supplementalGroups)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextwithsupplementalgroupsmixin","title":"fn spec.kes.securityContext.withSupplementalGroupsMixin","text":"<pre><code>withSupplementalGroupsMixin(supplementalGroups)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextwithsysctls","title":"fn spec.kes.securityContext.withSysctls","text":"<pre><code>withSysctls(sysctls)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextwithsysctlsmixin","title":"fn spec.kes.securityContext.withSysctlsMixin","text":"<pre><code>withSysctlsMixin(sysctls)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckessecuritycontextselinuxoptions","title":"obj spec.kes.securityContext.seLinuxOptions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextselinuxoptionswithlevel","title":"fn spec.kes.securityContext.seLinuxOptions.withLevel","text":"<pre><code>withLevel(level)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextselinuxoptionswithrole","title":"fn spec.kes.securityContext.seLinuxOptions.withRole","text":"<pre><code>withRole(role)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextselinuxoptionswithtype","title":"fn spec.kes.securityContext.seLinuxOptions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextselinuxoptionswithuser","title":"fn spec.kes.securityContext.seLinuxOptions.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckessecuritycontextseccompprofile","title":"obj spec.kes.securityContext.seccompProfile","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextseccompprofilewithlocalhostprofile","title":"fn spec.kes.securityContext.seccompProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextseccompprofilewithtype","title":"fn spec.kes.securityContext.seccompProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckessecuritycontextsysctls","title":"obj spec.kes.securityContext.sysctls","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextsysctlswithname","title":"fn spec.kes.securityContext.sysctls.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextsysctlswithvalue","title":"fn spec.kes.securityContext.sysctls.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckessecuritycontextwindowsoptions","title":"obj spec.kes.securityContext.windowsOptions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextwindowsoptionswithgmsacredentialspec","title":"fn spec.kes.securityContext.windowsOptions.withGmsaCredentialSpec","text":"<pre><code>withGmsaCredentialSpec(gmsaCredentialSpec)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextwindowsoptionswithgmsacredentialspecname","title":"fn spec.kes.securityContext.windowsOptions.withGmsaCredentialSpecName","text":"<pre><code>withGmsaCredentialSpecName(gmsaCredentialSpecName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextwindowsoptionswithhostprocess","title":"fn spec.kes.securityContext.windowsOptions.withHostProcess","text":"<pre><code>withHostProcess(hostProcess)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckessecuritycontextwindowsoptionswithrunasusername","title":"fn spec.kes.securityContext.windowsOptions.withRunAsUserName","text":"<pre><code>withRunAsUserName(runAsUserName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckestolerations","title":"obj spec.kes.tolerations","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestolerationswitheffect","title":"fn spec.kes.tolerations.withEffect","text":"<pre><code>withEffect(effect)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestolerationswithkey","title":"fn spec.kes.tolerations.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestolerationswithoperator","title":"fn spec.kes.tolerations.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestolerationswithtolerationseconds","title":"fn spec.kes.tolerations.withTolerationSeconds","text":"<pre><code>withTolerationSeconds(tolerationSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestolerationswithvalue","title":"fn spec.kes.tolerations.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckestopologyspreadconstraints","title":"obj spec.kes.topologySpreadConstraints","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithmatchlabelkeys","title":"fn spec.kes.topologySpreadConstraints.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithmatchlabelkeysmixin","title":"fn spec.kes.topologySpreadConstraints.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithmaxskew","title":"fn spec.kes.topologySpreadConstraints.withMaxSkew","text":"<pre><code>withMaxSkew(maxSkew)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithmindomains","title":"fn spec.kes.topologySpreadConstraints.withMinDomains","text":"<pre><code>withMinDomains(minDomains)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithnodeaffinitypolicy","title":"fn spec.kes.topologySpreadConstraints.withNodeAffinityPolicy","text":"<pre><code>withNodeAffinityPolicy(nodeAffinityPolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithnodetaintspolicy","title":"fn spec.kes.topologySpreadConstraints.withNodeTaintsPolicy","text":"<pre><code>withNodeTaintsPolicy(nodeTaintsPolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithtopologykey","title":"fn spec.kes.topologySpreadConstraints.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithwhenunsatisfiable","title":"fn spec.kes.topologySpreadConstraints.withWhenUnsatisfiable","text":"<pre><code>withWhenUnsatisfiable(whenUnsatisfiable)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckestopologyspreadconstraintslabelselector","title":"obj spec.kes.topologySpreadConstraints.labelSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectorwithmatchexpressions","title":"fn spec.kes.topologySpreadConstraints.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectorwithmatchexpressionsmixin","title":"fn spec.kes.topologySpreadConstraints.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectorwithmatchlabels","title":"fn spec.kes.topologySpreadConstraints.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectorwithmatchlabelsmixin","title":"fn spec.kes.topologySpreadConstraints.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speckestopologyspreadconstraintslabelselectormatchexpressions","title":"obj spec.kes.topologySpreadConstraints.labelSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectormatchexpressionswithkey","title":"fn spec.kes.topologySpreadConstraints.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectormatchexpressionswithoperator","title":"fn spec.kes.topologySpreadConstraints.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectormatchexpressionswithvalues","title":"fn spec.kes.topologySpreadConstraints.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.topologySpreadConstraints.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speclifecycle","title":"obj spec.lifecycle","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-speclifecyclepoststart","title":"obj spec.lifecycle.postStart","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-speclifecyclepoststartexec","title":"obj spec.lifecycle.postStart.exec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecyclepoststartexecwithcommand","title":"fn spec.lifecycle.postStart.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecyclepoststartexecwithcommandmixin","title":"fn spec.lifecycle.postStart.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speclifecyclepoststarthttpget","title":"obj spec.lifecycle.postStart.httpGet","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecyclepoststarthttpgetwithhost","title":"fn spec.lifecycle.postStart.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecyclepoststarthttpgetwithhttpheaders","title":"fn spec.lifecycle.postStart.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecyclepoststarthttpgetwithhttpheadersmixin","title":"fn spec.lifecycle.postStart.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecyclepoststarthttpgetwithpath","title":"fn spec.lifecycle.postStart.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecyclepoststarthttpgetwithport","title":"fn spec.lifecycle.postStart.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecyclepoststarthttpgetwithscheme","title":"fn spec.lifecycle.postStart.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speclifecyclepoststarthttpgethttpheaders","title":"obj spec.lifecycle.postStart.httpGet.httpHeaders","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecyclepoststarthttpgethttpheaderswithname","title":"fn spec.lifecycle.postStart.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecyclepoststarthttpgethttpheaderswithvalue","title":"fn spec.lifecycle.postStart.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speclifecyclepoststarttcpsocket","title":"obj spec.lifecycle.postStart.tcpSocket","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecyclepoststarttcpsocketwithhost","title":"fn spec.lifecycle.postStart.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecyclepoststarttcpsocketwithport","title":"fn spec.lifecycle.postStart.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speclifecycleprestop","title":"obj spec.lifecycle.preStop","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-speclifecycleprestopexec","title":"obj spec.lifecycle.preStop.exec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecycleprestopexecwithcommand","title":"fn spec.lifecycle.preStop.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecycleprestopexecwithcommandmixin","title":"fn spec.lifecycle.preStop.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speclifecycleprestophttpget","title":"obj spec.lifecycle.preStop.httpGet","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecycleprestophttpgetwithhost","title":"fn spec.lifecycle.preStop.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecycleprestophttpgetwithhttpheaders","title":"fn spec.lifecycle.preStop.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecycleprestophttpgetwithhttpheadersmixin","title":"fn spec.lifecycle.preStop.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecycleprestophttpgetwithpath","title":"fn spec.lifecycle.preStop.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecycleprestophttpgetwithport","title":"fn spec.lifecycle.preStop.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecycleprestophttpgetwithscheme","title":"fn spec.lifecycle.preStop.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speclifecycleprestophttpgethttpheaders","title":"obj spec.lifecycle.preStop.httpGet.httpHeaders","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecycleprestophttpgethttpheaderswithname","title":"fn spec.lifecycle.preStop.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecycleprestophttpgethttpheaderswithvalue","title":"fn spec.lifecycle.preStop.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speclifecycleprestoptcpsocket","title":"obj spec.lifecycle.preStop.tcpSocket","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecycleprestoptcpsocketwithhost","title":"fn spec.lifecycle.preStop.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclifecycleprestoptcpsocketwithport","title":"fn spec.lifecycle.preStop.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specliveness","title":"obj spec.liveness","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesswithfailurethreshold","title":"fn spec.liveness.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesswithinitialdelayseconds","title":"fn spec.liveness.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesswithperiodseconds","title":"fn spec.liveness.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesswithsuccessthreshold","title":"fn spec.liveness.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesswithterminationgraceperiodseconds","title":"fn spec.liveness.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesswithtimeoutseconds","title":"fn spec.liveness.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speclivenessexec","title":"obj spec.liveness.exec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenessexecwithcommand","title":"fn spec.liveness.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenessexecwithcommandmixin","title":"fn spec.liveness.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speclivenessgrpc","title":"obj spec.liveness.grpc","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenessgrpcwithport","title":"fn spec.liveness.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenessgrpcwithservice","title":"fn spec.liveness.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speclivenesshttpget","title":"obj spec.liveness.httpGet","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesshttpgetwithhost","title":"fn spec.liveness.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesshttpgetwithhttpheaders","title":"fn spec.liveness.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesshttpgetwithhttpheadersmixin","title":"fn spec.liveness.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesshttpgetwithpath","title":"fn spec.liveness.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesshttpgetwithport","title":"fn spec.liveness.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesshttpgetwithscheme","title":"fn spec.liveness.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speclivenesshttpgethttpheaders","title":"obj spec.liveness.httpGet.httpHeaders","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesshttpgethttpheaderswithname","title":"fn spec.liveness.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesshttpgethttpheaderswithvalue","title":"fn spec.liveness.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speclivenesstcpsocket","title":"obj spec.liveness.tcpSocket","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesstcpsocketwithhost","title":"fn spec.liveness.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-speclivenesstcpsocketwithport","title":"fn spec.liveness.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-speclogging","title":"obj spec.logging","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specloggingwithanonymous","title":"fn spec.logging.withAnonymous","text":"<pre><code>withAnonymous(anonymous)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specloggingwithjson","title":"fn spec.logging.withJson","text":"<pre><code>withJson(json)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specloggingwithquiet","title":"fn spec.logging.withQuiet","text":"<pre><code>withQuiet(quiet)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpools","title":"obj spec.pools","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolswithannotations","title":"fn spec.pools.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolswithannotationsmixin","title":"fn spec.pools.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolswithlabels","title":"fn spec.pools.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolswithlabelsmixin","title":"fn spec.pools.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolswithname","title":"fn spec.pools.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolswithnodeselector","title":"fn spec.pools.withNodeSelector","text":"<pre><code>withNodeSelector(nodeSelector)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolswithnodeselectormixin","title":"fn spec.pools.withNodeSelectorMixin","text":"<pre><code>withNodeSelectorMixin(nodeSelector)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolswithreclaimstorage","title":"fn spec.pools.withReclaimStorage","text":"<pre><code>withReclaimStorage(reclaimStorage)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolswithruntimeclassname","title":"fn spec.pools.withRuntimeClassName","text":"<pre><code>withRuntimeClassName(runtimeClassName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolswithservers","title":"fn spec.pools.withServers","text":"<pre><code>withServers(servers)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolswithtolerations","title":"fn spec.pools.withTolerations","text":"<pre><code>withTolerations(tolerations)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolswithtolerationsmixin","title":"fn spec.pools.withTolerationsMixin","text":"<pre><code>withTolerationsMixin(tolerations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolswithtopologyspreadconstraints","title":"fn spec.pools.withTopologySpreadConstraints","text":"<pre><code>withTopologySpreadConstraints(topologySpreadConstraints)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolswithtopologyspreadconstraintsmixin","title":"fn spec.pools.withTopologySpreadConstraintsMixin","text":"<pre><code>withTopologySpreadConstraintsMixin(topologySpreadConstraints)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolswithvolumesperserver","title":"fn spec.pools.withVolumesPerServer","text":"<pre><code>withVolumesPerServer(volumesPerServer)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinity","title":"obj spec.pools.affinity","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinity","title":"obj spec.pools.affinity.nodeAffinity","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitywithpreferredduringschedulingignoredduringexecution","title":"fn spec.pools.affinity.nodeAffinity.withPreferredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitywithpreferredduringschedulingignoredduringexecutionmixin","title":"fn spec.pools.affinity.nodeAffinity.withPreferredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecution","title":"obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionwithweight","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreference","title":"obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchexpressions","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchexpressionsmixin","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchfields","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchFields","text":"<pre><code>withMatchFields(matchFields)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchfieldsmixin","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchFieldsMixin","text":"<pre><code>withMatchFieldsMixin(matchFields)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressions","title":"obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithkey","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithoperator","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithvalues","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfields","title":"obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithkey","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithoperator","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithvalues","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithvaluesmixin","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecution","title":"obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionwithnodeselectorterms","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNodeSelectorTerms","text":"<pre><code>withNodeSelectorTerms(nodeSelectorTerms)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionwithnodeselectortermsmixin","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNodeSelectorTermsMixin","text":"<pre><code>withNodeSelectorTermsMixin(nodeSelectorTerms)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectorterms","title":"obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchexpressions","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchexpressionsmixin","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchfields","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchFields","text":"<pre><code>withMatchFields(matchFields)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchfieldsmixin","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchFieldsMixin","text":"<pre><code>withMatchFieldsMixin(matchFields)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressions","title":"obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithkey","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithoperator","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithvalues","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfields","title":"obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithkey","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithoperator","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithvalues","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithvaluesmixin","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodaffinity","title":"obj spec.pools.affinity.podAffinity","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitywithpreferredduringschedulingignoredduringexecution","title":"fn spec.pools.affinity.podAffinity.withPreferredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitywithpreferredduringschedulingignoredduringexecutionmixin","title":"fn spec.pools.affinity.podAffinity.withPreferredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitywithrequiredduringschedulingignoredduringexecution","title":"fn spec.pools.affinity.podAffinity.withRequiredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitywithrequiredduringschedulingignoredduringexecutionmixin","title":"fn spec.pools.affinity.podAffinity.withRequiredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecution","title":"obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionwithweight","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinityterm","title":"obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeys","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeysmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeys","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeysmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespaces","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespacesmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithtopologykey","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselector","title":"obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabels","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressions","title":"obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselector","title":"obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabels","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressions","title":"obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecution","title":"obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeys","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeysmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeys","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeysmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithnamespaces","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithnamespacesmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithtopologykey","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselector","title":"obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabels","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressions","title":"obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselector","title":"obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabels","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressions","title":"obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinity","title":"obj spec.pools.affinity.podAntiAffinity","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitywithpreferredduringschedulingignoredduringexecution","title":"fn spec.pools.affinity.podAntiAffinity.withPreferredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitywithpreferredduringschedulingignoredduringexecutionmixin","title":"fn spec.pools.affinity.podAntiAffinity.withPreferredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitywithrequiredduringschedulingignoredduringexecution","title":"fn spec.pools.affinity.podAntiAffinity.withRequiredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitywithrequiredduringschedulingignoredduringexecutionmixin","title":"fn spec.pools.affinity.podAntiAffinity.withRequiredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecution","title":"obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionwithweight","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinityterm","title":"obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeys","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeysmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeys","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeysmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespaces","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespacesmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithtopologykey","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselector","title":"obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabels","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressions","title":"obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselector","title":"obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabels","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressions","title":"obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecution","title":"obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeys","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeysmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeys","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeysmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithnamespaces","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithnamespacesmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithtopologykey","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselector","title":"obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabels","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressions","title":"obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselector","title":"obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabels","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressions","title":"obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolscontainersecuritycontext","title":"obj spec.pools.containerSecurityContext","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwithallowprivilegeescalation","title":"fn spec.pools.containerSecurityContext.withAllowPrivilegeEscalation","text":"<pre><code>withAllowPrivilegeEscalation(allowPrivilegeEscalation)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwithprivileged","title":"fn spec.pools.containerSecurityContext.withPrivileged","text":"<pre><code>withPrivileged(privileged)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwithprocmount","title":"fn spec.pools.containerSecurityContext.withProcMount","text":"<pre><code>withProcMount(procMount)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwithreadonlyrootfilesystem","title":"fn spec.pools.containerSecurityContext.withReadOnlyRootFilesystem","text":"<pre><code>withReadOnlyRootFilesystem(readOnlyRootFilesystem)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwithrunasgroup","title":"fn spec.pools.containerSecurityContext.withRunAsGroup","text":"<pre><code>withRunAsGroup(runAsGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwithrunasnonroot","title":"fn spec.pools.containerSecurityContext.withRunAsNonRoot","text":"<pre><code>withRunAsNonRoot(runAsNonRoot)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwithrunasuser","title":"fn spec.pools.containerSecurityContext.withRunAsUser","text":"<pre><code>withRunAsUser(runAsUser)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolscontainersecuritycontextcapabilities","title":"obj spec.pools.containerSecurityContext.capabilities","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextcapabilitieswithadd","title":"fn spec.pools.containerSecurityContext.capabilities.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextcapabilitieswithaddmixin","title":"fn spec.pools.containerSecurityContext.capabilities.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextcapabilitieswithdrop","title":"fn spec.pools.containerSecurityContext.capabilities.withDrop","text":"<pre><code>withDrop(drop)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextcapabilitieswithdropmixin","title":"fn spec.pools.containerSecurityContext.capabilities.withDropMixin","text":"<pre><code>withDropMixin(drop)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolscontainersecuritycontextselinuxoptions","title":"obj spec.pools.containerSecurityContext.seLinuxOptions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextselinuxoptionswithlevel","title":"fn spec.pools.containerSecurityContext.seLinuxOptions.withLevel","text":"<pre><code>withLevel(level)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextselinuxoptionswithrole","title":"fn spec.pools.containerSecurityContext.seLinuxOptions.withRole","text":"<pre><code>withRole(role)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextselinuxoptionswithtype","title":"fn spec.pools.containerSecurityContext.seLinuxOptions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextselinuxoptionswithuser","title":"fn spec.pools.containerSecurityContext.seLinuxOptions.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolscontainersecuritycontextseccompprofile","title":"obj spec.pools.containerSecurityContext.seccompProfile","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextseccompprofilewithlocalhostprofile","title":"fn spec.pools.containerSecurityContext.seccompProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextseccompprofilewithtype","title":"fn spec.pools.containerSecurityContext.seccompProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolscontainersecuritycontextwindowsoptions","title":"obj spec.pools.containerSecurityContext.windowsOptions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwindowsoptionswithgmsacredentialspec","title":"fn spec.pools.containerSecurityContext.windowsOptions.withGmsaCredentialSpec","text":"<pre><code>withGmsaCredentialSpec(gmsaCredentialSpec)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwindowsoptionswithgmsacredentialspecname","title":"fn spec.pools.containerSecurityContext.windowsOptions.withGmsaCredentialSpecName","text":"<pre><code>withGmsaCredentialSpecName(gmsaCredentialSpecName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwindowsoptionswithhostprocess","title":"fn spec.pools.containerSecurityContext.windowsOptions.withHostProcess","text":"<pre><code>withHostProcess(hostProcess)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwindowsoptionswithrunasusername","title":"fn spec.pools.containerSecurityContext.windowsOptions.withRunAsUserName","text":"<pre><code>withRunAsUserName(runAsUserName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsresources","title":"obj spec.pools.resources","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsresourceswithclaims","title":"fn spec.pools.resources.withClaims","text":"<pre><code>withClaims(claims)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsresourceswithclaimsmixin","title":"fn spec.pools.resources.withClaimsMixin","text":"<pre><code>withClaimsMixin(claims)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsresourceswithlimits","title":"fn spec.pools.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsresourceswithlimitsmixin","title":"fn spec.pools.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsresourceswithrequests","title":"fn spec.pools.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsresourceswithrequestsmixin","title":"fn spec.pools.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsresourcesclaims","title":"obj spec.pools.resources.claims","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsresourcesclaimswithname","title":"fn spec.pools.resources.claims.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolssecuritycontext","title":"obj spec.pools.securityContext","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextwithfsgroup","title":"fn spec.pools.securityContext.withFsGroup","text":"<pre><code>withFsGroup(fsGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextwithfsgroupchangepolicy","title":"fn spec.pools.securityContext.withFsGroupChangePolicy","text":"<pre><code>withFsGroupChangePolicy(fsGroupChangePolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextwithrunasgroup","title":"fn spec.pools.securityContext.withRunAsGroup","text":"<pre><code>withRunAsGroup(runAsGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextwithrunasnonroot","title":"fn spec.pools.securityContext.withRunAsNonRoot","text":"<pre><code>withRunAsNonRoot(runAsNonRoot)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextwithrunasuser","title":"fn spec.pools.securityContext.withRunAsUser","text":"<pre><code>withRunAsUser(runAsUser)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextwithsupplementalgroups","title":"fn spec.pools.securityContext.withSupplementalGroups","text":"<pre><code>withSupplementalGroups(supplementalGroups)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextwithsupplementalgroupsmixin","title":"fn spec.pools.securityContext.withSupplementalGroupsMixin","text":"<pre><code>withSupplementalGroupsMixin(supplementalGroups)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextwithsysctls","title":"fn spec.pools.securityContext.withSysctls","text":"<pre><code>withSysctls(sysctls)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextwithsysctlsmixin","title":"fn spec.pools.securityContext.withSysctlsMixin","text":"<pre><code>withSysctlsMixin(sysctls)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolssecuritycontextselinuxoptions","title":"obj spec.pools.securityContext.seLinuxOptions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextselinuxoptionswithlevel","title":"fn spec.pools.securityContext.seLinuxOptions.withLevel","text":"<pre><code>withLevel(level)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextselinuxoptionswithrole","title":"fn spec.pools.securityContext.seLinuxOptions.withRole","text":"<pre><code>withRole(role)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextselinuxoptionswithtype","title":"fn spec.pools.securityContext.seLinuxOptions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextselinuxoptionswithuser","title":"fn spec.pools.securityContext.seLinuxOptions.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolssecuritycontextseccompprofile","title":"obj spec.pools.securityContext.seccompProfile","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextseccompprofilewithlocalhostprofile","title":"fn spec.pools.securityContext.seccompProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextseccompprofilewithtype","title":"fn spec.pools.securityContext.seccompProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolssecuritycontextsysctls","title":"obj spec.pools.securityContext.sysctls","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextsysctlswithname","title":"fn spec.pools.securityContext.sysctls.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextsysctlswithvalue","title":"fn spec.pools.securityContext.sysctls.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolssecuritycontextwindowsoptions","title":"obj spec.pools.securityContext.windowsOptions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextwindowsoptionswithgmsacredentialspec","title":"fn spec.pools.securityContext.windowsOptions.withGmsaCredentialSpec","text":"<pre><code>withGmsaCredentialSpec(gmsaCredentialSpec)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextwindowsoptionswithgmsacredentialspecname","title":"fn spec.pools.securityContext.windowsOptions.withGmsaCredentialSpecName","text":"<pre><code>withGmsaCredentialSpecName(gmsaCredentialSpecName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextwindowsoptionswithhostprocess","title":"fn spec.pools.securityContext.windowsOptions.withHostProcess","text":"<pre><code>withHostProcess(hostProcess)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolssecuritycontextwindowsoptionswithrunasusername","title":"fn spec.pools.securityContext.windowsOptions.withRunAsUserName","text":"<pre><code>withRunAsUserName(runAsUserName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolstolerations","title":"obj spec.pools.tolerations","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstolerationswitheffect","title":"fn spec.pools.tolerations.withEffect","text":"<pre><code>withEffect(effect)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstolerationswithkey","title":"fn spec.pools.tolerations.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstolerationswithoperator","title":"fn spec.pools.tolerations.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstolerationswithtolerationseconds","title":"fn spec.pools.tolerations.withTolerationSeconds","text":"<pre><code>withTolerationSeconds(tolerationSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstolerationswithvalue","title":"fn spec.pools.tolerations.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolstopologyspreadconstraints","title":"obj spec.pools.topologySpreadConstraints","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithmatchlabelkeys","title":"fn spec.pools.topologySpreadConstraints.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithmatchlabelkeysmixin","title":"fn spec.pools.topologySpreadConstraints.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithmaxskew","title":"fn spec.pools.topologySpreadConstraints.withMaxSkew","text":"<pre><code>withMaxSkew(maxSkew)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithmindomains","title":"fn spec.pools.topologySpreadConstraints.withMinDomains","text":"<pre><code>withMinDomains(minDomains)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithnodeaffinitypolicy","title":"fn spec.pools.topologySpreadConstraints.withNodeAffinityPolicy","text":"<pre><code>withNodeAffinityPolicy(nodeAffinityPolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithnodetaintspolicy","title":"fn spec.pools.topologySpreadConstraints.withNodeTaintsPolicy","text":"<pre><code>withNodeTaintsPolicy(nodeTaintsPolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithtopologykey","title":"fn spec.pools.topologySpreadConstraints.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithwhenunsatisfiable","title":"fn spec.pools.topologySpreadConstraints.withWhenUnsatisfiable","text":"<pre><code>withWhenUnsatisfiable(whenUnsatisfiable)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolstopologyspreadconstraintslabelselector","title":"obj spec.pools.topologySpreadConstraints.labelSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectorwithmatchexpressions","title":"fn spec.pools.topologySpreadConstraints.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectorwithmatchexpressionsmixin","title":"fn spec.pools.topologySpreadConstraints.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectorwithmatchlabels","title":"fn spec.pools.topologySpreadConstraints.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectorwithmatchlabelsmixin","title":"fn spec.pools.topologySpreadConstraints.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolstopologyspreadconstraintslabelselectormatchexpressions","title":"obj spec.pools.topologySpreadConstraints.labelSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectormatchexpressionswithkey","title":"fn spec.pools.topologySpreadConstraints.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectormatchexpressionswithoperator","title":"fn spec.pools.topologySpreadConstraints.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectormatchexpressionswithvalues","title":"fn spec.pools.topologySpreadConstraints.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.topologySpreadConstraints.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplate","title":"obj spec.pools.volumeClaimTemplate","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatewithapiversion","title":"fn spec.pools.volumeClaimTemplate.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatewithkind","title":"fn spec.pools.volumeClaimTemplate.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplatemetadata","title":"obj spec.pools.volumeClaimTemplate.metadata","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithannotations","title":"fn spec.pools.volumeClaimTemplate.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithannotationsmixin","title":"fn spec.pools.volumeClaimTemplate.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithfinalizers","title":"fn spec.pools.volumeClaimTemplate.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithfinalizersmixin","title":"fn spec.pools.volumeClaimTemplate.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithlabels","title":"fn spec.pools.volumeClaimTemplate.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithlabelsmixin","title":"fn spec.pools.volumeClaimTemplate.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithname","title":"fn spec.pools.volumeClaimTemplate.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithnamespace","title":"fn spec.pools.volumeClaimTemplate.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplatespec","title":"obj spec.pools.volumeClaimTemplate.spec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecwithaccessmodes","title":"fn spec.pools.volumeClaimTemplate.spec.withAccessModes","text":"<pre><code>withAccessModes(accessModes)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecwithaccessmodesmixin","title":"fn spec.pools.volumeClaimTemplate.spec.withAccessModesMixin","text":"<pre><code>withAccessModesMixin(accessModes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecwithstorageclassname","title":"fn spec.pools.volumeClaimTemplate.spec.withStorageClassName","text":"<pre><code>withStorageClassName(storageClassName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecwithvolumeattributesclassname","title":"fn spec.pools.volumeClaimTemplate.spec.withVolumeAttributesClassName","text":"<pre><code>withVolumeAttributesClassName(volumeAttributesClassName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecwithvolumemode","title":"fn spec.pools.volumeClaimTemplate.spec.withVolumeMode","text":"<pre><code>withVolumeMode(volumeMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecwithvolumename","title":"fn spec.pools.volumeClaimTemplate.spec.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplatespecdatasource","title":"obj spec.pools.volumeClaimTemplate.spec.dataSource","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecdatasourcewithapigroup","title":"fn spec.pools.volumeClaimTemplate.spec.dataSource.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecdatasourcewithkind","title":"fn spec.pools.volumeClaimTemplate.spec.dataSource.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecdatasourcewithname","title":"fn spec.pools.volumeClaimTemplate.spec.dataSource.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplatespecdatasourceref","title":"obj spec.pools.volumeClaimTemplate.spec.dataSourceRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecdatasourcerefwithapigroup","title":"fn spec.pools.volumeClaimTemplate.spec.dataSourceRef.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecdatasourcerefwithkind","title":"fn spec.pools.volumeClaimTemplate.spec.dataSourceRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecdatasourcerefwithname","title":"fn spec.pools.volumeClaimTemplate.spec.dataSourceRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecdatasourcerefwithnamespace","title":"fn spec.pools.volumeClaimTemplate.spec.dataSourceRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplatespecresources","title":"obj spec.pools.volumeClaimTemplate.spec.resources","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecresourceswithlimits","title":"fn spec.pools.volumeClaimTemplate.spec.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecresourceswithlimitsmixin","title":"fn spec.pools.volumeClaimTemplate.spec.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecresourceswithrequests","title":"fn spec.pools.volumeClaimTemplate.spec.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecresourceswithrequestsmixin","title":"fn spec.pools.volumeClaimTemplate.spec.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplatespecselector","title":"obj spec.pools.volumeClaimTemplate.spec.selector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectorwithmatchexpressions","title":"fn spec.pools.volumeClaimTemplate.spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectorwithmatchexpressionsmixin","title":"fn spec.pools.volumeClaimTemplate.spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectorwithmatchlabels","title":"fn spec.pools.volumeClaimTemplate.spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectorwithmatchlabelsmixin","title":"fn spec.pools.volumeClaimTemplate.spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplatespecselectormatchexpressions","title":"obj spec.pools.volumeClaimTemplate.spec.selector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectormatchexpressionswithkey","title":"fn spec.pools.volumeClaimTemplate.spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectormatchexpressionswithoperator","title":"fn spec.pools.volumeClaimTemplate.spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectormatchexpressionswithvalues","title":"fn spec.pools.volumeClaimTemplate.spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.volumeClaimTemplate.spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specreadiness","title":"obj spec.readiness","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesswithfailurethreshold","title":"fn spec.readiness.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesswithinitialdelayseconds","title":"fn spec.readiness.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesswithperiodseconds","title":"fn spec.readiness.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesswithsuccessthreshold","title":"fn spec.readiness.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesswithterminationgraceperiodseconds","title":"fn spec.readiness.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesswithtimeoutseconds","title":"fn spec.readiness.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specreadinessexec","title":"obj spec.readiness.exec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinessexecwithcommand","title":"fn spec.readiness.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinessexecwithcommandmixin","title":"fn spec.readiness.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specreadinessgrpc","title":"obj spec.readiness.grpc","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinessgrpcwithport","title":"fn spec.readiness.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinessgrpcwithservice","title":"fn spec.readiness.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specreadinesshttpget","title":"obj spec.readiness.httpGet","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesshttpgetwithhost","title":"fn spec.readiness.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesshttpgetwithhttpheaders","title":"fn spec.readiness.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesshttpgetwithhttpheadersmixin","title":"fn spec.readiness.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesshttpgetwithpath","title":"fn spec.readiness.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesshttpgetwithport","title":"fn spec.readiness.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesshttpgetwithscheme","title":"fn spec.readiness.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specreadinesshttpgethttpheaders","title":"obj spec.readiness.httpGet.httpHeaders","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesshttpgethttpheaderswithname","title":"fn spec.readiness.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesshttpgethttpheaderswithvalue","title":"fn spec.readiness.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specreadinesstcpsocket","title":"obj spec.readiness.tcpSocket","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesstcpsocketwithhost","title":"fn spec.readiness.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specreadinesstcpsocketwithport","title":"fn spec.readiness.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specservicemetadata","title":"obj spec.serviceMetadata","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specservicemetadatawithconsoleserviceannotations","title":"fn spec.serviceMetadata.withConsoleServiceAnnotations","text":"<pre><code>withConsoleServiceAnnotations(consoleServiceAnnotations)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specservicemetadatawithconsoleserviceannotationsmixin","title":"fn spec.serviceMetadata.withConsoleServiceAnnotationsMixin","text":"<pre><code>withConsoleServiceAnnotationsMixin(consoleServiceAnnotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specservicemetadatawithconsoleservicelabels","title":"fn spec.serviceMetadata.withConsoleServiceLabels","text":"<pre><code>withConsoleServiceLabels(consoleServiceLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specservicemetadatawithconsoleservicelabelsmixin","title":"fn spec.serviceMetadata.withConsoleServiceLabelsMixin","text":"<pre><code>withConsoleServiceLabelsMixin(consoleServiceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specservicemetadatawithminioserviceannotations","title":"fn spec.serviceMetadata.withMinioServiceAnnotations","text":"<pre><code>withMinioServiceAnnotations(minioServiceAnnotations)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specservicemetadatawithminioserviceannotationsmixin","title":"fn spec.serviceMetadata.withMinioServiceAnnotationsMixin","text":"<pre><code>withMinioServiceAnnotationsMixin(minioServiceAnnotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specservicemetadatawithminioservicelabels","title":"fn spec.serviceMetadata.withMinioServiceLabels","text":"<pre><code>withMinioServiceLabels(minioServiceLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specservicemetadatawithminioservicelabelsmixin","title":"fn spec.serviceMetadata.withMinioServiceLabelsMixin","text":"<pre><code>withMinioServiceLabelsMixin(minioServiceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecars","title":"obj spec.sideCars","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarswithcontainers","title":"fn spec.sideCars.withContainers","text":"<pre><code>withContainers(containers)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarswithcontainersmixin","title":"fn spec.sideCars.withContainersMixin","text":"<pre><code>withContainersMixin(containers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarswithvolumeclaimtemplates","title":"fn spec.sideCars.withVolumeClaimTemplates","text":"<pre><code>withVolumeClaimTemplates(volumeClaimTemplates)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarswithvolumeclaimtemplatesmixin","title":"fn spec.sideCars.withVolumeClaimTemplatesMixin","text":"<pre><code>withVolumeClaimTemplatesMixin(volumeClaimTemplates)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarswithvolumes","title":"fn spec.sideCars.withVolumes","text":"<pre><code>withVolumes(volumes)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarswithvolumesmixin","title":"fn spec.sideCars.withVolumesMixin","text":"<pre><code>withVolumesMixin(volumes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainers","title":"obj spec.sideCars.containers","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithargs","title":"fn spec.sideCars.containers.withArgs","text":"<pre><code>withArgs(args)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithargsmixin","title":"fn spec.sideCars.containers.withArgsMixin","text":"<pre><code>withArgsMixin(args)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithcommand","title":"fn spec.sideCars.containers.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithcommandmixin","title":"fn spec.sideCars.containers.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithenv","title":"fn spec.sideCars.containers.withEnv","text":"<pre><code>withEnv(env)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithenvfrom","title":"fn spec.sideCars.containers.withEnvFrom","text":"<pre><code>withEnvFrom(envFrom)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithenvfrommixin","title":"fn spec.sideCars.containers.withEnvFromMixin","text":"<pre><code>withEnvFromMixin(envFrom)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithenvmixin","title":"fn spec.sideCars.containers.withEnvMixin","text":"<pre><code>withEnvMixin(env)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithimage","title":"fn spec.sideCars.containers.withImage","text":"<pre><code>withImage(image)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithimagepullpolicy","title":"fn spec.sideCars.containers.withImagePullPolicy","text":"<pre><code>withImagePullPolicy(imagePullPolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithname","title":"fn spec.sideCars.containers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithports","title":"fn spec.sideCars.containers.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithportsmixin","title":"fn spec.sideCars.containers.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithresizepolicy","title":"fn spec.sideCars.containers.withResizePolicy","text":"<pre><code>withResizePolicy(resizePolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithresizepolicymixin","title":"fn spec.sideCars.containers.withResizePolicyMixin","text":"<pre><code>withResizePolicyMixin(resizePolicy)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithrestartpolicy","title":"fn spec.sideCars.containers.withRestartPolicy","text":"<pre><code>withRestartPolicy(restartPolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithstdin","title":"fn spec.sideCars.containers.withStdin","text":"<pre><code>withStdin(stdin)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithstdinonce","title":"fn spec.sideCars.containers.withStdinOnce","text":"<pre><code>withStdinOnce(stdinOnce)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithterminationmessagepath","title":"fn spec.sideCars.containers.withTerminationMessagePath","text":"<pre><code>withTerminationMessagePath(terminationMessagePath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithterminationmessagepolicy","title":"fn spec.sideCars.containers.withTerminationMessagePolicy","text":"<pre><code>withTerminationMessagePolicy(terminationMessagePolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithtty","title":"fn spec.sideCars.containers.withTty","text":"<pre><code>withTty(tty)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithvolumedevices","title":"fn spec.sideCars.containers.withVolumeDevices","text":"<pre><code>withVolumeDevices(volumeDevices)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithvolumedevicesmixin","title":"fn spec.sideCars.containers.withVolumeDevicesMixin","text":"<pre><code>withVolumeDevicesMixin(volumeDevices)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithvolumemounts","title":"fn spec.sideCars.containers.withVolumeMounts","text":"<pre><code>withVolumeMounts(volumeMounts)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithvolumemountsmixin","title":"fn spec.sideCars.containers.withVolumeMountsMixin","text":"<pre><code>withVolumeMountsMixin(volumeMounts)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerswithworkingdir","title":"fn spec.sideCars.containers.withWorkingDir","text":"<pre><code>withWorkingDir(workingDir)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersenv","title":"obj spec.sideCars.containers.env","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvwithname","title":"fn spec.sideCars.containers.env.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvwithvalue","title":"fn spec.sideCars.containers.env.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersenvvaluefrom","title":"obj spec.sideCars.containers.env.valueFrom","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersenvvaluefromconfigmapkeyref","title":"obj spec.sideCars.containers.env.valueFrom.configMapKeyRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromconfigmapkeyrefwithkey","title":"fn spec.sideCars.containers.env.valueFrom.configMapKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromconfigmapkeyrefwithname","title":"fn spec.sideCars.containers.env.valueFrom.configMapKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromconfigmapkeyrefwithoptional","title":"fn spec.sideCars.containers.env.valueFrom.configMapKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersenvvaluefromfieldref","title":"obj spec.sideCars.containers.env.valueFrom.fieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromfieldrefwithapiversion","title":"fn spec.sideCars.containers.env.valueFrom.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromfieldrefwithfieldpath","title":"fn spec.sideCars.containers.env.valueFrom.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersenvvaluefromresourcefieldref","title":"obj spec.sideCars.containers.env.valueFrom.resourceFieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromresourcefieldrefwithcontainername","title":"fn spec.sideCars.containers.env.valueFrom.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromresourcefieldrefwithdivisor","title":"fn spec.sideCars.containers.env.valueFrom.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromresourcefieldrefwithresource","title":"fn spec.sideCars.containers.env.valueFrom.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersenvvaluefromsecretkeyref","title":"obj spec.sideCars.containers.env.valueFrom.secretKeyRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromsecretkeyrefwithkey","title":"fn spec.sideCars.containers.env.valueFrom.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromsecretkeyrefwithname","title":"fn spec.sideCars.containers.env.valueFrom.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromsecretkeyrefwithoptional","title":"fn spec.sideCars.containers.env.valueFrom.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersenvfrom","title":"obj spec.sideCars.containers.envFrom","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvfromwithprefix","title":"fn spec.sideCars.containers.envFrom.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersenvfromconfigmapref","title":"obj spec.sideCars.containers.envFrom.configMapRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvfromconfigmaprefwithname","title":"fn spec.sideCars.containers.envFrom.configMapRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvfromconfigmaprefwithoptional","title":"fn spec.sideCars.containers.envFrom.configMapRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersenvfromsecretref","title":"obj spec.sideCars.containers.envFrom.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvfromsecretrefwithname","title":"fn spec.sideCars.containers.envFrom.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersenvfromsecretrefwithoptional","title":"fn spec.sideCars.containers.envFrom.secretRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslifecycle","title":"obj spec.sideCars.containers.lifecycle","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslifecyclepoststart","title":"obj spec.sideCars.containers.lifecycle.postStart","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslifecyclepoststartexec","title":"obj spec.sideCars.containers.lifecycle.postStart.exec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststartexecwithcommand","title":"fn spec.sideCars.containers.lifecycle.postStart.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststartexecwithcommandmixin","title":"fn spec.sideCars.containers.lifecycle.postStart.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslifecyclepoststarthttpget","title":"obj spec.sideCars.containers.lifecycle.postStart.httpGet","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgetwithhost","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgetwithhttpheaders","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgetwithhttpheadersmixin","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgetwithpath","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgetwithport","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgetwithscheme","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslifecyclepoststarthttpgethttpheaders","title":"obj spec.sideCars.containers.lifecycle.postStart.httpGet.httpHeaders","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgethttpheaderswithname","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgethttpheaderswithvalue","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslifecyclepoststartsleep","title":"obj spec.sideCars.containers.lifecycle.postStart.sleep","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststartsleepwithseconds","title":"fn spec.sideCars.containers.lifecycle.postStart.sleep.withSeconds","text":"<pre><code>withSeconds(seconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslifecyclepoststarttcpsocket","title":"obj spec.sideCars.containers.lifecycle.postStart.tcpSocket","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarttcpsocketwithhost","title":"fn spec.sideCars.containers.lifecycle.postStart.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarttcpsocketwithport","title":"fn spec.sideCars.containers.lifecycle.postStart.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslifecycleprestop","title":"obj spec.sideCars.containers.lifecycle.preStop","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslifecycleprestopexec","title":"obj spec.sideCars.containers.lifecycle.preStop.exec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestopexecwithcommand","title":"fn spec.sideCars.containers.lifecycle.preStop.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestopexecwithcommandmixin","title":"fn spec.sideCars.containers.lifecycle.preStop.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslifecycleprestophttpget","title":"obj spec.sideCars.containers.lifecycle.preStop.httpGet","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgetwithhost","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgetwithhttpheaders","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgetwithhttpheadersmixin","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgetwithpath","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgetwithport","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgetwithscheme","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslifecycleprestophttpgethttpheaders","title":"obj spec.sideCars.containers.lifecycle.preStop.httpGet.httpHeaders","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgethttpheaderswithname","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgethttpheaderswithvalue","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslifecycleprestopsleep","title":"obj spec.sideCars.containers.lifecycle.preStop.sleep","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestopsleepwithseconds","title":"fn spec.sideCars.containers.lifecycle.preStop.sleep.withSeconds","text":"<pre><code>withSeconds(seconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslifecycleprestoptcpsocket","title":"obj spec.sideCars.containers.lifecycle.preStop.tcpSocket","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestoptcpsocketwithhost","title":"fn spec.sideCars.containers.lifecycle.preStop.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestoptcpsocketwithport","title":"fn spec.sideCars.containers.lifecycle.preStop.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslivenessprobe","title":"obj spec.sideCars.containers.livenessProbe","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobewithfailurethreshold","title":"fn spec.sideCars.containers.livenessProbe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobewithinitialdelayseconds","title":"fn spec.sideCars.containers.livenessProbe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobewithperiodseconds","title":"fn spec.sideCars.containers.livenessProbe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobewithsuccessthreshold","title":"fn spec.sideCars.containers.livenessProbe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobewithterminationgraceperiodseconds","title":"fn spec.sideCars.containers.livenessProbe.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobewithtimeoutseconds","title":"fn spec.sideCars.containers.livenessProbe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslivenessprobeexec","title":"obj spec.sideCars.containers.livenessProbe.exec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobeexecwithcommand","title":"fn spec.sideCars.containers.livenessProbe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobeexecwithcommandmixin","title":"fn spec.sideCars.containers.livenessProbe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslivenessprobegrpc","title":"obj spec.sideCars.containers.livenessProbe.grpc","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobegrpcwithport","title":"fn spec.sideCars.containers.livenessProbe.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobegrpcwithservice","title":"fn spec.sideCars.containers.livenessProbe.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslivenessprobehttpget","title":"obj spec.sideCars.containers.livenessProbe.httpGet","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgetwithhost","title":"fn spec.sideCars.containers.livenessProbe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgetwithhttpheaders","title":"fn spec.sideCars.containers.livenessProbe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgetwithhttpheadersmixin","title":"fn spec.sideCars.containers.livenessProbe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgetwithpath","title":"fn spec.sideCars.containers.livenessProbe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgetwithport","title":"fn spec.sideCars.containers.livenessProbe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgetwithscheme","title":"fn spec.sideCars.containers.livenessProbe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslivenessprobehttpgethttpheaders","title":"obj spec.sideCars.containers.livenessProbe.httpGet.httpHeaders","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgethttpheaderswithname","title":"fn spec.sideCars.containers.livenessProbe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgethttpheaderswithvalue","title":"fn spec.sideCars.containers.livenessProbe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerslivenessprobetcpsocket","title":"obj spec.sideCars.containers.livenessProbe.tcpSocket","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobetcpsocketwithhost","title":"fn spec.sideCars.containers.livenessProbe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobetcpsocketwithport","title":"fn spec.sideCars.containers.livenessProbe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersports","title":"obj spec.sideCars.containers.ports","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersportswithcontainerport","title":"fn spec.sideCars.containers.ports.withContainerPort","text":"<pre><code>withContainerPort(containerPort)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersportswithhostip","title":"fn spec.sideCars.containers.ports.withHostIP","text":"<pre><code>withHostIP(hostIP)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersportswithhostport","title":"fn spec.sideCars.containers.ports.withHostPort","text":"<pre><code>withHostPort(hostPort)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersportswithname","title":"fn spec.sideCars.containers.ports.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersportswithprotocol","title":"fn spec.sideCars.containers.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersreadinessprobe","title":"obj spec.sideCars.containers.readinessProbe","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobewithfailurethreshold","title":"fn spec.sideCars.containers.readinessProbe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobewithinitialdelayseconds","title":"fn spec.sideCars.containers.readinessProbe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobewithperiodseconds","title":"fn spec.sideCars.containers.readinessProbe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobewithsuccessthreshold","title":"fn spec.sideCars.containers.readinessProbe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobewithterminationgraceperiodseconds","title":"fn spec.sideCars.containers.readinessProbe.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobewithtimeoutseconds","title":"fn spec.sideCars.containers.readinessProbe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersreadinessprobeexec","title":"obj spec.sideCars.containers.readinessProbe.exec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobeexecwithcommand","title":"fn spec.sideCars.containers.readinessProbe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobeexecwithcommandmixin","title":"fn spec.sideCars.containers.readinessProbe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersreadinessprobegrpc","title":"obj spec.sideCars.containers.readinessProbe.grpc","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobegrpcwithport","title":"fn spec.sideCars.containers.readinessProbe.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobegrpcwithservice","title":"fn spec.sideCars.containers.readinessProbe.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersreadinessprobehttpget","title":"obj spec.sideCars.containers.readinessProbe.httpGet","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgetwithhost","title":"fn spec.sideCars.containers.readinessProbe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgetwithhttpheaders","title":"fn spec.sideCars.containers.readinessProbe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgetwithhttpheadersmixin","title":"fn spec.sideCars.containers.readinessProbe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgetwithpath","title":"fn spec.sideCars.containers.readinessProbe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgetwithport","title":"fn spec.sideCars.containers.readinessProbe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgetwithscheme","title":"fn spec.sideCars.containers.readinessProbe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersreadinessprobehttpgethttpheaders","title":"obj spec.sideCars.containers.readinessProbe.httpGet.httpHeaders","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgethttpheaderswithname","title":"fn spec.sideCars.containers.readinessProbe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgethttpheaderswithvalue","title":"fn spec.sideCars.containers.readinessProbe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersreadinessprobetcpsocket","title":"obj spec.sideCars.containers.readinessProbe.tcpSocket","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobetcpsocketwithhost","title":"fn spec.sideCars.containers.readinessProbe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobetcpsocketwithport","title":"fn spec.sideCars.containers.readinessProbe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersresizepolicy","title":"obj spec.sideCars.containers.resizePolicy","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersresizepolicywithresourcename","title":"fn spec.sideCars.containers.resizePolicy.withResourceName","text":"<pre><code>withResourceName(resourceName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersresizepolicywithrestartpolicy","title":"fn spec.sideCars.containers.resizePolicy.withRestartPolicy","text":"<pre><code>withRestartPolicy(restartPolicy)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersresources","title":"obj spec.sideCars.containers.resources","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersresourceswithclaims","title":"fn spec.sideCars.containers.resources.withClaims","text":"<pre><code>withClaims(claims)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersresourceswithclaimsmixin","title":"fn spec.sideCars.containers.resources.withClaimsMixin","text":"<pre><code>withClaimsMixin(claims)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersresourceswithlimits","title":"fn spec.sideCars.containers.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersresourceswithlimitsmixin","title":"fn spec.sideCars.containers.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersresourceswithrequests","title":"fn spec.sideCars.containers.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersresourceswithrequestsmixin","title":"fn spec.sideCars.containers.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersresourcesclaims","title":"obj spec.sideCars.containers.resources.claims","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersresourcesclaimswithname","title":"fn spec.sideCars.containers.resources.claims.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerssecuritycontext","title":"obj spec.sideCars.containers.securityContext","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwithallowprivilegeescalation","title":"fn spec.sideCars.containers.securityContext.withAllowPrivilegeEscalation","text":"<pre><code>withAllowPrivilegeEscalation(allowPrivilegeEscalation)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwithprivileged","title":"fn spec.sideCars.containers.securityContext.withPrivileged","text":"<pre><code>withPrivileged(privileged)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwithprocmount","title":"fn spec.sideCars.containers.securityContext.withProcMount","text":"<pre><code>withProcMount(procMount)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwithreadonlyrootfilesystem","title":"fn spec.sideCars.containers.securityContext.withReadOnlyRootFilesystem","text":"<pre><code>withReadOnlyRootFilesystem(readOnlyRootFilesystem)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwithrunasgroup","title":"fn spec.sideCars.containers.securityContext.withRunAsGroup","text":"<pre><code>withRunAsGroup(runAsGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwithrunasnonroot","title":"fn spec.sideCars.containers.securityContext.withRunAsNonRoot","text":"<pre><code>withRunAsNonRoot(runAsNonRoot)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwithrunasuser","title":"fn spec.sideCars.containers.securityContext.withRunAsUser","text":"<pre><code>withRunAsUser(runAsUser)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerssecuritycontextcapabilities","title":"obj spec.sideCars.containers.securityContext.capabilities","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextcapabilitieswithadd","title":"fn spec.sideCars.containers.securityContext.capabilities.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextcapabilitieswithaddmixin","title":"fn spec.sideCars.containers.securityContext.capabilities.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextcapabilitieswithdrop","title":"fn spec.sideCars.containers.securityContext.capabilities.withDrop","text":"<pre><code>withDrop(drop)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextcapabilitieswithdropmixin","title":"fn spec.sideCars.containers.securityContext.capabilities.withDropMixin","text":"<pre><code>withDropMixin(drop)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerssecuritycontextselinuxoptions","title":"obj spec.sideCars.containers.securityContext.seLinuxOptions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextselinuxoptionswithlevel","title":"fn spec.sideCars.containers.securityContext.seLinuxOptions.withLevel","text":"<pre><code>withLevel(level)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextselinuxoptionswithrole","title":"fn spec.sideCars.containers.securityContext.seLinuxOptions.withRole","text":"<pre><code>withRole(role)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextselinuxoptionswithtype","title":"fn spec.sideCars.containers.securityContext.seLinuxOptions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextselinuxoptionswithuser","title":"fn spec.sideCars.containers.securityContext.seLinuxOptions.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerssecuritycontextseccompprofile","title":"obj spec.sideCars.containers.securityContext.seccompProfile","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextseccompprofilewithlocalhostprofile","title":"fn spec.sideCars.containers.securityContext.seccompProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextseccompprofilewithtype","title":"fn spec.sideCars.containers.securityContext.seccompProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainerssecuritycontextwindowsoptions","title":"obj spec.sideCars.containers.securityContext.windowsOptions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwindowsoptionswithgmsacredentialspec","title":"fn spec.sideCars.containers.securityContext.windowsOptions.withGmsaCredentialSpec","text":"<pre><code>withGmsaCredentialSpec(gmsaCredentialSpec)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwindowsoptionswithgmsacredentialspecname","title":"fn spec.sideCars.containers.securityContext.windowsOptions.withGmsaCredentialSpecName","text":"<pre><code>withGmsaCredentialSpecName(gmsaCredentialSpecName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwindowsoptionswithhostprocess","title":"fn spec.sideCars.containers.securityContext.windowsOptions.withHostProcess","text":"<pre><code>withHostProcess(hostProcess)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwindowsoptionswithrunasusername","title":"fn spec.sideCars.containers.securityContext.windowsOptions.withRunAsUserName","text":"<pre><code>withRunAsUserName(runAsUserName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersstartupprobe","title":"obj spec.sideCars.containers.startupProbe","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobewithfailurethreshold","title":"fn spec.sideCars.containers.startupProbe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobewithinitialdelayseconds","title":"fn spec.sideCars.containers.startupProbe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobewithperiodseconds","title":"fn spec.sideCars.containers.startupProbe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobewithsuccessthreshold","title":"fn spec.sideCars.containers.startupProbe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobewithterminationgraceperiodseconds","title":"fn spec.sideCars.containers.startupProbe.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobewithtimeoutseconds","title":"fn spec.sideCars.containers.startupProbe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersstartupprobeexec","title":"obj spec.sideCars.containers.startupProbe.exec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobeexecwithcommand","title":"fn spec.sideCars.containers.startupProbe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobeexecwithcommandmixin","title":"fn spec.sideCars.containers.startupProbe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersstartupprobegrpc","title":"obj spec.sideCars.containers.startupProbe.grpc","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobegrpcwithport","title":"fn spec.sideCars.containers.startupProbe.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobegrpcwithservice","title":"fn spec.sideCars.containers.startupProbe.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersstartupprobehttpget","title":"obj spec.sideCars.containers.startupProbe.httpGet","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgetwithhost","title":"fn spec.sideCars.containers.startupProbe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgetwithhttpheaders","title":"fn spec.sideCars.containers.startupProbe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgetwithhttpheadersmixin","title":"fn spec.sideCars.containers.startupProbe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgetwithpath","title":"fn spec.sideCars.containers.startupProbe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgetwithport","title":"fn spec.sideCars.containers.startupProbe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgetwithscheme","title":"fn spec.sideCars.containers.startupProbe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersstartupprobehttpgethttpheaders","title":"obj spec.sideCars.containers.startupProbe.httpGet.httpHeaders","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgethttpheaderswithname","title":"fn spec.sideCars.containers.startupProbe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgethttpheaderswithvalue","title":"fn spec.sideCars.containers.startupProbe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersstartupprobetcpsocket","title":"obj spec.sideCars.containers.startupProbe.tcpSocket","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobetcpsocketwithhost","title":"fn spec.sideCars.containers.startupProbe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersstartupprobetcpsocketwithport","title":"fn spec.sideCars.containers.startupProbe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersvolumedevices","title":"obj spec.sideCars.containers.volumeDevices","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersvolumedeviceswithdevicepath","title":"fn spec.sideCars.containers.volumeDevices.withDevicePath","text":"<pre><code>withDevicePath(devicePath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersvolumedeviceswithname","title":"fn spec.sideCars.containers.volumeDevices.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarscontainersvolumemounts","title":"obj spec.sideCars.containers.volumeMounts","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersvolumemountswithmountpath","title":"fn spec.sideCars.containers.volumeMounts.withMountPath","text":"<pre><code>withMountPath(mountPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersvolumemountswithmountpropagation","title":"fn spec.sideCars.containers.volumeMounts.withMountPropagation","text":"<pre><code>withMountPropagation(mountPropagation)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersvolumemountswithname","title":"fn spec.sideCars.containers.volumeMounts.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersvolumemountswithreadonly","title":"fn spec.sideCars.containers.volumeMounts.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersvolumemountswithsubpath","title":"fn spec.sideCars.containers.volumeMounts.withSubPath","text":"<pre><code>withSubPath(subPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarscontainersvolumemountswithsubpathexpr","title":"fn spec.sideCars.containers.volumeMounts.withSubPathExpr","text":"<pre><code>withSubPathExpr(subPathExpr)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsresources","title":"obj spec.sideCars.resources","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsresourceswithclaims","title":"fn spec.sideCars.resources.withClaims","text":"<pre><code>withClaims(claims)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsresourceswithclaimsmixin","title":"fn spec.sideCars.resources.withClaimsMixin","text":"<pre><code>withClaimsMixin(claims)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsresourceswithlimits","title":"fn spec.sideCars.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsresourceswithlimitsmixin","title":"fn spec.sideCars.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsresourceswithrequests","title":"fn spec.sideCars.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsresourceswithrequestsmixin","title":"fn spec.sideCars.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsresourcesclaims","title":"obj spec.sideCars.resources.claims","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsresourcesclaimswithname","title":"fn spec.sideCars.resources.claims.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplates","title":"obj spec.sideCars.volumeClaimTemplates","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplateswithapiversion","title":"fn spec.sideCars.volumeClaimTemplates.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplateswithkind","title":"fn spec.sideCars.volumeClaimTemplates.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplatesmetadata","title":"obj spec.sideCars.volumeClaimTemplates.metadata","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithannotations","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithannotationsmixin","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithfinalizers","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithfinalizersmixin","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithlabels","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithlabelsmixin","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithname","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithnamespace","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplatesspec","title":"obj spec.sideCars.volumeClaimTemplates.spec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecwithaccessmodes","title":"fn spec.sideCars.volumeClaimTemplates.spec.withAccessModes","text":"<pre><code>withAccessModes(accessModes)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecwithaccessmodesmixin","title":"fn spec.sideCars.volumeClaimTemplates.spec.withAccessModesMixin","text":"<pre><code>withAccessModesMixin(accessModes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecwithstorageclassname","title":"fn spec.sideCars.volumeClaimTemplates.spec.withStorageClassName","text":"<pre><code>withStorageClassName(storageClassName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecwithvolumeattributesclassname","title":"fn spec.sideCars.volumeClaimTemplates.spec.withVolumeAttributesClassName","text":"<pre><code>withVolumeAttributesClassName(volumeAttributesClassName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecwithvolumemode","title":"fn spec.sideCars.volumeClaimTemplates.spec.withVolumeMode","text":"<pre><code>withVolumeMode(volumeMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecwithvolumename","title":"fn spec.sideCars.volumeClaimTemplates.spec.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplatesspecdatasource","title":"obj spec.sideCars.volumeClaimTemplates.spec.dataSource","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecdatasourcewithapigroup","title":"fn spec.sideCars.volumeClaimTemplates.spec.dataSource.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecdatasourcewithkind","title":"fn spec.sideCars.volumeClaimTemplates.spec.dataSource.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecdatasourcewithname","title":"fn spec.sideCars.volumeClaimTemplates.spec.dataSource.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplatesspecdatasourceref","title":"obj spec.sideCars.volumeClaimTemplates.spec.dataSourceRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecdatasourcerefwithapigroup","title":"fn spec.sideCars.volumeClaimTemplates.spec.dataSourceRef.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecdatasourcerefwithkind","title":"fn spec.sideCars.volumeClaimTemplates.spec.dataSourceRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecdatasourcerefwithname","title":"fn spec.sideCars.volumeClaimTemplates.spec.dataSourceRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecdatasourcerefwithnamespace","title":"fn spec.sideCars.volumeClaimTemplates.spec.dataSourceRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplatesspecresources","title":"obj spec.sideCars.volumeClaimTemplates.spec.resources","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecresourceswithlimits","title":"fn spec.sideCars.volumeClaimTemplates.spec.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecresourceswithlimitsmixin","title":"fn spec.sideCars.volumeClaimTemplates.spec.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecresourceswithrequests","title":"fn spec.sideCars.volumeClaimTemplates.spec.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecresourceswithrequestsmixin","title":"fn spec.sideCars.volumeClaimTemplates.spec.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplatesspecselector","title":"obj spec.sideCars.volumeClaimTemplates.spec.selector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectorwithmatchexpressions","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectorwithmatchexpressionsmixin","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectorwithmatchlabels","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectorwithmatchlabelsmixin","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplatesspecselectormatchexpressions","title":"obj spec.sideCars.volumeClaimTemplates.spec.selector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectormatchexpressionswithkey","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectormatchexpressionswithoperator","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectormatchexpressionswithvalues","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectormatchexpressionswithvaluesmixin","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumes","title":"obj spec.sideCars.volumes","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeswithname","title":"fn spec.sideCars.volumes.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesawselasticblockstore","title":"obj spec.sideCars.volumes.awsElasticBlockStore","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesawselasticblockstorewithfstype","title":"fn spec.sideCars.volumes.awsElasticBlockStore.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesawselasticblockstorewithpartition","title":"fn spec.sideCars.volumes.awsElasticBlockStore.withPartition","text":"<pre><code>withPartition(partition)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesawselasticblockstorewithreadonly","title":"fn spec.sideCars.volumes.awsElasticBlockStore.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesawselasticblockstorewithvolumeid","title":"fn spec.sideCars.volumes.awsElasticBlockStore.withVolumeID","text":"<pre><code>withVolumeID(volumeID)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesazuredisk","title":"obj spec.sideCars.volumes.azureDisk","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesazurediskwithcachingmode","title":"fn spec.sideCars.volumes.azureDisk.withCachingMode","text":"<pre><code>withCachingMode(cachingMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesazurediskwithdiskname","title":"fn spec.sideCars.volumes.azureDisk.withDiskName","text":"<pre><code>withDiskName(diskName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesazurediskwithdiskuri","title":"fn spec.sideCars.volumes.azureDisk.withDiskURI","text":"<pre><code>withDiskURI(diskURI)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesazurediskwithfstype","title":"fn spec.sideCars.volumes.azureDisk.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesazurediskwithkind","title":"fn spec.sideCars.volumes.azureDisk.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesazurediskwithreadonly","title":"fn spec.sideCars.volumes.azureDisk.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesazurefile","title":"obj spec.sideCars.volumes.azureFile","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesazurefilewithreadonly","title":"fn spec.sideCars.volumes.azureFile.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesazurefilewithsecretname","title":"fn spec.sideCars.volumes.azureFile.withSecretName","text":"<pre><code>withSecretName(secretName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesazurefilewithsharename","title":"fn spec.sideCars.volumes.azureFile.withShareName","text":"<pre><code>withShareName(shareName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumescephfs","title":"obj spec.sideCars.volumes.cephfs","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescephfswithmonitors","title":"fn spec.sideCars.volumes.cephfs.withMonitors","text":"<pre><code>withMonitors(monitors)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescephfswithmonitorsmixin","title":"fn spec.sideCars.volumes.cephfs.withMonitorsMixin","text":"<pre><code>withMonitorsMixin(monitors)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescephfswithpath","title":"fn spec.sideCars.volumes.cephfs.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescephfswithreadonly","title":"fn spec.sideCars.volumes.cephfs.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescephfswithsecretfile","title":"fn spec.sideCars.volumes.cephfs.withSecretFile","text":"<pre><code>withSecretFile(secretFile)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescephfswithuser","title":"fn spec.sideCars.volumes.cephfs.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumescephfssecretref","title":"obj spec.sideCars.volumes.cephfs.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescephfssecretrefwithname","title":"fn spec.sideCars.volumes.cephfs.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumescinder","title":"obj spec.sideCars.volumes.cinder","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescinderwithfstype","title":"fn spec.sideCars.volumes.cinder.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescinderwithreadonly","title":"fn spec.sideCars.volumes.cinder.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescinderwithvolumeid","title":"fn spec.sideCars.volumes.cinder.withVolumeID","text":"<pre><code>withVolumeID(volumeID)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumescindersecretref","title":"obj spec.sideCars.volumes.cinder.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescindersecretrefwithname","title":"fn spec.sideCars.volumes.cinder.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesconfigmap","title":"obj spec.sideCars.volumes.configMap","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapwithdefaultmode","title":"fn spec.sideCars.volumes.configMap.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapwithitems","title":"fn spec.sideCars.volumes.configMap.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapwithitemsmixin","title":"fn spec.sideCars.volumes.configMap.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapwithname","title":"fn spec.sideCars.volumes.configMap.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapwithoptional","title":"fn spec.sideCars.volumes.configMap.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesconfigmapitems","title":"obj spec.sideCars.volumes.configMap.items","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapitemswithkey","title":"fn spec.sideCars.volumes.configMap.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapitemswithmode","title":"fn spec.sideCars.volumes.configMap.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapitemswithpath","title":"fn spec.sideCars.volumes.configMap.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumescsi","title":"obj spec.sideCars.volumes.csi","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescsiwithdriver","title":"fn spec.sideCars.volumes.csi.withDriver","text":"<pre><code>withDriver(driver)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescsiwithfstype","title":"fn spec.sideCars.volumes.csi.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescsiwithreadonly","title":"fn spec.sideCars.volumes.csi.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescsiwithvolumeattributes","title":"fn spec.sideCars.volumes.csi.withVolumeAttributes","text":"<pre><code>withVolumeAttributes(volumeAttributes)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescsiwithvolumeattributesmixin","title":"fn spec.sideCars.volumes.csi.withVolumeAttributesMixin","text":"<pre><code>withVolumeAttributesMixin(volumeAttributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumescsinodepublishsecretref","title":"obj spec.sideCars.volumes.csi.nodePublishSecretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumescsinodepublishsecretrefwithname","title":"fn spec.sideCars.volumes.csi.nodePublishSecretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesdownwardapi","title":"obj spec.sideCars.volumes.downwardAPI","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiwithdefaultmode","title":"fn spec.sideCars.volumes.downwardAPI.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiwithitems","title":"fn spec.sideCars.volumes.downwardAPI.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiwithitemsmixin","title":"fn spec.sideCars.volumes.downwardAPI.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesdownwardapiitems","title":"obj spec.sideCars.volumes.downwardAPI.items","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiitemswithmode","title":"fn spec.sideCars.volumes.downwardAPI.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiitemswithpath","title":"fn spec.sideCars.volumes.downwardAPI.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesdownwardapiitemsfieldref","title":"obj spec.sideCars.volumes.downwardAPI.items.fieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiitemsfieldrefwithapiversion","title":"fn spec.sideCars.volumes.downwardAPI.items.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiitemsfieldrefwithfieldpath","title":"fn spec.sideCars.volumes.downwardAPI.items.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesdownwardapiitemsresourcefieldref","title":"obj spec.sideCars.volumes.downwardAPI.items.resourceFieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiitemsresourcefieldrefwithcontainername","title":"fn spec.sideCars.volumes.downwardAPI.items.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiitemsresourcefieldrefwithdivisor","title":"fn spec.sideCars.volumes.downwardAPI.items.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiitemsresourcefieldrefwithresource","title":"fn spec.sideCars.volumes.downwardAPI.items.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesemptydir","title":"obj spec.sideCars.volumes.emptyDir","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesemptydirwithmedium","title":"fn spec.sideCars.volumes.emptyDir.withMedium","text":"<pre><code>withMedium(medium)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesemptydirwithsizelimit","title":"fn spec.sideCars.volumes.emptyDir.withSizeLimit","text":"<pre><code>withSizeLimit(sizeLimit)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesephemeral","title":"obj spec.sideCars.volumes.ephemeral","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplate","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplatemetadata","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithannotations","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithannotationsmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithfinalizers","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithfinalizersmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithlabels","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithlabelsmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithname","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithnamespace","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplatespec","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecwithaccessmodes","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.withAccessModes","text":"<pre><code>withAccessModes(accessModes)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecwithaccessmodesmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.withAccessModesMixin","text":"<pre><code>withAccessModesMixin(accessModes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecwithstorageclassname","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.withStorageClassName","text":"<pre><code>withStorageClassName(storageClassName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecwithvolumeattributesclassname","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.withVolumeAttributesClassName","text":"<pre><code>withVolumeAttributesClassName(volumeAttributesClassName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecwithvolumemode","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.withVolumeMode","text":"<pre><code>withVolumeMode(volumeMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecwithvolumename","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasource","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSource","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourcewithapigroup","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSource.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourcewithkind","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSource.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourcewithname","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSource.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourceref","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithapigroup","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithkind","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithname","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithnamespace","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplatespecresources","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.resources","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecresourceswithlimits","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecresourceswithlimitsmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecresourceswithrequests","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecresourceswithrequestsmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplatespecselector","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectorwithmatchexpressions","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectorwithmatchexpressionsmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectorwithmatchlabels","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectorwithmatchlabelsmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectormatchexpressions","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithkey","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithoperator","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithvalues","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithvaluesmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesfc","title":"obj spec.sideCars.volumes.fc","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesfcwithfstype","title":"fn spec.sideCars.volumes.fc.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesfcwithlun","title":"fn spec.sideCars.volumes.fc.withLun","text":"<pre><code>withLun(lun)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesfcwithreadonly","title":"fn spec.sideCars.volumes.fc.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesfcwithtargetwwns","title":"fn spec.sideCars.volumes.fc.withTargetWWNs","text":"<pre><code>withTargetWWNs(targetWWNs)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesfcwithtargetwwnsmixin","title":"fn spec.sideCars.volumes.fc.withTargetWWNsMixin","text":"<pre><code>withTargetWWNsMixin(targetWWNs)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesfcwithwwids","title":"fn spec.sideCars.volumes.fc.withWwids","text":"<pre><code>withWwids(wwids)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesfcwithwwidsmixin","title":"fn spec.sideCars.volumes.fc.withWwidsMixin","text":"<pre><code>withWwidsMixin(wwids)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesflexvolume","title":"obj spec.sideCars.volumes.flexVolume","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesflexvolumewithdriver","title":"fn spec.sideCars.volumes.flexVolume.withDriver","text":"<pre><code>withDriver(driver)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesflexvolumewithfstype","title":"fn spec.sideCars.volumes.flexVolume.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesflexvolumewithoptions","title":"fn spec.sideCars.volumes.flexVolume.withOptions","text":"<pre><code>withOptions(options)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesflexvolumewithoptionsmixin","title":"fn spec.sideCars.volumes.flexVolume.withOptionsMixin","text":"<pre><code>withOptionsMixin(options)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesflexvolumewithreadonly","title":"fn spec.sideCars.volumes.flexVolume.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesflexvolumesecretref","title":"obj spec.sideCars.volumes.flexVolume.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesflexvolumesecretrefwithname","title":"fn spec.sideCars.volumes.flexVolume.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesflocker","title":"obj spec.sideCars.volumes.flocker","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesflockerwithdatasetname","title":"fn spec.sideCars.volumes.flocker.withDatasetName","text":"<pre><code>withDatasetName(datasetName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesflockerwithdatasetuuid","title":"fn spec.sideCars.volumes.flocker.withDatasetUUID","text":"<pre><code>withDatasetUUID(datasetUUID)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesgcepersistentdisk","title":"obj spec.sideCars.volumes.gcePersistentDisk","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesgcepersistentdiskwithfstype","title":"fn spec.sideCars.volumes.gcePersistentDisk.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesgcepersistentdiskwithpartition","title":"fn spec.sideCars.volumes.gcePersistentDisk.withPartition","text":"<pre><code>withPartition(partition)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesgcepersistentdiskwithpdname","title":"fn spec.sideCars.volumes.gcePersistentDisk.withPdName","text":"<pre><code>withPdName(pdName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesgcepersistentdiskwithreadonly","title":"fn spec.sideCars.volumes.gcePersistentDisk.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesgitrepo","title":"obj spec.sideCars.volumes.gitRepo","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesgitrepowithdirectory","title":"fn spec.sideCars.volumes.gitRepo.withDirectory","text":"<pre><code>withDirectory(directory)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesgitrepowithrepository","title":"fn spec.sideCars.volumes.gitRepo.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesgitrepowithrevision","title":"fn spec.sideCars.volumes.gitRepo.withRevision","text":"<pre><code>withRevision(revision)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesglusterfs","title":"obj spec.sideCars.volumes.glusterfs","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesglusterfswithendpoints","title":"fn spec.sideCars.volumes.glusterfs.withEndpoints","text":"<pre><code>withEndpoints(endpoints)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesglusterfswithpath","title":"fn spec.sideCars.volumes.glusterfs.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesglusterfswithreadonly","title":"fn spec.sideCars.volumes.glusterfs.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumeshostpath","title":"obj spec.sideCars.volumes.hostPath","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeshostpathwithpath","title":"fn spec.sideCars.volumes.hostPath.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumeshostpathwithtype","title":"fn spec.sideCars.volumes.hostPath.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesiscsi","title":"obj spec.sideCars.volumes.iscsi","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithchapauthdiscovery","title":"fn spec.sideCars.volumes.iscsi.withChapAuthDiscovery","text":"<pre><code>withChapAuthDiscovery(chapAuthDiscovery)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithchapauthsession","title":"fn spec.sideCars.volumes.iscsi.withChapAuthSession","text":"<pre><code>withChapAuthSession(chapAuthSession)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithfstype","title":"fn spec.sideCars.volumes.iscsi.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithinitiatorname","title":"fn spec.sideCars.volumes.iscsi.withInitiatorName","text":"<pre><code>withInitiatorName(initiatorName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithiqn","title":"fn spec.sideCars.volumes.iscsi.withIqn","text":"<pre><code>withIqn(iqn)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithiscsiinterface","title":"fn spec.sideCars.volumes.iscsi.withIscsiInterface","text":"<pre><code>withIscsiInterface(iscsiInterface)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithlun","title":"fn spec.sideCars.volumes.iscsi.withLun","text":"<pre><code>withLun(lun)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithportals","title":"fn spec.sideCars.volumes.iscsi.withPortals","text":"<pre><code>withPortals(portals)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithportalsmixin","title":"fn spec.sideCars.volumes.iscsi.withPortalsMixin","text":"<pre><code>withPortalsMixin(portals)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithreadonly","title":"fn spec.sideCars.volumes.iscsi.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithtargetportal","title":"fn spec.sideCars.volumes.iscsi.withTargetPortal","text":"<pre><code>withTargetPortal(targetPortal)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesiscsisecretref","title":"obj spec.sideCars.volumes.iscsi.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesiscsisecretrefwithname","title":"fn spec.sideCars.volumes.iscsi.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesnfs","title":"obj spec.sideCars.volumes.nfs","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesnfswithpath","title":"fn spec.sideCars.volumes.nfs.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesnfswithreadonly","title":"fn spec.sideCars.volumes.nfs.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesnfswithserver","title":"fn spec.sideCars.volumes.nfs.withServer","text":"<pre><code>withServer(server)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumespersistentvolumeclaim","title":"obj spec.sideCars.volumes.persistentVolumeClaim","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumespersistentvolumeclaimwithclaimname","title":"fn spec.sideCars.volumes.persistentVolumeClaim.withClaimName","text":"<pre><code>withClaimName(claimName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumespersistentvolumeclaimwithreadonly","title":"fn spec.sideCars.volumes.persistentVolumeClaim.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesphotonpersistentdisk","title":"obj spec.sideCars.volumes.photonPersistentDisk","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesphotonpersistentdiskwithfstype","title":"fn spec.sideCars.volumes.photonPersistentDisk.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesphotonpersistentdiskwithpdid","title":"fn spec.sideCars.volumes.photonPersistentDisk.withPdID","text":"<pre><code>withPdID(pdID)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesportworxvolume","title":"obj spec.sideCars.volumes.portworxVolume","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesportworxvolumewithfstype","title":"fn spec.sideCars.volumes.portworxVolume.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesportworxvolumewithreadonly","title":"fn spec.sideCars.volumes.portworxVolume.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesportworxvolumewithvolumeid","title":"fn spec.sideCars.volumes.portworxVolume.withVolumeID","text":"<pre><code>withVolumeID(volumeID)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesprojected","title":"obj spec.sideCars.volumes.projected","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedwithdefaultmode","title":"fn spec.sideCars.volumes.projected.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedwithsources","title":"fn spec.sideCars.volumes.projected.withSources","text":"<pre><code>withSources(sources)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedwithsourcesmixin","title":"fn spec.sideCars.volumes.projected.withSourcesMixin","text":"<pre><code>withSourcesMixin(sources)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsources","title":"obj spec.sideCars.volumes.projected.sources","text":""},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesclustertrustbundle","title":"obj spec.sideCars.volumes.projected.sources.clusterTrustBundle","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlewithname","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlewithoptional","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlewithpath","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlewithsignername","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.withSignerName","text":"<pre><code>withSignerName(signerName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselector","title":"obj spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchexpressions","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchexpressionsmixin","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchlabels","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchlabelsmixin","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressions","title":"obj spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithkey","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithoperator","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithvalues","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithvaluesmixin","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesconfigmap","title":"obj spec.sideCars.volumes.projected.sources.configMap","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesconfigmapwithitems","title":"fn spec.sideCars.volumes.projected.sources.configMap.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesconfigmapwithitemsmixin","title":"fn spec.sideCars.volumes.projected.sources.configMap.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesconfigmapwithname","title":"fn spec.sideCars.volumes.projected.sources.configMap.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesconfigmapwithoptional","title":"fn spec.sideCars.volumes.projected.sources.configMap.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesconfigmapitems","title":"obj spec.sideCars.volumes.projected.sources.configMap.items","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesconfigmapitemswithkey","title":"fn spec.sideCars.volumes.projected.sources.configMap.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesconfigmapitemswithmode","title":"fn spec.sideCars.volumes.projected.sources.configMap.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesconfigmapitemswithpath","title":"fn spec.sideCars.volumes.projected.sources.configMap.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesdownwardapi","title":"obj spec.sideCars.volumes.projected.sources.downwardAPI","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiwithitems","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiwithitemsmixin","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesdownwardapiitems","title":"obj spec.sideCars.volumes.projected.sources.downwardAPI.items","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiitemswithmode","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiitemswithpath","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesdownwardapiitemsfieldref","title":"obj spec.sideCars.volumes.projected.sources.downwardAPI.items.fieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiitemsfieldrefwithapiversion","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.items.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiitemsfieldrefwithfieldpath","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.items.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesdownwardapiitemsresourcefieldref","title":"obj spec.sideCars.volumes.projected.sources.downwardAPI.items.resourceFieldRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiitemsresourcefieldrefwithcontainername","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.items.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiitemsresourcefieldrefwithdivisor","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.items.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiitemsresourcefieldrefwithresource","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.items.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcessecret","title":"obj spec.sideCars.volumes.projected.sources.secret","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcessecretwithitems","title":"fn spec.sideCars.volumes.projected.sources.secret.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcessecretwithitemsmixin","title":"fn spec.sideCars.volumes.projected.sources.secret.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcessecretwithname","title":"fn spec.sideCars.volumes.projected.sources.secret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcessecretwithoptional","title":"fn spec.sideCars.volumes.projected.sources.secret.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcessecretitems","title":"obj spec.sideCars.volumes.projected.sources.secret.items","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcessecretitemswithkey","title":"fn spec.sideCars.volumes.projected.sources.secret.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcessecretitemswithmode","title":"fn spec.sideCars.volumes.projected.sources.secret.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcessecretitemswithpath","title":"fn spec.sideCars.volumes.projected.sources.secret.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesserviceaccounttoken","title":"obj spec.sideCars.volumes.projected.sources.serviceAccountToken","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesserviceaccounttokenwithaudience","title":"fn spec.sideCars.volumes.projected.sources.serviceAccountToken.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesserviceaccounttokenwithexpirationseconds","title":"fn spec.sideCars.volumes.projected.sources.serviceAccountToken.withExpirationSeconds","text":"<pre><code>withExpirationSeconds(expirationSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesserviceaccounttokenwithpath","title":"fn spec.sideCars.volumes.projected.sources.serviceAccountToken.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesquobyte","title":"obj spec.sideCars.volumes.quobyte","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesquobytewithgroup","title":"fn spec.sideCars.volumes.quobyte.withGroup","text":"<pre><code>withGroup(group)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesquobytewithreadonly","title":"fn spec.sideCars.volumes.quobyte.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesquobytewithregistry","title":"fn spec.sideCars.volumes.quobyte.withRegistry","text":"<pre><code>withRegistry(registry)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesquobytewithtenant","title":"fn spec.sideCars.volumes.quobyte.withTenant","text":"<pre><code>withTenant(tenant)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesquobytewithuser","title":"fn spec.sideCars.volumes.quobyte.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesquobytewithvolume","title":"fn spec.sideCars.volumes.quobyte.withVolume","text":"<pre><code>withVolume(volume)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesrbd","title":"obj spec.sideCars.volumes.rbd","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithfstype","title":"fn spec.sideCars.volumes.rbd.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithimage","title":"fn spec.sideCars.volumes.rbd.withImage","text":"<pre><code>withImage(image)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithkeyring","title":"fn spec.sideCars.volumes.rbd.withKeyring","text":"<pre><code>withKeyring(keyring)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithmonitors","title":"fn spec.sideCars.volumes.rbd.withMonitors","text":"<pre><code>withMonitors(monitors)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithmonitorsmixin","title":"fn spec.sideCars.volumes.rbd.withMonitorsMixin","text":"<pre><code>withMonitorsMixin(monitors)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithpool","title":"fn spec.sideCars.volumes.rbd.withPool","text":"<pre><code>withPool(pool)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithreadonly","title":"fn spec.sideCars.volumes.rbd.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithuser","title":"fn spec.sideCars.volumes.rbd.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesrbdsecretref","title":"obj spec.sideCars.volumes.rbd.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesrbdsecretrefwithname","title":"fn spec.sideCars.volumes.rbd.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesscaleio","title":"obj spec.sideCars.volumes.scaleIO","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithfstype","title":"fn spec.sideCars.volumes.scaleIO.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithgateway","title":"fn spec.sideCars.volumes.scaleIO.withGateway","text":"<pre><code>withGateway(gateway)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithprotectiondomain","title":"fn spec.sideCars.volumes.scaleIO.withProtectionDomain","text":"<pre><code>withProtectionDomain(protectionDomain)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithreadonly","title":"fn spec.sideCars.volumes.scaleIO.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithsslenabled","title":"fn spec.sideCars.volumes.scaleIO.withSslEnabled","text":"<pre><code>withSslEnabled(sslEnabled)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithstoragemode","title":"fn spec.sideCars.volumes.scaleIO.withStorageMode","text":"<pre><code>withStorageMode(storageMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithstoragepool","title":"fn spec.sideCars.volumes.scaleIO.withStoragePool","text":"<pre><code>withStoragePool(storagePool)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithsystem","title":"fn spec.sideCars.volumes.scaleIO.withSystem","text":"<pre><code>withSystem(system)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithvolumename","title":"fn spec.sideCars.volumes.scaleIO.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesscaleiosecretref","title":"obj spec.sideCars.volumes.scaleIO.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesscaleiosecretrefwithname","title":"fn spec.sideCars.volumes.scaleIO.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumessecret","title":"obj spec.sideCars.volumes.secret","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumessecretwithdefaultmode","title":"fn spec.sideCars.volumes.secret.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumessecretwithitems","title":"fn spec.sideCars.volumes.secret.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumessecretwithitemsmixin","title":"fn spec.sideCars.volumes.secret.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumessecretwithoptional","title":"fn spec.sideCars.volumes.secret.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumessecretwithsecretname","title":"fn spec.sideCars.volumes.secret.withSecretName","text":"<pre><code>withSecretName(secretName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumessecretitems","title":"obj spec.sideCars.volumes.secret.items","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumessecretitemswithkey","title":"fn spec.sideCars.volumes.secret.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumessecretitemswithmode","title":"fn spec.sideCars.volumes.secret.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumessecretitemswithpath","title":"fn spec.sideCars.volumes.secret.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesstorageos","title":"obj spec.sideCars.volumes.storageos","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesstorageoswithfstype","title":"fn spec.sideCars.volumes.storageos.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesstorageoswithreadonly","title":"fn spec.sideCars.volumes.storageos.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesstorageoswithvolumename","title":"fn spec.sideCars.volumes.storageos.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesstorageoswithvolumenamespace","title":"fn spec.sideCars.volumes.storageos.withVolumeNamespace","text":"<pre><code>withVolumeNamespace(volumeNamespace)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesstorageossecretref","title":"obj spec.sideCars.volumes.storageos.secretRef","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesstorageossecretrefwithname","title":"fn spec.sideCars.volumes.storageos.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specsidecarsvolumesvspherevolume","title":"obj spec.sideCars.volumes.vsphereVolume","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesvspherevolumewithfstype","title":"fn spec.sideCars.volumes.vsphereVolume.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesvspherevolumewithstoragepolicyid","title":"fn spec.sideCars.volumes.vsphereVolume.withStoragePolicyID","text":"<pre><code>withStoragePolicyID(storagePolicyID)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesvspherevolumewithstoragepolicyname","title":"fn spec.sideCars.volumes.vsphereVolume.withStoragePolicyName","text":"<pre><code>withStoragePolicyName(storagePolicyName)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specsidecarsvolumesvspherevolumewithvolumepath","title":"fn spec.sideCars.volumes.vsphereVolume.withVolumePath","text":"<pre><code>withVolumePath(volumePath)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specstartup","title":"obj spec.startup","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartupwithfailurethreshold","title":"fn spec.startup.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartupwithinitialdelayseconds","title":"fn spec.startup.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartupwithperiodseconds","title":"fn spec.startup.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartupwithsuccessthreshold","title":"fn spec.startup.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartupwithterminationgraceperiodseconds","title":"fn spec.startup.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartupwithtimeoutseconds","title":"fn spec.startup.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specstartupexec","title":"obj spec.startup.exec","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartupexecwithcommand","title":"fn spec.startup.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartupexecwithcommandmixin","title":"fn spec.startup.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specstartupgrpc","title":"obj spec.startup.grpc","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartupgrpcwithport","title":"fn spec.startup.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartupgrpcwithservice","title":"fn spec.startup.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specstartuphttpget","title":"obj spec.startup.httpGet","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartuphttpgetwithhost","title":"fn spec.startup.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartuphttpgetwithhttpheaders","title":"fn spec.startup.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartuphttpgetwithhttpheadersmixin","title":"fn spec.startup.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartuphttpgetwithpath","title":"fn spec.startup.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartuphttpgetwithport","title":"fn spec.startup.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartuphttpgetwithscheme","title":"fn spec.startup.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specstartuphttpgethttpheaders","title":"obj spec.startup.httpGet.httpHeaders","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartuphttpgethttpheaderswithname","title":"fn spec.startup.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartuphttpgethttpheaderswithvalue","title":"fn spec.startup.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specstartuptcpsocket","title":"obj spec.startup.tcpSocket","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartuptcpsocketwithhost","title":"fn spec.startup.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#fn-specstartuptcpsocketwithport","title":"fn spec.startup.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v5.0.15/minio/v2/tenant/#obj-specusers","title":"obj spec.users","text":""},{"location":"v5.0.15/minio/v2/tenant/#fn-specuserswithname","title":"fn spec.users.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/","title":"minio-operator","text":"<pre><code>local minio-operator = import \"github.com/jsonnet-libs/minio-operator-libsonnet/v6.0.0/main.libsonnet\"\n</code></pre> <ul> <li>job</li> <li>minio</li> </ul>"},{"location":"v6.0.0/job/","title":"job","text":"<ul> <li>v1alpha1</li> </ul>"},{"location":"v6.0.0/job/v1alpha1/","title":"job.v1alpha1","text":"<ul> <li>minIOJob</li> </ul>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/","title":"job.v1alpha1.minIOJob","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCommands(commands)</code></li> <li><code>fn withCommandsMixin(commands)</code></li> <li><code>fn withExecution(execution)</code></li> <li><code>fn withFailureStrategy(failureStrategy)</code></li> <li><code>fn withImagePullPolicy(imagePullPolicy)</code></li> <li><code>fn withImagePullSecret(imagePullSecret)</code></li> <li><code>fn withImagePullSecretMixin(imagePullSecret)</code></li> <li><code>fn withMcImage(mcImage)</code></li> <li><code>fn withServiceAccountName(serviceAccountName)</code></li> <li><code>obj spec.commands</code><ul> <li><code>fn withArgs(args)</code></li> <li><code>fn withArgsMixin(args)</code></li> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withEnv(env)</code></li> <li><code>fn withEnvFrom(envFrom)</code></li> <li><code>fn withEnvFromMixin(envFrom)</code></li> <li><code>fn withEnvMixin(env)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOp(op)</code></li> <li><code>fn withVolumeMounts(volumeMounts)</code></li> <li><code>fn withVolumeMountsMixin(volumeMounts)</code></li> <li><code>fn withVolumes(volumes)</code></li> <li><code>fn withVolumesMixin(volumes)</code></li> <li><code>obj spec.commands.env</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj spec.commands.env.valueFrom</code><ul> <li><code>obj spec.commands.env.valueFrom.configMapKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> <li><code>obj spec.commands.env.valueFrom.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.commands.env.valueFrom.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> <li><code>obj spec.commands.env.valueFrom.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.commands.envFrom</code><ul> <li><code>fn withPrefix(prefix)</code></li> <li><code>obj spec.commands.envFrom.configMapRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> <li><code>obj spec.commands.envFrom.secretRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.commands.resources</code><ul> <li><code>fn withClaims(claims)</code></li> <li><code>fn withClaimsMixin(claims)</code></li> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> <li><code>obj spec.commands.resources.claims</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumeMounts</code><ul> <li><code>fn withMountPath(mountPath)</code></li> <li><code>fn withMountPropagation(mountPropagation)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withRecursiveReadOnly(recursiveReadOnly)</code></li> <li><code>fn withSubPath(subPath)</code></li> <li><code>fn withSubPathExpr(subPathExpr)</code></li> </ul> </li> <li><code>obj spec.commands.volumes</code><ul> <li><code>fn withName(name)</code></li> <li><code>obj spec.commands.volumes.awsElasticBlockStore</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withPartition(partition)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeID(volumeID)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.azureDisk</code><ul> <li><code>fn withCachingMode(cachingMode)</code></li> <li><code>fn withDiskName(diskName)</code></li> <li><code>fn withDiskURI(diskURI)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.azureFile</code><ul> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSecretName(secretName)</code></li> <li><code>fn withShareName(shareName)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.cephfs</code><ul> <li><code>fn withMonitors(monitors)</code></li> <li><code>fn withMonitorsMixin(monitors)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSecretFile(secretFile)</code></li> <li><code>fn withUser(user)</code></li> <li><code>obj spec.commands.volumes.cephfs.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.cinder</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeID(volumeID)</code></li> <li><code>obj spec.commands.volumes.cinder.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.configMap</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>obj spec.commands.volumes.configMap.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.csi</code><ul> <li><code>fn withDriver(driver)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeAttributes(volumeAttributes)</code></li> <li><code>fn withVolumeAttributesMixin(volumeAttributes)</code></li> <li><code>obj spec.commands.volumes.csi.nodePublishSecretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.downwardAPI</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>obj spec.commands.volumes.downwardAPI.items</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> <li><code>obj spec.commands.volumes.downwardAPI.items.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.downwardAPI.items.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.emptyDir</code><ul> <li><code>fn withMedium(medium)</code></li> <li><code>fn withSizeLimit(sizeLimit)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.ephemeral</code><ul> <li><code>obj spec.commands.volumes.ephemeral.volumeClaimTemplate</code><ul> <li><code>obj spec.commands.volumes.ephemeral.volumeClaimTemplate.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.ephemeral.volumeClaimTemplate.spec</code><ul> <li><code>fn withAccessModes(accessModes)</code></li> <li><code>fn withAccessModesMixin(accessModes)</code></li> <li><code>fn withStorageClassName(storageClassName)</code></li> <li><code>fn withVolumeAttributesClassName(volumeAttributesClassName)</code></li> <li><code>fn withVolumeMode(volumeMode)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>obj spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.dataSource</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.resources</code><ul> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.fc</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withLun(lun)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withTargetWWNs(targetWWNs)</code></li> <li><code>fn withTargetWWNsMixin(targetWWNs)</code></li> <li><code>fn withWwids(wwids)</code></li> <li><code>fn withWwidsMixin(wwids)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.flexVolume</code><ul> <li><code>fn withDriver(driver)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withOptions(options)</code></li> <li><code>fn withOptionsMixin(options)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>obj spec.commands.volumes.flexVolume.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.flocker</code><ul> <li><code>fn withDatasetName(datasetName)</code></li> <li><code>fn withDatasetUUID(datasetUUID)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.gcePersistentDisk</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withPartition(partition)</code></li> <li><code>fn withPdName(pdName)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.gitRepo</code><ul> <li><code>fn withDirectory(directory)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRevision(revision)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.glusterfs</code><ul> <li><code>fn withEndpoints(endpoints)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.hostPath</code><ul> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.iscsi</code><ul> <li><code>fn withChapAuthDiscovery(chapAuthDiscovery)</code></li> <li><code>fn withChapAuthSession(chapAuthSession)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withInitiatorName(initiatorName)</code></li> <li><code>fn withIqn(iqn)</code></li> <li><code>fn withIscsiInterface(iscsiInterface)</code></li> <li><code>fn withLun(lun)</code></li> <li><code>fn withPortals(portals)</code></li> <li><code>fn withPortalsMixin(portals)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withTargetPortal(targetPortal)</code></li> <li><code>obj spec.commands.volumes.iscsi.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.nfs</code><ul> <li><code>fn withPath(path)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withServer(server)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.persistentVolumeClaim</code><ul> <li><code>fn withClaimName(claimName)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.photonPersistentDisk</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withPdID(pdID)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.portworxVolume</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeID(volumeID)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.projected</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withSources(sources)</code></li> <li><code>fn withSourcesMixin(sources)</code></li> <li><code>obj spec.commands.volumes.projected.sources</code><ul> <li><code>obj spec.commands.volumes.projected.sources.clusterTrustBundle</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withSignerName(signerName)</code></li> <li><code>obj spec.commands.volumes.projected.sources.clusterTrustBundle.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.commands.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.projected.sources.configMap</code><ul> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>obj spec.commands.volumes.projected.sources.configMap.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.projected.sources.downwardAPI</code><ul> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>obj spec.commands.volumes.projected.sources.downwardAPI.items</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> <li><code>obj spec.commands.volumes.projected.sources.downwardAPI.items.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.projected.sources.downwardAPI.items.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.projected.sources.secret</code><ul> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>obj spec.commands.volumes.projected.sources.secret.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.projected.sources.serviceAccountToken</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withExpirationSeconds(expirationSeconds)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.quobyte</code><ul> <li><code>fn withGroup(group)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withRegistry(registry)</code></li> <li><code>fn withTenant(tenant)</code></li> <li><code>fn withUser(user)</code></li> <li><code>fn withVolume(volume)</code></li> </ul> </li> <li><code>obj spec.commands.volumes.rbd</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withImage(image)</code></li> <li><code>fn withKeyring(keyring)</code></li> <li><code>fn withMonitors(monitors)</code></li> <li><code>fn withMonitorsMixin(monitors)</code></li> <li><code>fn withPool(pool)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withUser(user)</code></li> <li><code>obj spec.commands.volumes.rbd.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.scaleIO</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withGateway(gateway)</code></li> <li><code>fn withProtectionDomain(protectionDomain)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSslEnabled(sslEnabled)</code></li> <li><code>fn withStorageMode(storageMode)</code></li> <li><code>fn withStoragePool(storagePool)</code></li> <li><code>fn withSystem(system)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>obj spec.commands.volumes.scaleIO.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.secret</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>fn withSecretName(secretName)</code></li> <li><code>obj spec.commands.volumes.secret.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.storageos</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>fn withVolumeNamespace(volumeNamespace)</code></li> <li><code>obj spec.commands.volumes.storageos.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.commands.volumes.vsphereVolume</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withStoragePolicyID(storagePolicyID)</code></li> <li><code>fn withStoragePolicyName(storagePolicyName)</code></li> <li><code>fn withVolumePath(volumePath)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.containerSecurityContext</code><ul> <li><code>fn withAllowPrivilegeEscalation(allowPrivilegeEscalation)</code></li> <li><code>fn withPrivileged(privileged)</code></li> <li><code>fn withProcMount(procMount)</code></li> <li><code>fn withReadOnlyRootFilesystem(readOnlyRootFilesystem)</code></li> <li><code>fn withRunAsGroup(runAsGroup)</code></li> <li><code>fn withRunAsNonRoot(runAsNonRoot)</code></li> <li><code>fn withRunAsUser(runAsUser)</code></li> <li><code>obj spec.containerSecurityContext.appArmorProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.containerSecurityContext.capabilities</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withDrop(drop)</code></li> <li><code>fn withDropMixin(drop)</code></li> </ul> </li> <li><code>obj spec.containerSecurityContext.seLinuxOptions</code><ul> <li><code>fn withLevel(level)</code></li> <li><code>fn withRole(role)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUser(user)</code></li> </ul> </li> <li><code>obj spec.containerSecurityContext.seccompProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.containerSecurityContext.windowsOptions</code><ul> <li><code>fn withGmsaCredentialSpec(gmsaCredentialSpec)</code></li> <li><code>fn withGmsaCredentialSpecName(gmsaCredentialSpecName)</code></li> <li><code>fn withHostProcess(hostProcess)</code></li> <li><code>fn withRunAsUserName(runAsUserName)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.imagePullSecret</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.securityContext</code><ul> <li><code>fn withFsGroup(fsGroup)</code></li> <li><code>fn withFsGroupChangePolicy(fsGroupChangePolicy)</code></li> <li><code>fn withRunAsGroup(runAsGroup)</code></li> <li><code>fn withRunAsNonRoot(runAsNonRoot)</code></li> <li><code>fn withRunAsUser(runAsUser)</code></li> <li><code>fn withSupplementalGroups(supplementalGroups)</code></li> <li><code>fn withSupplementalGroupsMixin(supplementalGroups)</code></li> <li><code>fn withSysctls(sysctls)</code></li> <li><code>fn withSysctlsMixin(sysctls)</code></li> <li><code>obj spec.securityContext.appArmorProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.securityContext.seLinuxOptions</code><ul> <li><code>fn withLevel(level)</code></li> <li><code>fn withRole(role)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUser(user)</code></li> </ul> </li> <li><code>obj spec.securityContext.seccompProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.securityContext.sysctls</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.securityContext.windowsOptions</code><ul> <li><code>fn withGmsaCredentialSpec(gmsaCredentialSpec)</code></li> <li><code>fn withGmsaCredentialSpecName(gmsaCredentialSpecName)</code></li> <li><code>fn withHostProcess(hostProcess)</code></li> <li><code>fn withRunAsUserName(runAsUserName)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.tenant</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fields","title":"Fields","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of MinIOJob</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-spec","title":"obj spec","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specwithcommands","title":"fn spec.withCommands","text":"<pre><code>withCommands(commands)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specwithcommandsmixin","title":"fn spec.withCommandsMixin","text":"<pre><code>withCommandsMixin(commands)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specwithexecution","title":"fn spec.withExecution","text":"<pre><code>withExecution(execution)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specwithfailurestrategy","title":"fn spec.withFailureStrategy","text":"<pre><code>withFailureStrategy(failureStrategy)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specwithimagepullpolicy","title":"fn spec.withImagePullPolicy","text":"<pre><code>withImagePullPolicy(imagePullPolicy)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specwithimagepullsecret","title":"fn spec.withImagePullSecret","text":"<pre><code>withImagePullSecret(imagePullSecret)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specwithimagepullsecretmixin","title":"fn spec.withImagePullSecretMixin","text":"<pre><code>withImagePullSecretMixin(imagePullSecret)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specwithmcimage","title":"fn spec.withMcImage","text":"<pre><code>withMcImage(mcImage)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specwithserviceaccountname","title":"fn spec.withServiceAccountName","text":"<pre><code>withServiceAccountName(serviceAccountName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommands","title":"obj spec.commands","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithargs","title":"fn spec.commands.withArgs","text":"<pre><code>withArgs(args)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithargsmixin","title":"fn spec.commands.withArgsMixin","text":"<pre><code>withArgsMixin(args)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithcommand","title":"fn spec.commands.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithcommandmixin","title":"fn spec.commands.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithdependson","title":"fn spec.commands.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithdependsonmixin","title":"fn spec.commands.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithenv","title":"fn spec.commands.withEnv","text":"<pre><code>withEnv(env)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithenvfrom","title":"fn spec.commands.withEnvFrom","text":"<pre><code>withEnvFrom(envFrom)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithenvfrommixin","title":"fn spec.commands.withEnvFromMixin","text":"<pre><code>withEnvFromMixin(envFrom)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithenvmixin","title":"fn spec.commands.withEnvMixin","text":"<pre><code>withEnvMixin(env)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithname","title":"fn spec.commands.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithop","title":"fn spec.commands.withOp","text":"<pre><code>withOp(op)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithvolumemounts","title":"fn spec.commands.withVolumeMounts","text":"<pre><code>withVolumeMounts(volumeMounts)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithvolumemountsmixin","title":"fn spec.commands.withVolumeMountsMixin","text":"<pre><code>withVolumeMountsMixin(volumeMounts)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithvolumes","title":"fn spec.commands.withVolumes","text":"<pre><code>withVolumes(volumes)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandswithvolumesmixin","title":"fn spec.commands.withVolumesMixin","text":"<pre><code>withVolumesMixin(volumes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsenv","title":"obj spec.commands.env","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvwithname","title":"fn spec.commands.env.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvwithvalue","title":"fn spec.commands.env.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsenvvaluefrom","title":"obj spec.commands.env.valueFrom","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsenvvaluefromconfigmapkeyref","title":"obj spec.commands.env.valueFrom.configMapKeyRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvvaluefromconfigmapkeyrefwithkey","title":"fn spec.commands.env.valueFrom.configMapKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvvaluefromconfigmapkeyrefwithname","title":"fn spec.commands.env.valueFrom.configMapKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvvaluefromconfigmapkeyrefwithoptional","title":"fn spec.commands.env.valueFrom.configMapKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsenvvaluefromfieldref","title":"obj spec.commands.env.valueFrom.fieldRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvvaluefromfieldrefwithapiversion","title":"fn spec.commands.env.valueFrom.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvvaluefromfieldrefwithfieldpath","title":"fn spec.commands.env.valueFrom.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsenvvaluefromresourcefieldref","title":"obj spec.commands.env.valueFrom.resourceFieldRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvvaluefromresourcefieldrefwithcontainername","title":"fn spec.commands.env.valueFrom.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvvaluefromresourcefieldrefwithdivisor","title":"fn spec.commands.env.valueFrom.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvvaluefromresourcefieldrefwithresource","title":"fn spec.commands.env.valueFrom.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsenvvaluefromsecretkeyref","title":"obj spec.commands.env.valueFrom.secretKeyRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvvaluefromsecretkeyrefwithkey","title":"fn spec.commands.env.valueFrom.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvvaluefromsecretkeyrefwithname","title":"fn spec.commands.env.valueFrom.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvvaluefromsecretkeyrefwithoptional","title":"fn spec.commands.env.valueFrom.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsenvfrom","title":"obj spec.commands.envFrom","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvfromwithprefix","title":"fn spec.commands.envFrom.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsenvfromconfigmapref","title":"obj spec.commands.envFrom.configMapRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvfromconfigmaprefwithname","title":"fn spec.commands.envFrom.configMapRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvfromconfigmaprefwithoptional","title":"fn spec.commands.envFrom.configMapRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsenvfromsecretref","title":"obj spec.commands.envFrom.secretRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvfromsecretrefwithname","title":"fn spec.commands.envFrom.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsenvfromsecretrefwithoptional","title":"fn spec.commands.envFrom.secretRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsresources","title":"obj spec.commands.resources","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsresourceswithclaims","title":"fn spec.commands.resources.withClaims","text":"<pre><code>withClaims(claims)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsresourceswithclaimsmixin","title":"fn spec.commands.resources.withClaimsMixin","text":"<pre><code>withClaimsMixin(claims)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsresourceswithlimits","title":"fn spec.commands.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsresourceswithlimitsmixin","title":"fn spec.commands.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsresourceswithrequests","title":"fn spec.commands.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsresourceswithrequestsmixin","title":"fn spec.commands.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsresourcesclaims","title":"obj spec.commands.resources.claims","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsresourcesclaimswithname","title":"fn spec.commands.resources.claims.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumemounts","title":"obj spec.commands.volumeMounts","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumemountswithmountpath","title":"fn spec.commands.volumeMounts.withMountPath","text":"<pre><code>withMountPath(mountPath)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumemountswithmountpropagation","title":"fn spec.commands.volumeMounts.withMountPropagation","text":"<pre><code>withMountPropagation(mountPropagation)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumemountswithname","title":"fn spec.commands.volumeMounts.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumemountswithreadonly","title":"fn spec.commands.volumeMounts.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumemountswithrecursivereadonly","title":"fn spec.commands.volumeMounts.withRecursiveReadOnly","text":"<pre><code>withRecursiveReadOnly(recursiveReadOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumemountswithsubpath","title":"fn spec.commands.volumeMounts.withSubPath","text":"<pre><code>withSubPath(subPath)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumemountswithsubpathexpr","title":"fn spec.commands.volumeMounts.withSubPathExpr","text":"<pre><code>withSubPathExpr(subPathExpr)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumes","title":"obj spec.commands.volumes","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumeswithname","title":"fn spec.commands.volumes.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesawselasticblockstore","title":"obj spec.commands.volumes.awsElasticBlockStore","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesawselasticblockstorewithfstype","title":"fn spec.commands.volumes.awsElasticBlockStore.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesawselasticblockstorewithpartition","title":"fn spec.commands.volumes.awsElasticBlockStore.withPartition","text":"<pre><code>withPartition(partition)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesawselasticblockstorewithreadonly","title":"fn spec.commands.volumes.awsElasticBlockStore.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesawselasticblockstorewithvolumeid","title":"fn spec.commands.volumes.awsElasticBlockStore.withVolumeID","text":"<pre><code>withVolumeID(volumeID)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesazuredisk","title":"obj spec.commands.volumes.azureDisk","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesazurediskwithcachingmode","title":"fn spec.commands.volumes.azureDisk.withCachingMode","text":"<pre><code>withCachingMode(cachingMode)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesazurediskwithdiskname","title":"fn spec.commands.volumes.azureDisk.withDiskName","text":"<pre><code>withDiskName(diskName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesazurediskwithdiskuri","title":"fn spec.commands.volumes.azureDisk.withDiskURI","text":"<pre><code>withDiskURI(diskURI)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesazurediskwithfstype","title":"fn spec.commands.volumes.azureDisk.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesazurediskwithkind","title":"fn spec.commands.volumes.azureDisk.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesazurediskwithreadonly","title":"fn spec.commands.volumes.azureDisk.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesazurefile","title":"obj spec.commands.volumes.azureFile","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesazurefilewithreadonly","title":"fn spec.commands.volumes.azureFile.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesazurefilewithsecretname","title":"fn spec.commands.volumes.azureFile.withSecretName","text":"<pre><code>withSecretName(secretName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesazurefilewithsharename","title":"fn spec.commands.volumes.azureFile.withShareName","text":"<pre><code>withShareName(shareName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumescephfs","title":"obj spec.commands.volumes.cephfs","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescephfswithmonitors","title":"fn spec.commands.volumes.cephfs.withMonitors","text":"<pre><code>withMonitors(monitors)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescephfswithmonitorsmixin","title":"fn spec.commands.volumes.cephfs.withMonitorsMixin","text":"<pre><code>withMonitorsMixin(monitors)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescephfswithpath","title":"fn spec.commands.volumes.cephfs.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescephfswithreadonly","title":"fn spec.commands.volumes.cephfs.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescephfswithsecretfile","title":"fn spec.commands.volumes.cephfs.withSecretFile","text":"<pre><code>withSecretFile(secretFile)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescephfswithuser","title":"fn spec.commands.volumes.cephfs.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumescephfssecretref","title":"obj spec.commands.volumes.cephfs.secretRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescephfssecretrefwithname","title":"fn spec.commands.volumes.cephfs.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumescinder","title":"obj spec.commands.volumes.cinder","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescinderwithfstype","title":"fn spec.commands.volumes.cinder.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescinderwithreadonly","title":"fn spec.commands.volumes.cinder.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescinderwithvolumeid","title":"fn spec.commands.volumes.cinder.withVolumeID","text":"<pre><code>withVolumeID(volumeID)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumescindersecretref","title":"obj spec.commands.volumes.cinder.secretRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescindersecretrefwithname","title":"fn spec.commands.volumes.cinder.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesconfigmap","title":"obj spec.commands.volumes.configMap","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesconfigmapwithdefaultmode","title":"fn spec.commands.volumes.configMap.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesconfigmapwithitems","title":"fn spec.commands.volumes.configMap.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesconfigmapwithitemsmixin","title":"fn spec.commands.volumes.configMap.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesconfigmapwithname","title":"fn spec.commands.volumes.configMap.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesconfigmapwithoptional","title":"fn spec.commands.volumes.configMap.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesconfigmapitems","title":"obj spec.commands.volumes.configMap.items","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesconfigmapitemswithkey","title":"fn spec.commands.volumes.configMap.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesconfigmapitemswithmode","title":"fn spec.commands.volumes.configMap.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesconfigmapitemswithpath","title":"fn spec.commands.volumes.configMap.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumescsi","title":"obj spec.commands.volumes.csi","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescsiwithdriver","title":"fn spec.commands.volumes.csi.withDriver","text":"<pre><code>withDriver(driver)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescsiwithfstype","title":"fn spec.commands.volumes.csi.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescsiwithreadonly","title":"fn spec.commands.volumes.csi.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescsiwithvolumeattributes","title":"fn spec.commands.volumes.csi.withVolumeAttributes","text":"<pre><code>withVolumeAttributes(volumeAttributes)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescsiwithvolumeattributesmixin","title":"fn spec.commands.volumes.csi.withVolumeAttributesMixin","text":"<pre><code>withVolumeAttributesMixin(volumeAttributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumescsinodepublishsecretref","title":"obj spec.commands.volumes.csi.nodePublishSecretRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumescsinodepublishsecretrefwithname","title":"fn spec.commands.volumes.csi.nodePublishSecretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesdownwardapi","title":"obj spec.commands.volumes.downwardAPI","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesdownwardapiwithdefaultmode","title":"fn spec.commands.volumes.downwardAPI.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesdownwardapiwithitems","title":"fn spec.commands.volumes.downwardAPI.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesdownwardapiwithitemsmixin","title":"fn spec.commands.volumes.downwardAPI.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesdownwardapiitems","title":"obj spec.commands.volumes.downwardAPI.items","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesdownwardapiitemswithmode","title":"fn spec.commands.volumes.downwardAPI.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesdownwardapiitemswithpath","title":"fn spec.commands.volumes.downwardAPI.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesdownwardapiitemsfieldref","title":"obj spec.commands.volumes.downwardAPI.items.fieldRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesdownwardapiitemsfieldrefwithapiversion","title":"fn spec.commands.volumes.downwardAPI.items.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesdownwardapiitemsfieldrefwithfieldpath","title":"fn spec.commands.volumes.downwardAPI.items.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesdownwardapiitemsresourcefieldref","title":"obj spec.commands.volumes.downwardAPI.items.resourceFieldRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesdownwardapiitemsresourcefieldrefwithcontainername","title":"fn spec.commands.volumes.downwardAPI.items.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesdownwardapiitemsresourcefieldrefwithdivisor","title":"fn spec.commands.volumes.downwardAPI.items.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesdownwardapiitemsresourcefieldrefwithresource","title":"fn spec.commands.volumes.downwardAPI.items.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesemptydir","title":"obj spec.commands.volumes.emptyDir","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesemptydirwithmedium","title":"fn spec.commands.volumes.emptyDir.withMedium","text":"<pre><code>withMedium(medium)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesemptydirwithsizelimit","title":"fn spec.commands.volumes.emptyDir.withSizeLimit","text":"<pre><code>withSizeLimit(sizeLimit)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesephemeral","title":"obj spec.commands.volumes.ephemeral","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesephemeralvolumeclaimtemplate","title":"obj spec.commands.volumes.ephemeral.volumeClaimTemplate","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesephemeralvolumeclaimtemplatemetadata","title":"obj spec.commands.volumes.ephemeral.volumeClaimTemplate.metadata","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatemetadatawithannotations","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatemetadatawithannotationsmixin","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatemetadatawithfinalizers","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatemetadatawithfinalizersmixin","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatemetadatawithlabels","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatemetadatawithlabelsmixin","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatemetadatawithname","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatemetadatawithnamespace","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesephemeralvolumeclaimtemplatespec","title":"obj spec.commands.volumes.ephemeral.volumeClaimTemplate.spec","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecwithaccessmodes","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.withAccessModes","text":"<pre><code>withAccessModes(accessModes)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecwithaccessmodesmixin","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.withAccessModesMixin","text":"<pre><code>withAccessModesMixin(accessModes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecwithstorageclassname","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.withStorageClassName","text":"<pre><code>withStorageClassName(storageClassName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecwithvolumeattributesclassname","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.withVolumeAttributesClassName","text":"<pre><code>withVolumeAttributesClassName(volumeAttributesClassName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecwithvolumemode","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.withVolumeMode","text":"<pre><code>withVolumeMode(volumeMode)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecwithvolumename","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesephemeralvolumeclaimtemplatespecdatasource","title":"obj spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.dataSource","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecdatasourcewithapigroup","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.dataSource.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecdatasourcewithkind","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.dataSource.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecdatasourcewithname","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.dataSource.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesephemeralvolumeclaimtemplatespecdatasourceref","title":"obj spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithapigroup","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithkind","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithname","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithnamespace","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesephemeralvolumeclaimtemplatespecresources","title":"obj spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.resources","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecresourceswithlimits","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecresourceswithlimitsmixin","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecresourceswithrequests","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecresourceswithrequestsmixin","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesephemeralvolumeclaimtemplatespecselector","title":"obj spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.selector","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecselectorwithmatchexpressions","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecselectorwithmatchexpressionsmixin","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecselectorwithmatchlabels","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecselectorwithmatchlabelsmixin","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesephemeralvolumeclaimtemplatespecselectormatchexpressions","title":"obj spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithkey","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithoperator","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithvalues","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithvaluesmixin","title":"fn spec.commands.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesfc","title":"obj spec.commands.volumes.fc","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesfcwithfstype","title":"fn spec.commands.volumes.fc.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesfcwithlun","title":"fn spec.commands.volumes.fc.withLun","text":"<pre><code>withLun(lun)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesfcwithreadonly","title":"fn spec.commands.volumes.fc.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesfcwithtargetwwns","title":"fn spec.commands.volumes.fc.withTargetWWNs","text":"<pre><code>withTargetWWNs(targetWWNs)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesfcwithtargetwwnsmixin","title":"fn spec.commands.volumes.fc.withTargetWWNsMixin","text":"<pre><code>withTargetWWNsMixin(targetWWNs)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesfcwithwwids","title":"fn spec.commands.volumes.fc.withWwids","text":"<pre><code>withWwids(wwids)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesfcwithwwidsmixin","title":"fn spec.commands.volumes.fc.withWwidsMixin","text":"<pre><code>withWwidsMixin(wwids)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesflexvolume","title":"obj spec.commands.volumes.flexVolume","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesflexvolumewithdriver","title":"fn spec.commands.volumes.flexVolume.withDriver","text":"<pre><code>withDriver(driver)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesflexvolumewithfstype","title":"fn spec.commands.volumes.flexVolume.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesflexvolumewithoptions","title":"fn spec.commands.volumes.flexVolume.withOptions","text":"<pre><code>withOptions(options)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesflexvolumewithoptionsmixin","title":"fn spec.commands.volumes.flexVolume.withOptionsMixin","text":"<pre><code>withOptionsMixin(options)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesflexvolumewithreadonly","title":"fn spec.commands.volumes.flexVolume.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesflexvolumesecretref","title":"obj spec.commands.volumes.flexVolume.secretRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesflexvolumesecretrefwithname","title":"fn spec.commands.volumes.flexVolume.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesflocker","title":"obj spec.commands.volumes.flocker","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesflockerwithdatasetname","title":"fn spec.commands.volumes.flocker.withDatasetName","text":"<pre><code>withDatasetName(datasetName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesflockerwithdatasetuuid","title":"fn spec.commands.volumes.flocker.withDatasetUUID","text":"<pre><code>withDatasetUUID(datasetUUID)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesgcepersistentdisk","title":"obj spec.commands.volumes.gcePersistentDisk","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesgcepersistentdiskwithfstype","title":"fn spec.commands.volumes.gcePersistentDisk.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesgcepersistentdiskwithpartition","title":"fn spec.commands.volumes.gcePersistentDisk.withPartition","text":"<pre><code>withPartition(partition)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesgcepersistentdiskwithpdname","title":"fn spec.commands.volumes.gcePersistentDisk.withPdName","text":"<pre><code>withPdName(pdName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesgcepersistentdiskwithreadonly","title":"fn spec.commands.volumes.gcePersistentDisk.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesgitrepo","title":"obj spec.commands.volumes.gitRepo","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesgitrepowithdirectory","title":"fn spec.commands.volumes.gitRepo.withDirectory","text":"<pre><code>withDirectory(directory)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesgitrepowithrepository","title":"fn spec.commands.volumes.gitRepo.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesgitrepowithrevision","title":"fn spec.commands.volumes.gitRepo.withRevision","text":"<pre><code>withRevision(revision)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesglusterfs","title":"obj spec.commands.volumes.glusterfs","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesglusterfswithendpoints","title":"fn spec.commands.volumes.glusterfs.withEndpoints","text":"<pre><code>withEndpoints(endpoints)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesglusterfswithpath","title":"fn spec.commands.volumes.glusterfs.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesglusterfswithreadonly","title":"fn spec.commands.volumes.glusterfs.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumeshostpath","title":"obj spec.commands.volumes.hostPath","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumeshostpathwithpath","title":"fn spec.commands.volumes.hostPath.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumeshostpathwithtype","title":"fn spec.commands.volumes.hostPath.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesiscsi","title":"obj spec.commands.volumes.iscsi","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesiscsiwithchapauthdiscovery","title":"fn spec.commands.volumes.iscsi.withChapAuthDiscovery","text":"<pre><code>withChapAuthDiscovery(chapAuthDiscovery)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesiscsiwithchapauthsession","title":"fn spec.commands.volumes.iscsi.withChapAuthSession","text":"<pre><code>withChapAuthSession(chapAuthSession)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesiscsiwithfstype","title":"fn spec.commands.volumes.iscsi.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesiscsiwithinitiatorname","title":"fn spec.commands.volumes.iscsi.withInitiatorName","text":"<pre><code>withInitiatorName(initiatorName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesiscsiwithiqn","title":"fn spec.commands.volumes.iscsi.withIqn","text":"<pre><code>withIqn(iqn)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesiscsiwithiscsiinterface","title":"fn spec.commands.volumes.iscsi.withIscsiInterface","text":"<pre><code>withIscsiInterface(iscsiInterface)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesiscsiwithlun","title":"fn spec.commands.volumes.iscsi.withLun","text":"<pre><code>withLun(lun)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesiscsiwithportals","title":"fn spec.commands.volumes.iscsi.withPortals","text":"<pre><code>withPortals(portals)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesiscsiwithportalsmixin","title":"fn spec.commands.volumes.iscsi.withPortalsMixin","text":"<pre><code>withPortalsMixin(portals)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesiscsiwithreadonly","title":"fn spec.commands.volumes.iscsi.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesiscsiwithtargetportal","title":"fn spec.commands.volumes.iscsi.withTargetPortal","text":"<pre><code>withTargetPortal(targetPortal)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesiscsisecretref","title":"obj spec.commands.volumes.iscsi.secretRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesiscsisecretrefwithname","title":"fn spec.commands.volumes.iscsi.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesnfs","title":"obj spec.commands.volumes.nfs","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesnfswithpath","title":"fn spec.commands.volumes.nfs.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesnfswithreadonly","title":"fn spec.commands.volumes.nfs.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesnfswithserver","title":"fn spec.commands.volumes.nfs.withServer","text":"<pre><code>withServer(server)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumespersistentvolumeclaim","title":"obj spec.commands.volumes.persistentVolumeClaim","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumespersistentvolumeclaimwithclaimname","title":"fn spec.commands.volumes.persistentVolumeClaim.withClaimName","text":"<pre><code>withClaimName(claimName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumespersistentvolumeclaimwithreadonly","title":"fn spec.commands.volumes.persistentVolumeClaim.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesphotonpersistentdisk","title":"obj spec.commands.volumes.photonPersistentDisk","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesphotonpersistentdiskwithfstype","title":"fn spec.commands.volumes.photonPersistentDisk.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesphotonpersistentdiskwithpdid","title":"fn spec.commands.volumes.photonPersistentDisk.withPdID","text":"<pre><code>withPdID(pdID)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesportworxvolume","title":"obj spec.commands.volumes.portworxVolume","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesportworxvolumewithfstype","title":"fn spec.commands.volumes.portworxVolume.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesportworxvolumewithreadonly","title":"fn spec.commands.volumes.portworxVolume.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesportworxvolumewithvolumeid","title":"fn spec.commands.volumes.portworxVolume.withVolumeID","text":"<pre><code>withVolumeID(volumeID)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesprojected","title":"obj spec.commands.volumes.projected","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedwithdefaultmode","title":"fn spec.commands.volumes.projected.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedwithsources","title":"fn spec.commands.volumes.projected.withSources","text":"<pre><code>withSources(sources)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedwithsourcesmixin","title":"fn spec.commands.volumes.projected.withSourcesMixin","text":"<pre><code>withSourcesMixin(sources)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesprojectedsources","title":"obj spec.commands.volumes.projected.sources","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesprojectedsourcesclustertrustbundle","title":"obj spec.commands.volumes.projected.sources.clusterTrustBundle","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesclustertrustbundlewithname","title":"fn spec.commands.volumes.projected.sources.clusterTrustBundle.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesclustertrustbundlewithoptional","title":"fn spec.commands.volumes.projected.sources.clusterTrustBundle.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesclustertrustbundlewithpath","title":"fn spec.commands.volumes.projected.sources.clusterTrustBundle.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesclustertrustbundlewithsignername","title":"fn spec.commands.volumes.projected.sources.clusterTrustBundle.withSignerName","text":"<pre><code>withSignerName(signerName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesprojectedsourcesclustertrustbundlelabelselector","title":"obj spec.commands.volumes.projected.sources.clusterTrustBundle.labelSelector","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchexpressions","title":"fn spec.commands.volumes.projected.sources.clusterTrustBundle.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchexpressionsmixin","title":"fn spec.commands.volumes.projected.sources.clusterTrustBundle.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchlabels","title":"fn spec.commands.volumes.projected.sources.clusterTrustBundle.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchlabelsmixin","title":"fn spec.commands.volumes.projected.sources.clusterTrustBundle.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressions","title":"obj spec.commands.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithkey","title":"fn spec.commands.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithoperator","title":"fn spec.commands.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithvalues","title":"fn spec.commands.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithvaluesmixin","title":"fn spec.commands.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesprojectedsourcesconfigmap","title":"obj spec.commands.volumes.projected.sources.configMap","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesconfigmapwithitems","title":"fn spec.commands.volumes.projected.sources.configMap.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesconfigmapwithitemsmixin","title":"fn spec.commands.volumes.projected.sources.configMap.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesconfigmapwithname","title":"fn spec.commands.volumes.projected.sources.configMap.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesconfigmapwithoptional","title":"fn spec.commands.volumes.projected.sources.configMap.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesprojectedsourcesconfigmapitems","title":"obj spec.commands.volumes.projected.sources.configMap.items","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesconfigmapitemswithkey","title":"fn spec.commands.volumes.projected.sources.configMap.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesconfigmapitemswithmode","title":"fn spec.commands.volumes.projected.sources.configMap.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesconfigmapitemswithpath","title":"fn spec.commands.volumes.projected.sources.configMap.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesprojectedsourcesdownwardapi","title":"obj spec.commands.volumes.projected.sources.downwardAPI","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesdownwardapiwithitems","title":"fn spec.commands.volumes.projected.sources.downwardAPI.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesdownwardapiwithitemsmixin","title":"fn spec.commands.volumes.projected.sources.downwardAPI.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesprojectedsourcesdownwardapiitems","title":"obj spec.commands.volumes.projected.sources.downwardAPI.items","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesdownwardapiitemswithmode","title":"fn spec.commands.volumes.projected.sources.downwardAPI.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesdownwardapiitemswithpath","title":"fn spec.commands.volumes.projected.sources.downwardAPI.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesprojectedsourcesdownwardapiitemsfieldref","title":"obj spec.commands.volumes.projected.sources.downwardAPI.items.fieldRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesdownwardapiitemsfieldrefwithapiversion","title":"fn spec.commands.volumes.projected.sources.downwardAPI.items.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesdownwardapiitemsfieldrefwithfieldpath","title":"fn spec.commands.volumes.projected.sources.downwardAPI.items.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesprojectedsourcesdownwardapiitemsresourcefieldref","title":"obj spec.commands.volumes.projected.sources.downwardAPI.items.resourceFieldRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesdownwardapiitemsresourcefieldrefwithcontainername","title":"fn spec.commands.volumes.projected.sources.downwardAPI.items.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesdownwardapiitemsresourcefieldrefwithdivisor","title":"fn spec.commands.volumes.projected.sources.downwardAPI.items.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesdownwardapiitemsresourcefieldrefwithresource","title":"fn spec.commands.volumes.projected.sources.downwardAPI.items.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesprojectedsourcessecret","title":"obj spec.commands.volumes.projected.sources.secret","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcessecretwithitems","title":"fn spec.commands.volumes.projected.sources.secret.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcessecretwithitemsmixin","title":"fn spec.commands.volumes.projected.sources.secret.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcessecretwithname","title":"fn spec.commands.volumes.projected.sources.secret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcessecretwithoptional","title":"fn spec.commands.volumes.projected.sources.secret.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesprojectedsourcessecretitems","title":"obj spec.commands.volumes.projected.sources.secret.items","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcessecretitemswithkey","title":"fn spec.commands.volumes.projected.sources.secret.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcessecretitemswithmode","title":"fn spec.commands.volumes.projected.sources.secret.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcessecretitemswithpath","title":"fn spec.commands.volumes.projected.sources.secret.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesprojectedsourcesserviceaccounttoken","title":"obj spec.commands.volumes.projected.sources.serviceAccountToken","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesserviceaccounttokenwithaudience","title":"fn spec.commands.volumes.projected.sources.serviceAccountToken.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesserviceaccounttokenwithexpirationseconds","title":"fn spec.commands.volumes.projected.sources.serviceAccountToken.withExpirationSeconds","text":"<pre><code>withExpirationSeconds(expirationSeconds)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesprojectedsourcesserviceaccounttokenwithpath","title":"fn spec.commands.volumes.projected.sources.serviceAccountToken.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesquobyte","title":"obj spec.commands.volumes.quobyte","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesquobytewithgroup","title":"fn spec.commands.volumes.quobyte.withGroup","text":"<pre><code>withGroup(group)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesquobytewithreadonly","title":"fn spec.commands.volumes.quobyte.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesquobytewithregistry","title":"fn spec.commands.volumes.quobyte.withRegistry","text":"<pre><code>withRegistry(registry)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesquobytewithtenant","title":"fn spec.commands.volumes.quobyte.withTenant","text":"<pre><code>withTenant(tenant)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesquobytewithuser","title":"fn spec.commands.volumes.quobyte.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesquobytewithvolume","title":"fn spec.commands.volumes.quobyte.withVolume","text":"<pre><code>withVolume(volume)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesrbd","title":"obj spec.commands.volumes.rbd","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesrbdwithfstype","title":"fn spec.commands.volumes.rbd.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesrbdwithimage","title":"fn spec.commands.volumes.rbd.withImage","text":"<pre><code>withImage(image)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesrbdwithkeyring","title":"fn spec.commands.volumes.rbd.withKeyring","text":"<pre><code>withKeyring(keyring)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesrbdwithmonitors","title":"fn spec.commands.volumes.rbd.withMonitors","text":"<pre><code>withMonitors(monitors)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesrbdwithmonitorsmixin","title":"fn spec.commands.volumes.rbd.withMonitorsMixin","text":"<pre><code>withMonitorsMixin(monitors)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesrbdwithpool","title":"fn spec.commands.volumes.rbd.withPool","text":"<pre><code>withPool(pool)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesrbdwithreadonly","title":"fn spec.commands.volumes.rbd.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesrbdwithuser","title":"fn spec.commands.volumes.rbd.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesrbdsecretref","title":"obj spec.commands.volumes.rbd.secretRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesrbdsecretrefwithname","title":"fn spec.commands.volumes.rbd.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesscaleio","title":"obj spec.commands.volumes.scaleIO","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesscaleiowithfstype","title":"fn spec.commands.volumes.scaleIO.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesscaleiowithgateway","title":"fn spec.commands.volumes.scaleIO.withGateway","text":"<pre><code>withGateway(gateway)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesscaleiowithprotectiondomain","title":"fn spec.commands.volumes.scaleIO.withProtectionDomain","text":"<pre><code>withProtectionDomain(protectionDomain)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesscaleiowithreadonly","title":"fn spec.commands.volumes.scaleIO.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesscaleiowithsslenabled","title":"fn spec.commands.volumes.scaleIO.withSslEnabled","text":"<pre><code>withSslEnabled(sslEnabled)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesscaleiowithstoragemode","title":"fn spec.commands.volumes.scaleIO.withStorageMode","text":"<pre><code>withStorageMode(storageMode)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesscaleiowithstoragepool","title":"fn spec.commands.volumes.scaleIO.withStoragePool","text":"<pre><code>withStoragePool(storagePool)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesscaleiowithsystem","title":"fn spec.commands.volumes.scaleIO.withSystem","text":"<pre><code>withSystem(system)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesscaleiowithvolumename","title":"fn spec.commands.volumes.scaleIO.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesscaleiosecretref","title":"obj spec.commands.volumes.scaleIO.secretRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesscaleiosecretrefwithname","title":"fn spec.commands.volumes.scaleIO.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumessecret","title":"obj spec.commands.volumes.secret","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumessecretwithdefaultmode","title":"fn spec.commands.volumes.secret.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumessecretwithitems","title":"fn spec.commands.volumes.secret.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumessecretwithitemsmixin","title":"fn spec.commands.volumes.secret.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumessecretwithoptional","title":"fn spec.commands.volumes.secret.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumessecretwithsecretname","title":"fn spec.commands.volumes.secret.withSecretName","text":"<pre><code>withSecretName(secretName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumessecretitems","title":"obj spec.commands.volumes.secret.items","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumessecretitemswithkey","title":"fn spec.commands.volumes.secret.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumessecretitemswithmode","title":"fn spec.commands.volumes.secret.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumessecretitemswithpath","title":"fn spec.commands.volumes.secret.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesstorageos","title":"obj spec.commands.volumes.storageos","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesstorageoswithfstype","title":"fn spec.commands.volumes.storageos.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesstorageoswithreadonly","title":"fn spec.commands.volumes.storageos.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesstorageoswithvolumename","title":"fn spec.commands.volumes.storageos.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesstorageoswithvolumenamespace","title":"fn spec.commands.volumes.storageos.withVolumeNamespace","text":"<pre><code>withVolumeNamespace(volumeNamespace)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesstorageossecretref","title":"obj spec.commands.volumes.storageos.secretRef","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesstorageossecretrefwithname","title":"fn spec.commands.volumes.storageos.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccommandsvolumesvspherevolume","title":"obj spec.commands.volumes.vsphereVolume","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesvspherevolumewithfstype","title":"fn spec.commands.volumes.vsphereVolume.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesvspherevolumewithstoragepolicyid","title":"fn spec.commands.volumes.vsphereVolume.withStoragePolicyID","text":"<pre><code>withStoragePolicyID(storagePolicyID)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesvspherevolumewithstoragepolicyname","title":"fn spec.commands.volumes.vsphereVolume.withStoragePolicyName","text":"<pre><code>withStoragePolicyName(storagePolicyName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccommandsvolumesvspherevolumewithvolumepath","title":"fn spec.commands.volumes.vsphereVolume.withVolumePath","text":"<pre><code>withVolumePath(volumePath)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccontainersecuritycontext","title":"obj spec.containerSecurityContext","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextwithallowprivilegeescalation","title":"fn spec.containerSecurityContext.withAllowPrivilegeEscalation","text":"<pre><code>withAllowPrivilegeEscalation(allowPrivilegeEscalation)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextwithprivileged","title":"fn spec.containerSecurityContext.withPrivileged","text":"<pre><code>withPrivileged(privileged)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextwithprocmount","title":"fn spec.containerSecurityContext.withProcMount","text":"<pre><code>withProcMount(procMount)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextwithreadonlyrootfilesystem","title":"fn spec.containerSecurityContext.withReadOnlyRootFilesystem","text":"<pre><code>withReadOnlyRootFilesystem(readOnlyRootFilesystem)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextwithrunasgroup","title":"fn spec.containerSecurityContext.withRunAsGroup","text":"<pre><code>withRunAsGroup(runAsGroup)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextwithrunasnonroot","title":"fn spec.containerSecurityContext.withRunAsNonRoot","text":"<pre><code>withRunAsNonRoot(runAsNonRoot)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextwithrunasuser","title":"fn spec.containerSecurityContext.withRunAsUser","text":"<pre><code>withRunAsUser(runAsUser)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccontainersecuritycontextapparmorprofile","title":"obj spec.containerSecurityContext.appArmorProfile","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextapparmorprofilewithlocalhostprofile","title":"fn spec.containerSecurityContext.appArmorProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextapparmorprofilewithtype","title":"fn spec.containerSecurityContext.appArmorProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccontainersecuritycontextcapabilities","title":"obj spec.containerSecurityContext.capabilities","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextcapabilitieswithadd","title":"fn spec.containerSecurityContext.capabilities.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextcapabilitieswithaddmixin","title":"fn spec.containerSecurityContext.capabilities.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextcapabilitieswithdrop","title":"fn spec.containerSecurityContext.capabilities.withDrop","text":"<pre><code>withDrop(drop)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextcapabilitieswithdropmixin","title":"fn spec.containerSecurityContext.capabilities.withDropMixin","text":"<pre><code>withDropMixin(drop)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccontainersecuritycontextselinuxoptions","title":"obj spec.containerSecurityContext.seLinuxOptions","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextselinuxoptionswithlevel","title":"fn spec.containerSecurityContext.seLinuxOptions.withLevel","text":"<pre><code>withLevel(level)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextselinuxoptionswithrole","title":"fn spec.containerSecurityContext.seLinuxOptions.withRole","text":"<pre><code>withRole(role)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextselinuxoptionswithtype","title":"fn spec.containerSecurityContext.seLinuxOptions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextselinuxoptionswithuser","title":"fn spec.containerSecurityContext.seLinuxOptions.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccontainersecuritycontextseccompprofile","title":"obj spec.containerSecurityContext.seccompProfile","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextseccompprofilewithlocalhostprofile","title":"fn spec.containerSecurityContext.seccompProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextseccompprofilewithtype","title":"fn spec.containerSecurityContext.seccompProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-speccontainersecuritycontextwindowsoptions","title":"obj spec.containerSecurityContext.windowsOptions","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextwindowsoptionswithgmsacredentialspec","title":"fn spec.containerSecurityContext.windowsOptions.withGmsaCredentialSpec","text":"<pre><code>withGmsaCredentialSpec(gmsaCredentialSpec)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextwindowsoptionswithgmsacredentialspecname","title":"fn spec.containerSecurityContext.windowsOptions.withGmsaCredentialSpecName","text":"<pre><code>withGmsaCredentialSpecName(gmsaCredentialSpecName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextwindowsoptionswithhostprocess","title":"fn spec.containerSecurityContext.windowsOptions.withHostProcess","text":"<pre><code>withHostProcess(hostProcess)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-speccontainersecuritycontextwindowsoptionswithrunasusername","title":"fn spec.containerSecurityContext.windowsOptions.withRunAsUserName","text":"<pre><code>withRunAsUserName(runAsUserName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-specimagepullsecret","title":"obj spec.imagePullSecret","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specimagepullsecretwithname","title":"fn spec.imagePullSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-specsecuritycontext","title":"obj spec.securityContext","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextwithfsgroup","title":"fn spec.securityContext.withFsGroup","text":"<pre><code>withFsGroup(fsGroup)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextwithfsgroupchangepolicy","title":"fn spec.securityContext.withFsGroupChangePolicy","text":"<pre><code>withFsGroupChangePolicy(fsGroupChangePolicy)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextwithrunasgroup","title":"fn spec.securityContext.withRunAsGroup","text":"<pre><code>withRunAsGroup(runAsGroup)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextwithrunasnonroot","title":"fn spec.securityContext.withRunAsNonRoot","text":"<pre><code>withRunAsNonRoot(runAsNonRoot)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextwithrunasuser","title":"fn spec.securityContext.withRunAsUser","text":"<pre><code>withRunAsUser(runAsUser)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextwithsupplementalgroups","title":"fn spec.securityContext.withSupplementalGroups","text":"<pre><code>withSupplementalGroups(supplementalGroups)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextwithsupplementalgroupsmixin","title":"fn spec.securityContext.withSupplementalGroupsMixin","text":"<pre><code>withSupplementalGroupsMixin(supplementalGroups)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextwithsysctls","title":"fn spec.securityContext.withSysctls","text":"<pre><code>withSysctls(sysctls)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextwithsysctlsmixin","title":"fn spec.securityContext.withSysctlsMixin","text":"<pre><code>withSysctlsMixin(sysctls)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-specsecuritycontextapparmorprofile","title":"obj spec.securityContext.appArmorProfile","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextapparmorprofilewithlocalhostprofile","title":"fn spec.securityContext.appArmorProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextapparmorprofilewithtype","title":"fn spec.securityContext.appArmorProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-specsecuritycontextselinuxoptions","title":"obj spec.securityContext.seLinuxOptions","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextselinuxoptionswithlevel","title":"fn spec.securityContext.seLinuxOptions.withLevel","text":"<pre><code>withLevel(level)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextselinuxoptionswithrole","title":"fn spec.securityContext.seLinuxOptions.withRole","text":"<pre><code>withRole(role)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextselinuxoptionswithtype","title":"fn spec.securityContext.seLinuxOptions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextselinuxoptionswithuser","title":"fn spec.securityContext.seLinuxOptions.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-specsecuritycontextseccompprofile","title":"obj spec.securityContext.seccompProfile","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextseccompprofilewithlocalhostprofile","title":"fn spec.securityContext.seccompProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextseccompprofilewithtype","title":"fn spec.securityContext.seccompProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-specsecuritycontextsysctls","title":"obj spec.securityContext.sysctls","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextsysctlswithname","title":"fn spec.securityContext.sysctls.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextsysctlswithvalue","title":"fn spec.securityContext.sysctls.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-specsecuritycontextwindowsoptions","title":"obj spec.securityContext.windowsOptions","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextwindowsoptionswithgmsacredentialspec","title":"fn spec.securityContext.windowsOptions.withGmsaCredentialSpec","text":"<pre><code>withGmsaCredentialSpec(gmsaCredentialSpec)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextwindowsoptionswithgmsacredentialspecname","title":"fn spec.securityContext.windowsOptions.withGmsaCredentialSpecName","text":"<pre><code>withGmsaCredentialSpecName(gmsaCredentialSpecName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextwindowsoptionswithhostprocess","title":"fn spec.securityContext.windowsOptions.withHostProcess","text":"<pre><code>withHostProcess(hostProcess)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-specsecuritycontextwindowsoptionswithrunasusername","title":"fn spec.securityContext.windowsOptions.withRunAsUserName","text":"<pre><code>withRunAsUserName(runAsUserName)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#obj-spectenant","title":"obj spec.tenant","text":""},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-spectenantwithname","title":"fn spec.tenant.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/job/v1alpha1/minIOJob/#fn-spectenantwithnamespace","title":"fn spec.tenant.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v6.0.0/minio/","title":"minio","text":"<ul> <li>v2</li> </ul>"},{"location":"v6.0.0/minio/v2/","title":"minio.v2","text":"<ul> <li>tenant</li> </ul>"},{"location":"v6.0.0/minio/v2/tenant/","title":"minio.v2.tenant","text":""},{"location":"v6.0.0/minio/v2/tenant/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj scheduler</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAdditionalVolumeMounts(additionalVolumeMounts)</code></li> <li><code>fn withAdditionalVolumeMountsMixin(additionalVolumeMounts)</code></li> <li><code>fn withAdditionalVolumes(additionalVolumes)</code></li> <li><code>fn withAdditionalVolumesMixin(additionalVolumes)</code></li> <li><code>fn withBuckets(buckets)</code></li> <li><code>fn withBucketsMixin(buckets)</code></li> <li><code>fn withEnv(env)</code></li> <li><code>fn withEnvMixin(env)</code></li> <li><code>fn withExternalCaCertSecret(externalCaCertSecret)</code></li> <li><code>fn withExternalCaCertSecretMixin(externalCaCertSecret)</code></li> <li><code>fn withExternalCertSecret(externalCertSecret)</code></li> <li><code>fn withExternalCertSecretMixin(externalCertSecret)</code></li> <li><code>fn withExternalClientCertSecrets(externalClientCertSecrets)</code></li> <li><code>fn withExternalClientCertSecretsMixin(externalClientCertSecrets)</code></li> <li><code>fn withImage(image)</code></li> <li><code>fn withImagePullPolicy(imagePullPolicy)</code></li> <li><code>fn withInitContainers(initContainers)</code></li> <li><code>fn withInitContainersMixin(initContainers)</code></li> <li><code>fn withMountPath(mountPath)</code></li> <li><code>fn withPodManagementPolicy(podManagementPolicy)</code></li> <li><code>fn withPools(pools)</code></li> <li><code>fn withPoolsMixin(pools)</code></li> <li><code>fn withPriorityClassName(priorityClassName)</code></li> <li><code>fn withPrometheusOperator(prometheusOperator)</code></li> <li><code>fn withRequestAutoCert(requestAutoCert)</code></li> <li><code>fn withServiceAccountName(serviceAccountName)</code></li> <li><code>fn withSubPath(subPath)</code></li> <li><code>fn withUsers(users)</code></li> <li><code>fn withUsersMixin(users)</code></li> <li><code>obj spec.additionalVolumeMounts</code><ul> <li><code>fn withMountPath(mountPath)</code></li> <li><code>fn withMountPropagation(mountPropagation)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withRecursiveReadOnly(recursiveReadOnly)</code></li> <li><code>fn withSubPath(subPath)</code></li> <li><code>fn withSubPathExpr(subPathExpr)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes</code><ul> <li><code>fn withName(name)</code></li> <li><code>obj spec.additionalVolumes.awsElasticBlockStore</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withPartition(partition)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeID(volumeID)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.azureDisk</code><ul> <li><code>fn withCachingMode(cachingMode)</code></li> <li><code>fn withDiskName(diskName)</code></li> <li><code>fn withDiskURI(diskURI)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.azureFile</code><ul> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSecretName(secretName)</code></li> <li><code>fn withShareName(shareName)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.cephfs</code><ul> <li><code>fn withMonitors(monitors)</code></li> <li><code>fn withMonitorsMixin(monitors)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSecretFile(secretFile)</code></li> <li><code>fn withUser(user)</code></li> <li><code>obj spec.additionalVolumes.cephfs.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.cinder</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeID(volumeID)</code></li> <li><code>obj spec.additionalVolumes.cinder.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.configMap</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>obj spec.additionalVolumes.configMap.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.csi</code><ul> <li><code>fn withDriver(driver)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeAttributes(volumeAttributes)</code></li> <li><code>fn withVolumeAttributesMixin(volumeAttributes)</code></li> <li><code>obj spec.additionalVolumes.csi.nodePublishSecretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.downwardAPI</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>obj spec.additionalVolumes.downwardAPI.items</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> <li><code>obj spec.additionalVolumes.downwardAPI.items.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.downwardAPI.items.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.emptyDir</code><ul> <li><code>fn withMedium(medium)</code></li> <li><code>fn withSizeLimit(sizeLimit)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.ephemeral</code><ul> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate</code><ul> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec</code><ul> <li><code>fn withAccessModes(accessModes)</code></li> <li><code>fn withAccessModesMixin(accessModes)</code></li> <li><code>fn withStorageClassName(storageClassName)</code></li> <li><code>fn withVolumeAttributesClassName(volumeAttributesClassName)</code></li> <li><code>fn withVolumeMode(volumeMode)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSource</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.resources</code><ul> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.fc</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withLun(lun)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withTargetWWNs(targetWWNs)</code></li> <li><code>fn withTargetWWNsMixin(targetWWNs)</code></li> <li><code>fn withWwids(wwids)</code></li> <li><code>fn withWwidsMixin(wwids)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.flexVolume</code><ul> <li><code>fn withDriver(driver)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withOptions(options)</code></li> <li><code>fn withOptionsMixin(options)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>obj spec.additionalVolumes.flexVolume.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.flocker</code><ul> <li><code>fn withDatasetName(datasetName)</code></li> <li><code>fn withDatasetUUID(datasetUUID)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.gcePersistentDisk</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withPartition(partition)</code></li> <li><code>fn withPdName(pdName)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.gitRepo</code><ul> <li><code>fn withDirectory(directory)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRevision(revision)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.glusterfs</code><ul> <li><code>fn withEndpoints(endpoints)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.hostPath</code><ul> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.iscsi</code><ul> <li><code>fn withChapAuthDiscovery(chapAuthDiscovery)</code></li> <li><code>fn withChapAuthSession(chapAuthSession)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withInitiatorName(initiatorName)</code></li> <li><code>fn withIqn(iqn)</code></li> <li><code>fn withIscsiInterface(iscsiInterface)</code></li> <li><code>fn withLun(lun)</code></li> <li><code>fn withPortals(portals)</code></li> <li><code>fn withPortalsMixin(portals)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withTargetPortal(targetPortal)</code></li> <li><code>obj spec.additionalVolumes.iscsi.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.nfs</code><ul> <li><code>fn withPath(path)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withServer(server)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.persistentVolumeClaim</code><ul> <li><code>fn withClaimName(claimName)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.photonPersistentDisk</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withPdID(pdID)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.portworxVolume</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeID(volumeID)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.projected</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withSources(sources)</code></li> <li><code>fn withSourcesMixin(sources)</code></li> <li><code>obj spec.additionalVolumes.projected.sources</code><ul> <li><code>obj spec.additionalVolumes.projected.sources.clusterTrustBundle</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withSignerName(signerName)</code></li> <li><code>obj spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.projected.sources.configMap</code><ul> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>obj spec.additionalVolumes.projected.sources.configMap.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.projected.sources.downwardAPI</code><ul> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>obj spec.additionalVolumes.projected.sources.downwardAPI.items</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> <li><code>obj spec.additionalVolumes.projected.sources.downwardAPI.items.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.projected.sources.downwardAPI.items.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.projected.sources.secret</code><ul> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>obj spec.additionalVolumes.projected.sources.secret.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.projected.sources.serviceAccountToken</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withExpirationSeconds(expirationSeconds)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.quobyte</code><ul> <li><code>fn withGroup(group)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withRegistry(registry)</code></li> <li><code>fn withTenant(tenant)</code></li> <li><code>fn withUser(user)</code></li> <li><code>fn withVolume(volume)</code></li> </ul> </li> <li><code>obj spec.additionalVolumes.rbd</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withImage(image)</code></li> <li><code>fn withKeyring(keyring)</code></li> <li><code>fn withMonitors(monitors)</code></li> <li><code>fn withMonitorsMixin(monitors)</code></li> <li><code>fn withPool(pool)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withUser(user)</code></li> <li><code>obj spec.additionalVolumes.rbd.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.scaleIO</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withGateway(gateway)</code></li> <li><code>fn withProtectionDomain(protectionDomain)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSslEnabled(sslEnabled)</code></li> <li><code>fn withStorageMode(storageMode)</code></li> <li><code>fn withStoragePool(storagePool)</code></li> <li><code>fn withSystem(system)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>obj spec.additionalVolumes.scaleIO.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.secret</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>fn withSecretName(secretName)</code></li> <li><code>obj spec.additionalVolumes.secret.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.storageos</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>fn withVolumeNamespace(volumeNamespace)</code></li> <li><code>obj spec.additionalVolumes.storageos.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.additionalVolumes.vsphereVolume</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withStoragePolicyID(storagePolicyID)</code></li> <li><code>fn withStoragePolicyName(storagePolicyName)</code></li> <li><code>fn withVolumePath(volumePath)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.buckets</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withObjectLock(objectLock)</code></li> <li><code>fn withRegion(region)</code></li> </ul> </li> <li><code>obj spec.certConfig</code><ul> <li><code>fn withCommonName(commonName)</code></li> <li><code>fn withDnsNames(dnsNames)</code></li> <li><code>fn withDnsNamesMixin(dnsNames)</code></li> <li><code>fn withOrganizationName(organizationName)</code></li> <li><code>fn withOrganizationNameMixin(organizationName)</code></li> </ul> </li> <li><code>obj spec.configuration</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.env</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj spec.env.valueFrom</code><ul> <li><code>obj spec.env.valueFrom.configMapKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> <li><code>obj spec.env.valueFrom.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.env.valueFrom.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> <li><code>obj spec.env.valueFrom.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.exposeServices</code><ul> <li><code>fn withConsole(console)</code></li> <li><code>fn withMinio(minio)</code></li> </ul> </li> <li><code>obj spec.externalCaCertSecret</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.externalCertSecret</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.externalClientCertSecret</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.externalClientCertSecrets</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.features</code><ul> <li><code>fn withBucketDNS(bucketDNS)</code></li> <li><code>fn withEnableSFTP(enableSFTP)</code></li> <li><code>obj spec.features.domains</code><ul> <li><code>fn withConsole(console)</code></li> <li><code>fn withMinio(minio)</code></li> <li><code>fn withMinioMixin(minio)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.imagePullSecret</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.initContainers</code><ul> <li><code>fn withArgs(args)</code></li> <li><code>fn withArgsMixin(args)</code></li> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> <li><code>fn withEnv(env)</code></li> <li><code>fn withEnvFrom(envFrom)</code></li> <li><code>fn withEnvFromMixin(envFrom)</code></li> <li><code>fn withEnvMixin(env)</code></li> <li><code>fn withImage(image)</code></li> <li><code>fn withImagePullPolicy(imagePullPolicy)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withResizePolicy(resizePolicy)</code></li> <li><code>fn withResizePolicyMixin(resizePolicy)</code></li> <li><code>fn withRestartPolicy(restartPolicy)</code></li> <li><code>fn withStdin(stdin)</code></li> <li><code>fn withStdinOnce(stdinOnce)</code></li> <li><code>fn withTerminationMessagePath(terminationMessagePath)</code></li> <li><code>fn withTerminationMessagePolicy(terminationMessagePolicy)</code></li> <li><code>fn withTty(tty)</code></li> <li><code>fn withVolumeDevices(volumeDevices)</code></li> <li><code>fn withVolumeDevicesMixin(volumeDevices)</code></li> <li><code>fn withVolumeMounts(volumeMounts)</code></li> <li><code>fn withVolumeMountsMixin(volumeMounts)</code></li> <li><code>fn withWorkingDir(workingDir)</code></li> <li><code>obj spec.initContainers.env</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj spec.initContainers.env.valueFrom</code><ul> <li><code>obj spec.initContainers.env.valueFrom.configMapKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> <li><code>obj spec.initContainers.env.valueFrom.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.initContainers.env.valueFrom.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> <li><code>obj spec.initContainers.env.valueFrom.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.envFrom</code><ul> <li><code>fn withPrefix(prefix)</code></li> <li><code>obj spec.initContainers.envFrom.configMapRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> <li><code>obj spec.initContainers.envFrom.secretRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.lifecycle</code><ul> <li><code>obj spec.initContainers.lifecycle.postStart</code><ul> <li><code>obj spec.initContainers.lifecycle.postStart.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.initContainers.lifecycle.postStart.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.initContainers.lifecycle.postStart.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.lifecycle.postStart.sleep</code><ul> <li><code>fn withSeconds(seconds)</code></li> </ul> </li> <li><code>obj spec.initContainers.lifecycle.postStart.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.lifecycle.preStop</code><ul> <li><code>obj spec.initContainers.lifecycle.preStop.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.initContainers.lifecycle.preStop.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.initContainers.lifecycle.preStop.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.lifecycle.preStop.sleep</code><ul> <li><code>fn withSeconds(seconds)</code></li> </ul> </li> <li><code>obj spec.initContainers.lifecycle.preStop.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.livenessProbe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.initContainers.livenessProbe.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.initContainers.livenessProbe.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.initContainers.livenessProbe.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.initContainers.livenessProbe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.livenessProbe.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.ports</code><ul> <li><code>fn withContainerPort(containerPort)</code></li> <li><code>fn withHostIP(hostIP)</code></li> <li><code>fn withHostPort(hostPort)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.initContainers.readinessProbe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.initContainers.readinessProbe.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.initContainers.readinessProbe.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.initContainers.readinessProbe.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.initContainers.readinessProbe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.readinessProbe.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.resizePolicy</code><ul> <li><code>fn withResourceName(resourceName)</code></li> <li><code>fn withRestartPolicy(restartPolicy)</code></li> </ul> </li> <li><code>obj spec.initContainers.resources</code><ul> <li><code>fn withClaims(claims)</code></li> <li><code>fn withClaimsMixin(claims)</code></li> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> <li><code>obj spec.initContainers.resources.claims</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.securityContext</code><ul> <li><code>fn withAllowPrivilegeEscalation(allowPrivilegeEscalation)</code></li> <li><code>fn withPrivileged(privileged)</code></li> <li><code>fn withProcMount(procMount)</code></li> <li><code>fn withReadOnlyRootFilesystem(readOnlyRootFilesystem)</code></li> <li><code>fn withRunAsGroup(runAsGroup)</code></li> <li><code>fn withRunAsNonRoot(runAsNonRoot)</code></li> <li><code>fn withRunAsUser(runAsUser)</code></li> <li><code>obj spec.initContainers.securityContext.appArmorProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.initContainers.securityContext.capabilities</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withDrop(drop)</code></li> <li><code>fn withDropMixin(drop)</code></li> </ul> </li> <li><code>obj spec.initContainers.securityContext.seLinuxOptions</code><ul> <li><code>fn withLevel(level)</code></li> <li><code>fn withRole(role)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUser(user)</code></li> </ul> </li> <li><code>obj spec.initContainers.securityContext.seccompProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.initContainers.securityContext.windowsOptions</code><ul> <li><code>fn withGmsaCredentialSpec(gmsaCredentialSpec)</code></li> <li><code>fn withGmsaCredentialSpecName(gmsaCredentialSpecName)</code></li> <li><code>fn withHostProcess(hostProcess)</code></li> <li><code>fn withRunAsUserName(runAsUserName)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.startupProbe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.initContainers.startupProbe.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.initContainers.startupProbe.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.initContainers.startupProbe.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.initContainers.startupProbe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.startupProbe.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.initContainers.volumeDevices</code><ul> <li><code>fn withDevicePath(devicePath)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.initContainers.volumeMounts</code><ul> <li><code>fn withMountPath(mountPath)</code></li> <li><code>fn withMountPropagation(mountPropagation)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withRecursiveReadOnly(recursiveReadOnly)</code></li> <li><code>fn withSubPath(subPath)</code></li> <li><code>fn withSubPathExpr(subPathExpr)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withEnv(env)</code></li> <li><code>fn withEnvMixin(env)</code></li> <li><code>fn withGcpCredentialSecretName(gcpCredentialSecretName)</code></li> <li><code>fn withGcpWorkloadIdentityPool(gcpWorkloadIdentityPool)</code></li> <li><code>fn withImage(image)</code></li> <li><code>fn withImagePullPolicy(imagePullPolicy)</code></li> <li><code>fn withKeyName(keyName)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withNodeSelector(nodeSelector)</code></li> <li><code>fn withNodeSelectorMixin(nodeSelector)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>fn withServiceAccountName(serviceAccountName)</code></li> <li><code>fn withTolerations(tolerations)</code></li> <li><code>fn withTolerationsMixin(tolerations)</code></li> <li><code>fn withTopologySpreadConstraints(topologySpreadConstraints)</code></li> <li><code>fn withTopologySpreadConstraintsMixin(topologySpreadConstraints)</code></li> <li><code>obj spec.kes.affinity</code><ul> <li><code>obj spec.kes.affinity.nodeAffinity</code><ul> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchFields(matchFields)</code></li> <li><code>fn withMatchFieldsMixin(matchFields)</code></li> <li><code>obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> <li><code>obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withNodeSelectorTerms(nodeSelectorTerms)</code></li> <li><code>fn withNodeSelectorTermsMixin(nodeSelectorTerms)</code></li> <li><code>obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchFields(matchFields)</code></li> <li><code>fn withMatchFieldsMixin(matchFields)</code></li> <li><code>obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> <li><code>obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAffinity</code><ul> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAntiAffinity</code><ul> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.kes.clientCertSecret</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.kes.containerSecurityContext</code><ul> <li><code>fn withAllowPrivilegeEscalation(allowPrivilegeEscalation)</code></li> <li><code>fn withPrivileged(privileged)</code></li> <li><code>fn withProcMount(procMount)</code></li> <li><code>fn withReadOnlyRootFilesystem(readOnlyRootFilesystem)</code></li> <li><code>fn withRunAsGroup(runAsGroup)</code></li> <li><code>fn withRunAsNonRoot(runAsNonRoot)</code></li> <li><code>fn withRunAsUser(runAsUser)</code></li> <li><code>obj spec.kes.containerSecurityContext.appArmorProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.kes.containerSecurityContext.capabilities</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withDrop(drop)</code></li> <li><code>fn withDropMixin(drop)</code></li> </ul> </li> <li><code>obj spec.kes.containerSecurityContext.seLinuxOptions</code><ul> <li><code>fn withLevel(level)</code></li> <li><code>fn withRole(role)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUser(user)</code></li> </ul> </li> <li><code>obj spec.kes.containerSecurityContext.seccompProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.kes.containerSecurityContext.windowsOptions</code><ul> <li><code>fn withGmsaCredentialSpec(gmsaCredentialSpec)</code></li> <li><code>fn withGmsaCredentialSpecName(gmsaCredentialSpecName)</code></li> <li><code>fn withHostProcess(hostProcess)</code></li> <li><code>fn withRunAsUserName(runAsUserName)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes.env</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj spec.kes.env.valueFrom</code><ul> <li><code>obj spec.kes.env.valueFrom.configMapKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> <li><code>obj spec.kes.env.valueFrom.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.kes.env.valueFrom.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> <li><code>obj spec.kes.env.valueFrom.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.kes.externalCertSecret</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.kes.kesSecret</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.kes.resources</code><ul> <li><code>fn withClaims(claims)</code></li> <li><code>fn withClaimsMixin(claims)</code></li> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> <li><code>obj spec.kes.resources.claims</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes.securityContext</code><ul> <li><code>fn withFsGroup(fsGroup)</code></li> <li><code>fn withFsGroupChangePolicy(fsGroupChangePolicy)</code></li> <li><code>fn withRunAsGroup(runAsGroup)</code></li> <li><code>fn withRunAsNonRoot(runAsNonRoot)</code></li> <li><code>fn withRunAsUser(runAsUser)</code></li> <li><code>fn withSupplementalGroups(supplementalGroups)</code></li> <li><code>fn withSupplementalGroupsMixin(supplementalGroups)</code></li> <li><code>fn withSysctls(sysctls)</code></li> <li><code>fn withSysctlsMixin(sysctls)</code></li> <li><code>obj spec.kes.securityContext.appArmorProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.kes.securityContext.seLinuxOptions</code><ul> <li><code>fn withLevel(level)</code></li> <li><code>fn withRole(role)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUser(user)</code></li> </ul> </li> <li><code>obj spec.kes.securityContext.seccompProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.kes.securityContext.sysctls</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.kes.securityContext.windowsOptions</code><ul> <li><code>fn withGmsaCredentialSpec(gmsaCredentialSpec)</code></li> <li><code>fn withGmsaCredentialSpecName(gmsaCredentialSpecName)</code></li> <li><code>fn withHostProcess(hostProcess)</code></li> <li><code>fn withRunAsUserName(runAsUserName)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.kes.tolerations</code><ul> <li><code>fn withEffect(effect)</code></li> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withTolerationSeconds(tolerationSeconds)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.kes.topologySpreadConstraints</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMaxSkew(maxSkew)</code></li> <li><code>fn withMinDomains(minDomains)</code></li> <li><code>fn withNodeAffinityPolicy(nodeAffinityPolicy)</code></li> <li><code>fn withNodeTaintsPolicy(nodeTaintsPolicy)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>fn withWhenUnsatisfiable(whenUnsatisfiable)</code></li> <li><code>obj spec.kes.topologySpreadConstraints.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.kes.topologySpreadConstraints.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.lifecycle</code><ul> <li><code>obj spec.lifecycle.postStart</code><ul> <li><code>obj spec.lifecycle.postStart.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.lifecycle.postStart.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.lifecycle.postStart.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.lifecycle.postStart.sleep</code><ul> <li><code>fn withSeconds(seconds)</code></li> </ul> </li> <li><code>obj spec.lifecycle.postStart.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.lifecycle.preStop</code><ul> <li><code>obj spec.lifecycle.preStop.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.lifecycle.preStop.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.lifecycle.preStop.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.lifecycle.preStop.sleep</code><ul> <li><code>fn withSeconds(seconds)</code></li> </ul> </li> <li><code>obj spec.lifecycle.preStop.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.liveness</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.liveness.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.liveness.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.liveness.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.liveness.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.liveness.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.logging</code><ul> <li><code>fn withAnonymous(anonymous)</code></li> <li><code>fn withJson(json)</code></li> <li><code>fn withQuiet(quiet)</code></li> </ul> </li> <li><code>obj spec.pools</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNodeSelector(nodeSelector)</code></li> <li><code>fn withNodeSelectorMixin(nodeSelector)</code></li> <li><code>fn withRuntimeClassName(runtimeClassName)</code></li> <li><code>fn withServers(servers)</code></li> <li><code>fn withTolerations(tolerations)</code></li> <li><code>fn withTolerationsMixin(tolerations)</code></li> <li><code>fn withTopologySpreadConstraints(topologySpreadConstraints)</code></li> <li><code>fn withTopologySpreadConstraintsMixin(topologySpreadConstraints)</code></li> <li><code>fn withVolumesPerServer(volumesPerServer)</code></li> <li><code>obj spec.pools.affinity</code><ul> <li><code>obj spec.pools.affinity.nodeAffinity</code><ul> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchFields(matchFields)</code></li> <li><code>fn withMatchFieldsMixin(matchFields)</code></li> <li><code>obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> <li><code>obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withNodeSelectorTerms(nodeSelectorTerms)</code></li> <li><code>fn withNodeSelectorTermsMixin(nodeSelectorTerms)</code></li> <li><code>obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchFields(matchFields)</code></li> <li><code>fn withMatchFieldsMixin(matchFields)</code></li> <li><code>obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> <li><code>obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAffinity</code><ul> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAntiAffinity</code><ul> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>fn withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeys(mismatchLabelKeys)</code></li> <li><code>fn withMismatchLabelKeysMixin(mismatchLabelKeys)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.pools.containerSecurityContext</code><ul> <li><code>fn withAllowPrivilegeEscalation(allowPrivilegeEscalation)</code></li> <li><code>fn withPrivileged(privileged)</code></li> <li><code>fn withProcMount(procMount)</code></li> <li><code>fn withReadOnlyRootFilesystem(readOnlyRootFilesystem)</code></li> <li><code>fn withRunAsGroup(runAsGroup)</code></li> <li><code>fn withRunAsNonRoot(runAsNonRoot)</code></li> <li><code>fn withRunAsUser(runAsUser)</code></li> <li><code>obj spec.pools.containerSecurityContext.appArmorProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.pools.containerSecurityContext.capabilities</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withDrop(drop)</code></li> <li><code>fn withDropMixin(drop)</code></li> </ul> </li> <li><code>obj spec.pools.containerSecurityContext.seLinuxOptions</code><ul> <li><code>fn withLevel(level)</code></li> <li><code>fn withRole(role)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUser(user)</code></li> </ul> </li> <li><code>obj spec.pools.containerSecurityContext.seccompProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.pools.containerSecurityContext.windowsOptions</code><ul> <li><code>fn withGmsaCredentialSpec(gmsaCredentialSpec)</code></li> <li><code>fn withGmsaCredentialSpecName(gmsaCredentialSpecName)</code></li> <li><code>fn withHostProcess(hostProcess)</code></li> <li><code>fn withRunAsUserName(runAsUserName)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.pools.resources</code><ul> <li><code>fn withClaims(claims)</code></li> <li><code>fn withClaimsMixin(claims)</code></li> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> <li><code>obj spec.pools.resources.claims</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.pools.securityContext</code><ul> <li><code>fn withFsGroup(fsGroup)</code></li> <li><code>fn withFsGroupChangePolicy(fsGroupChangePolicy)</code></li> <li><code>fn withRunAsGroup(runAsGroup)</code></li> <li><code>fn withRunAsNonRoot(runAsNonRoot)</code></li> <li><code>fn withRunAsUser(runAsUser)</code></li> <li><code>fn withSupplementalGroups(supplementalGroups)</code></li> <li><code>fn withSupplementalGroupsMixin(supplementalGroups)</code></li> <li><code>fn withSysctls(sysctls)</code></li> <li><code>fn withSysctlsMixin(sysctls)</code></li> <li><code>obj spec.pools.securityContext.appArmorProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.pools.securityContext.seLinuxOptions</code><ul> <li><code>fn withLevel(level)</code></li> <li><code>fn withRole(role)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUser(user)</code></li> </ul> </li> <li><code>obj spec.pools.securityContext.seccompProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.pools.securityContext.sysctls</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.pools.securityContext.windowsOptions</code><ul> <li><code>fn withGmsaCredentialSpec(gmsaCredentialSpec)</code></li> <li><code>fn withGmsaCredentialSpecName(gmsaCredentialSpecName)</code></li> <li><code>fn withHostProcess(hostProcess)</code></li> <li><code>fn withRunAsUserName(runAsUserName)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.pools.tolerations</code><ul> <li><code>fn withEffect(effect)</code></li> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withTolerationSeconds(tolerationSeconds)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.pools.topologySpreadConstraints</code><ul> <li><code>fn withMatchLabelKeys(matchLabelKeys)</code></li> <li><code>fn withMatchLabelKeysMixin(matchLabelKeys)</code></li> <li><code>fn withMaxSkew(maxSkew)</code></li> <li><code>fn withMinDomains(minDomains)</code></li> <li><code>fn withNodeAffinityPolicy(nodeAffinityPolicy)</code></li> <li><code>fn withNodeTaintsPolicy(nodeTaintsPolicy)</code></li> <li><code>fn withTopologyKey(topologyKey)</code></li> <li><code>fn withWhenUnsatisfiable(whenUnsatisfiable)</code></li> <li><code>obj spec.pools.topologySpreadConstraints.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.topologySpreadConstraints.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.pools.volumeClaimTemplate</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.pools.volumeClaimTemplate.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.pools.volumeClaimTemplate.spec</code><ul> <li><code>fn withAccessModes(accessModes)</code></li> <li><code>fn withAccessModesMixin(accessModes)</code></li> <li><code>fn withStorageClassName(storageClassName)</code></li> <li><code>fn withVolumeAttributesClassName(volumeAttributesClassName)</code></li> <li><code>fn withVolumeMode(volumeMode)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>obj spec.pools.volumeClaimTemplate.spec.dataSource</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.pools.volumeClaimTemplate.spec.dataSourceRef</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.pools.volumeClaimTemplate.spec.resources</code><ul> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> </ul> </li> <li><code>obj spec.pools.volumeClaimTemplate.spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.pools.volumeClaimTemplate.spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.readiness</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.readiness.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.readiness.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.readiness.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.readiness.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.readiness.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.serviceMetadata</code><ul> <li><code>fn withConsoleServiceAnnotations(consoleServiceAnnotations)</code></li> <li><code>fn withConsoleServiceAnnotationsMixin(consoleServiceAnnotations)</code></li> <li><code>fn withConsoleServiceLabels(consoleServiceLabels)</code></li> <li><code>fn withConsoleServiceLabelsMixin(consoleServiceLabels)</code></li> <li><code>fn withMinioServiceAnnotations(minioServiceAnnotations)</code></li> <li><code>fn withMinioServiceAnnotationsMixin(minioServiceAnnotations)</code></li> <li><code>fn withMinioServiceLabels(minioServiceLabels)</code></li> <li><code>fn withMinioServiceLabelsMixin(minioServiceLabels)</code></li> </ul> </li> <li><code>obj spec.sideCars</code><ul> <li><code>fn withContainers(containers)</code></li> <li><code>fn withContainersMixin(containers)</code></li> <li><code>fn withVolumeClaimTemplates(volumeClaimTemplates)</code></li> <li><code>fn withVolumeClaimTemplatesMixin(volumeClaimTemplates)</code></li> <li><code>fn withVolumes(volumes)</code></li> <li><code>fn withVolumesMixin(volumes)</code></li> <li><code>obj spec.sideCars.containers</code><ul> <li><code>fn withArgs(args)</code></li> <li><code>fn withArgsMixin(args)</code></li> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> <li><code>fn withEnv(env)</code></li> <li><code>fn withEnvFrom(envFrom)</code></li> <li><code>fn withEnvFromMixin(envFrom)</code></li> <li><code>fn withEnvMixin(env)</code></li> <li><code>fn withImage(image)</code></li> <li><code>fn withImagePullPolicy(imagePullPolicy)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withResizePolicy(resizePolicy)</code></li> <li><code>fn withResizePolicyMixin(resizePolicy)</code></li> <li><code>fn withRestartPolicy(restartPolicy)</code></li> <li><code>fn withStdin(stdin)</code></li> <li><code>fn withStdinOnce(stdinOnce)</code></li> <li><code>fn withTerminationMessagePath(terminationMessagePath)</code></li> <li><code>fn withTerminationMessagePolicy(terminationMessagePolicy)</code></li> <li><code>fn withTty(tty)</code></li> <li><code>fn withVolumeDevices(volumeDevices)</code></li> <li><code>fn withVolumeDevicesMixin(volumeDevices)</code></li> <li><code>fn withVolumeMounts(volumeMounts)</code></li> <li><code>fn withVolumeMountsMixin(volumeMounts)</code></li> <li><code>fn withWorkingDir(workingDir)</code></li> <li><code>obj spec.sideCars.containers.env</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj spec.sideCars.containers.env.valueFrom</code><ul> <li><code>obj spec.sideCars.containers.env.valueFrom.configMapKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.env.valueFrom.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.env.valueFrom.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.env.valueFrom.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.envFrom</code><ul> <li><code>fn withPrefix(prefix)</code></li> <li><code>obj spec.sideCars.containers.envFrom.configMapRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.envFrom.secretRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle</code><ul> <li><code>obj spec.sideCars.containers.lifecycle.postStart</code><ul> <li><code>obj spec.sideCars.containers.lifecycle.postStart.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle.postStart.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.sideCars.containers.lifecycle.postStart.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle.postStart.sleep</code><ul> <li><code>fn withSeconds(seconds)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle.postStart.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle.preStop</code><ul> <li><code>obj spec.sideCars.containers.lifecycle.preStop.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle.preStop.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.sideCars.containers.lifecycle.preStop.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle.preStop.sleep</code><ul> <li><code>fn withSeconds(seconds)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.lifecycle.preStop.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.livenessProbe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.sideCars.containers.livenessProbe.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.livenessProbe.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.livenessProbe.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.sideCars.containers.livenessProbe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.livenessProbe.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.ports</code><ul> <li><code>fn withContainerPort(containerPort)</code></li> <li><code>fn withHostIP(hostIP)</code></li> <li><code>fn withHostPort(hostPort)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.readinessProbe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.sideCars.containers.readinessProbe.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.readinessProbe.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.readinessProbe.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.sideCars.containers.readinessProbe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.readinessProbe.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.resizePolicy</code><ul> <li><code>fn withResourceName(resourceName)</code></li> <li><code>fn withRestartPolicy(restartPolicy)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.resources</code><ul> <li><code>fn withClaims(claims)</code></li> <li><code>fn withClaimsMixin(claims)</code></li> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> <li><code>obj spec.sideCars.containers.resources.claims</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.securityContext</code><ul> <li><code>fn withAllowPrivilegeEscalation(allowPrivilegeEscalation)</code></li> <li><code>fn withPrivileged(privileged)</code></li> <li><code>fn withProcMount(procMount)</code></li> <li><code>fn withReadOnlyRootFilesystem(readOnlyRootFilesystem)</code></li> <li><code>fn withRunAsGroup(runAsGroup)</code></li> <li><code>fn withRunAsNonRoot(runAsNonRoot)</code></li> <li><code>fn withRunAsUser(runAsUser)</code></li> <li><code>obj spec.sideCars.containers.securityContext.appArmorProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.securityContext.capabilities</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withDrop(drop)</code></li> <li><code>fn withDropMixin(drop)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.securityContext.seLinuxOptions</code><ul> <li><code>fn withLevel(level)</code></li> <li><code>fn withRole(role)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUser(user)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.securityContext.seccompProfile</code><ul> <li><code>fn withLocalhostProfile(localhostProfile)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.securityContext.windowsOptions</code><ul> <li><code>fn withGmsaCredentialSpec(gmsaCredentialSpec)</code></li> <li><code>fn withGmsaCredentialSpecName(gmsaCredentialSpecName)</code></li> <li><code>fn withHostProcess(hostProcess)</code></li> <li><code>fn withRunAsUserName(runAsUserName)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.startupProbe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.sideCars.containers.startupProbe.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.startupProbe.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.startupProbe.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.sideCars.containers.startupProbe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.startupProbe.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.containers.volumeDevices</code><ul> <li><code>fn withDevicePath(devicePath)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.sideCars.containers.volumeMounts</code><ul> <li><code>fn withMountPath(mountPath)</code></li> <li><code>fn withMountPropagation(mountPropagation)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withRecursiveReadOnly(recursiveReadOnly)</code></li> <li><code>fn withSubPath(subPath)</code></li> <li><code>fn withSubPathExpr(subPathExpr)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.resources</code><ul> <li><code>fn withClaims(claims)</code></li> <li><code>fn withClaimsMixin(claims)</code></li> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> <li><code>obj spec.sideCars.resources.claims</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumeClaimTemplates</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.sideCars.volumeClaimTemplates.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumeClaimTemplates.spec</code><ul> <li><code>fn withAccessModes(accessModes)</code></li> <li><code>fn withAccessModesMixin(accessModes)</code></li> <li><code>fn withStorageClassName(storageClassName)</code></li> <li><code>fn withVolumeAttributesClassName(volumeAttributesClassName)</code></li> <li><code>fn withVolumeMode(volumeMode)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>obj spec.sideCars.volumeClaimTemplates.spec.dataSource</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumeClaimTemplates.spec.dataSourceRef</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumeClaimTemplates.spec.resources</code><ul> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumeClaimTemplates.spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.sideCars.volumeClaimTemplates.spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes</code><ul> <li><code>fn withName(name)</code></li> <li><code>obj spec.sideCars.volumes.awsElasticBlockStore</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withPartition(partition)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeID(volumeID)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.azureDisk</code><ul> <li><code>fn withCachingMode(cachingMode)</code></li> <li><code>fn withDiskName(diskName)</code></li> <li><code>fn withDiskURI(diskURI)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.azureFile</code><ul> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSecretName(secretName)</code></li> <li><code>fn withShareName(shareName)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.cephfs</code><ul> <li><code>fn withMonitors(monitors)</code></li> <li><code>fn withMonitorsMixin(monitors)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSecretFile(secretFile)</code></li> <li><code>fn withUser(user)</code></li> <li><code>obj spec.sideCars.volumes.cephfs.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.cinder</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeID(volumeID)</code></li> <li><code>obj spec.sideCars.volumes.cinder.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.configMap</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>obj spec.sideCars.volumes.configMap.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.csi</code><ul> <li><code>fn withDriver(driver)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeAttributes(volumeAttributes)</code></li> <li><code>fn withVolumeAttributesMixin(volumeAttributes)</code></li> <li><code>obj spec.sideCars.volumes.csi.nodePublishSecretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.downwardAPI</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>obj spec.sideCars.volumes.downwardAPI.items</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> <li><code>obj spec.sideCars.volumes.downwardAPI.items.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.downwardAPI.items.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.emptyDir</code><ul> <li><code>fn withMedium(medium)</code></li> <li><code>fn withSizeLimit(sizeLimit)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.ephemeral</code><ul> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate</code><ul> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec</code><ul> <li><code>fn withAccessModes(accessModes)</code></li> <li><code>fn withAccessModesMixin(accessModes)</code></li> <li><code>fn withStorageClassName(storageClassName)</code></li> <li><code>fn withVolumeAttributesClassName(volumeAttributesClassName)</code></li> <li><code>fn withVolumeMode(volumeMode)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSource</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef</code><ul> <li><code>fn withApiGroup(apiGroup)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.resources</code><ul> <li><code>fn withLimits(limits)</code></li> <li><code>fn withLimitsMixin(limits)</code></li> <li><code>fn withRequests(requests)</code></li> <li><code>fn withRequestsMixin(requests)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.fc</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withLun(lun)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withTargetWWNs(targetWWNs)</code></li> <li><code>fn withTargetWWNsMixin(targetWWNs)</code></li> <li><code>fn withWwids(wwids)</code></li> <li><code>fn withWwidsMixin(wwids)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.flexVolume</code><ul> <li><code>fn withDriver(driver)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withOptions(options)</code></li> <li><code>fn withOptionsMixin(options)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>obj spec.sideCars.volumes.flexVolume.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.flocker</code><ul> <li><code>fn withDatasetName(datasetName)</code></li> <li><code>fn withDatasetUUID(datasetUUID)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.gcePersistentDisk</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withPartition(partition)</code></li> <li><code>fn withPdName(pdName)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.gitRepo</code><ul> <li><code>fn withDirectory(directory)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRevision(revision)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.glusterfs</code><ul> <li><code>fn withEndpoints(endpoints)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.hostPath</code><ul> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.iscsi</code><ul> <li><code>fn withChapAuthDiscovery(chapAuthDiscovery)</code></li> <li><code>fn withChapAuthSession(chapAuthSession)</code></li> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withInitiatorName(initiatorName)</code></li> <li><code>fn withIqn(iqn)</code></li> <li><code>fn withIscsiInterface(iscsiInterface)</code></li> <li><code>fn withLun(lun)</code></li> <li><code>fn withPortals(portals)</code></li> <li><code>fn withPortalsMixin(portals)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withTargetPortal(targetPortal)</code></li> <li><code>obj spec.sideCars.volumes.iscsi.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.nfs</code><ul> <li><code>fn withPath(path)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withServer(server)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.persistentVolumeClaim</code><ul> <li><code>fn withClaimName(claimName)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.photonPersistentDisk</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withPdID(pdID)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.portworxVolume</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeID(volumeID)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.projected</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withSources(sources)</code></li> <li><code>fn withSourcesMixin(sources)</code></li> <li><code>obj spec.sideCars.volumes.projected.sources</code><ul> <li><code>obj spec.sideCars.volumes.projected.sources.clusterTrustBundle</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withSignerName(signerName)</code></li> <li><code>obj spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.projected.sources.configMap</code><ul> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>obj spec.sideCars.volumes.projected.sources.configMap.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.projected.sources.downwardAPI</code><ul> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>obj spec.sideCars.volumes.projected.sources.downwardAPI.items</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> <li><code>obj spec.sideCars.volumes.projected.sources.downwardAPI.items.fieldRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.projected.sources.downwardAPI.items.resourceFieldRef</code><ul> <li><code>fn withContainerName(containerName)</code></li> <li><code>fn withDivisor(divisor)</code></li> <li><code>fn withResource(resource)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.projected.sources.secret</code><ul> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>obj spec.sideCars.volumes.projected.sources.secret.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.projected.sources.serviceAccountToken</code><ul> <li><code>fn withAudience(audience)</code></li> <li><code>fn withExpirationSeconds(expirationSeconds)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.quobyte</code><ul> <li><code>fn withGroup(group)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withRegistry(registry)</code></li> <li><code>fn withTenant(tenant)</code></li> <li><code>fn withUser(user)</code></li> <li><code>fn withVolume(volume)</code></li> </ul> </li> <li><code>obj spec.sideCars.volumes.rbd</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withImage(image)</code></li> <li><code>fn withKeyring(keyring)</code></li> <li><code>fn withMonitors(monitors)</code></li> <li><code>fn withMonitorsMixin(monitors)</code></li> <li><code>fn withPool(pool)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withUser(user)</code></li> <li><code>obj spec.sideCars.volumes.rbd.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.scaleIO</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withGateway(gateway)</code></li> <li><code>fn withProtectionDomain(protectionDomain)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withSslEnabled(sslEnabled)</code></li> <li><code>fn withStorageMode(storageMode)</code></li> <li><code>fn withStoragePool(storagePool)</code></li> <li><code>fn withSystem(system)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>obj spec.sideCars.volumes.scaleIO.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.secret</code><ul> <li><code>fn withDefaultMode(defaultMode)</code></li> <li><code>fn withItems(items)</code></li> <li><code>fn withItemsMixin(items)</code></li> <li><code>fn withOptional(optional)</code></li> <li><code>fn withSecretName(secretName)</code></li> <li><code>obj spec.sideCars.volumes.secret.items</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPath(path)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.storageos</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withReadOnly(readOnly)</code></li> <li><code>fn withVolumeName(volumeName)</code></li> <li><code>fn withVolumeNamespace(volumeNamespace)</code></li> <li><code>obj spec.sideCars.volumes.storageos.secretRef</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.sideCars.volumes.vsphereVolume</code><ul> <li><code>fn withFsType(fsType)</code></li> <li><code>fn withStoragePolicyID(storagePolicyID)</code></li> <li><code>fn withStoragePolicyName(storagePolicyName)</code></li> <li><code>fn withVolumePath(volumePath)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.startup</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.startup.exec</code><ul> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> </ul> </li> <li><code>obj spec.startup.grpc</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withService(service)</code></li> </ul> </li> <li><code>obj spec.startup.httpGet</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.startup.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.startup.tcpSocket</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.users</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"v6.0.0/minio/v2/tenant/#fields","title":"Fields","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Tenant</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-scheduler","title":"obj scheduler","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-schedulerwithname","title":"fn scheduler.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-spec","title":"obj spec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithadditionalvolumemounts","title":"fn spec.withAdditionalVolumeMounts","text":"<pre><code>withAdditionalVolumeMounts(additionalVolumeMounts)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithadditionalvolumemountsmixin","title":"fn spec.withAdditionalVolumeMountsMixin","text":"<pre><code>withAdditionalVolumeMountsMixin(additionalVolumeMounts)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithadditionalvolumes","title":"fn spec.withAdditionalVolumes","text":"<pre><code>withAdditionalVolumes(additionalVolumes)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithadditionalvolumesmixin","title":"fn spec.withAdditionalVolumesMixin","text":"<pre><code>withAdditionalVolumesMixin(additionalVolumes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithbuckets","title":"fn spec.withBuckets","text":"<pre><code>withBuckets(buckets)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithbucketsmixin","title":"fn spec.withBucketsMixin","text":"<pre><code>withBucketsMixin(buckets)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithenv","title":"fn spec.withEnv","text":"<pre><code>withEnv(env)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithenvmixin","title":"fn spec.withEnvMixin","text":"<pre><code>withEnvMixin(env)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithexternalcacertsecret","title":"fn spec.withExternalCaCertSecret","text":"<pre><code>withExternalCaCertSecret(externalCaCertSecret)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithexternalcacertsecretmixin","title":"fn spec.withExternalCaCertSecretMixin","text":"<pre><code>withExternalCaCertSecretMixin(externalCaCertSecret)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithexternalcertsecret","title":"fn spec.withExternalCertSecret","text":"<pre><code>withExternalCertSecret(externalCertSecret)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithexternalcertsecretmixin","title":"fn spec.withExternalCertSecretMixin","text":"<pre><code>withExternalCertSecretMixin(externalCertSecret)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithexternalclientcertsecrets","title":"fn spec.withExternalClientCertSecrets","text":"<pre><code>withExternalClientCertSecrets(externalClientCertSecrets)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithexternalclientcertsecretsmixin","title":"fn spec.withExternalClientCertSecretsMixin","text":"<pre><code>withExternalClientCertSecretsMixin(externalClientCertSecrets)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithimage","title":"fn spec.withImage","text":"<pre><code>withImage(image)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithimagepullpolicy","title":"fn spec.withImagePullPolicy","text":"<pre><code>withImagePullPolicy(imagePullPolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithinitcontainers","title":"fn spec.withInitContainers","text":"<pre><code>withInitContainers(initContainers)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithinitcontainersmixin","title":"fn spec.withInitContainersMixin","text":"<pre><code>withInitContainersMixin(initContainers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithmountpath","title":"fn spec.withMountPath","text":"<pre><code>withMountPath(mountPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithpodmanagementpolicy","title":"fn spec.withPodManagementPolicy","text":"<pre><code>withPodManagementPolicy(podManagementPolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithpools","title":"fn spec.withPools","text":"<pre><code>withPools(pools)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithpoolsmixin","title":"fn spec.withPoolsMixin","text":"<pre><code>withPoolsMixin(pools)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithpriorityclassname","title":"fn spec.withPriorityClassName","text":"<pre><code>withPriorityClassName(priorityClassName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithprometheusoperator","title":"fn spec.withPrometheusOperator","text":"<pre><code>withPrometheusOperator(prometheusOperator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithrequestautocert","title":"fn spec.withRequestAutoCert","text":"<pre><code>withRequestAutoCert(requestAutoCert)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithserviceaccountname","title":"fn spec.withServiceAccountName","text":"<pre><code>withServiceAccountName(serviceAccountName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithsubpath","title":"fn spec.withSubPath","text":"<pre><code>withSubPath(subPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithusers","title":"fn spec.withUsers","text":"<pre><code>withUsers(users)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specwithusersmixin","title":"fn spec.withUsersMixin","text":"<pre><code>withUsersMixin(users)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumemounts","title":"obj spec.additionalVolumeMounts","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumemountswithmountpath","title":"fn spec.additionalVolumeMounts.withMountPath","text":"<pre><code>withMountPath(mountPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumemountswithmountpropagation","title":"fn spec.additionalVolumeMounts.withMountPropagation","text":"<pre><code>withMountPropagation(mountPropagation)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumemountswithname","title":"fn spec.additionalVolumeMounts.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumemountswithreadonly","title":"fn spec.additionalVolumeMounts.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumemountswithrecursivereadonly","title":"fn spec.additionalVolumeMounts.withRecursiveReadOnly","text":"<pre><code>withRecursiveReadOnly(recursiveReadOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumemountswithsubpath","title":"fn spec.additionalVolumeMounts.withSubPath","text":"<pre><code>withSubPath(subPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumemountswithsubpathexpr","title":"fn spec.additionalVolumeMounts.withSubPathExpr","text":"<pre><code>withSubPathExpr(subPathExpr)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumes","title":"obj spec.additionalVolumes","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumeswithname","title":"fn spec.additionalVolumes.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesawselasticblockstore","title":"obj spec.additionalVolumes.awsElasticBlockStore","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesawselasticblockstorewithfstype","title":"fn spec.additionalVolumes.awsElasticBlockStore.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesawselasticblockstorewithpartition","title":"fn spec.additionalVolumes.awsElasticBlockStore.withPartition","text":"<pre><code>withPartition(partition)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesawselasticblockstorewithreadonly","title":"fn spec.additionalVolumes.awsElasticBlockStore.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesawselasticblockstorewithvolumeid","title":"fn spec.additionalVolumes.awsElasticBlockStore.withVolumeID","text":"<pre><code>withVolumeID(volumeID)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesazuredisk","title":"obj spec.additionalVolumes.azureDisk","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesazurediskwithcachingmode","title":"fn spec.additionalVolumes.azureDisk.withCachingMode","text":"<pre><code>withCachingMode(cachingMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesazurediskwithdiskname","title":"fn spec.additionalVolumes.azureDisk.withDiskName","text":"<pre><code>withDiskName(diskName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesazurediskwithdiskuri","title":"fn spec.additionalVolumes.azureDisk.withDiskURI","text":"<pre><code>withDiskURI(diskURI)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesazurediskwithfstype","title":"fn spec.additionalVolumes.azureDisk.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesazurediskwithkind","title":"fn spec.additionalVolumes.azureDisk.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesazurediskwithreadonly","title":"fn spec.additionalVolumes.azureDisk.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesazurefile","title":"obj spec.additionalVolumes.azureFile","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesazurefilewithreadonly","title":"fn spec.additionalVolumes.azureFile.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesazurefilewithsecretname","title":"fn spec.additionalVolumes.azureFile.withSecretName","text":"<pre><code>withSecretName(secretName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesazurefilewithsharename","title":"fn spec.additionalVolumes.azureFile.withShareName","text":"<pre><code>withShareName(shareName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumescephfs","title":"obj spec.additionalVolumes.cephfs","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescephfswithmonitors","title":"fn spec.additionalVolumes.cephfs.withMonitors","text":"<pre><code>withMonitors(monitors)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescephfswithmonitorsmixin","title":"fn spec.additionalVolumes.cephfs.withMonitorsMixin","text":"<pre><code>withMonitorsMixin(monitors)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescephfswithpath","title":"fn spec.additionalVolumes.cephfs.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescephfswithreadonly","title":"fn spec.additionalVolumes.cephfs.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescephfswithsecretfile","title":"fn spec.additionalVolumes.cephfs.withSecretFile","text":"<pre><code>withSecretFile(secretFile)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescephfswithuser","title":"fn spec.additionalVolumes.cephfs.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumescephfssecretref","title":"obj spec.additionalVolumes.cephfs.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescephfssecretrefwithname","title":"fn spec.additionalVolumes.cephfs.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumescinder","title":"obj spec.additionalVolumes.cinder","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescinderwithfstype","title":"fn spec.additionalVolumes.cinder.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescinderwithreadonly","title":"fn spec.additionalVolumes.cinder.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescinderwithvolumeid","title":"fn spec.additionalVolumes.cinder.withVolumeID","text":"<pre><code>withVolumeID(volumeID)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumescindersecretref","title":"obj spec.additionalVolumes.cinder.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescindersecretrefwithname","title":"fn spec.additionalVolumes.cinder.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesconfigmap","title":"obj spec.additionalVolumes.configMap","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesconfigmapwithdefaultmode","title":"fn spec.additionalVolumes.configMap.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesconfigmapwithitems","title":"fn spec.additionalVolumes.configMap.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesconfigmapwithitemsmixin","title":"fn spec.additionalVolumes.configMap.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesconfigmapwithname","title":"fn spec.additionalVolumes.configMap.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesconfigmapwithoptional","title":"fn spec.additionalVolumes.configMap.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesconfigmapitems","title":"obj spec.additionalVolumes.configMap.items","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesconfigmapitemswithkey","title":"fn spec.additionalVolumes.configMap.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesconfigmapitemswithmode","title":"fn spec.additionalVolumes.configMap.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesconfigmapitemswithpath","title":"fn spec.additionalVolumes.configMap.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumescsi","title":"obj spec.additionalVolumes.csi","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescsiwithdriver","title":"fn spec.additionalVolumes.csi.withDriver","text":"<pre><code>withDriver(driver)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescsiwithfstype","title":"fn spec.additionalVolumes.csi.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescsiwithreadonly","title":"fn spec.additionalVolumes.csi.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescsiwithvolumeattributes","title":"fn spec.additionalVolumes.csi.withVolumeAttributes","text":"<pre><code>withVolumeAttributes(volumeAttributes)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescsiwithvolumeattributesmixin","title":"fn spec.additionalVolumes.csi.withVolumeAttributesMixin","text":"<pre><code>withVolumeAttributesMixin(volumeAttributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumescsinodepublishsecretref","title":"obj spec.additionalVolumes.csi.nodePublishSecretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumescsinodepublishsecretrefwithname","title":"fn spec.additionalVolumes.csi.nodePublishSecretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesdownwardapi","title":"obj spec.additionalVolumes.downwardAPI","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiwithdefaultmode","title":"fn spec.additionalVolumes.downwardAPI.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiwithitems","title":"fn spec.additionalVolumes.downwardAPI.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiwithitemsmixin","title":"fn spec.additionalVolumes.downwardAPI.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesdownwardapiitems","title":"obj spec.additionalVolumes.downwardAPI.items","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiitemswithmode","title":"fn spec.additionalVolumes.downwardAPI.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiitemswithpath","title":"fn spec.additionalVolumes.downwardAPI.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesdownwardapiitemsfieldref","title":"obj spec.additionalVolumes.downwardAPI.items.fieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiitemsfieldrefwithapiversion","title":"fn spec.additionalVolumes.downwardAPI.items.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiitemsfieldrefwithfieldpath","title":"fn spec.additionalVolumes.downwardAPI.items.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesdownwardapiitemsresourcefieldref","title":"obj spec.additionalVolumes.downwardAPI.items.resourceFieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiitemsresourcefieldrefwithcontainername","title":"fn spec.additionalVolumes.downwardAPI.items.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiitemsresourcefieldrefwithdivisor","title":"fn spec.additionalVolumes.downwardAPI.items.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesdownwardapiitemsresourcefieldrefwithresource","title":"fn spec.additionalVolumes.downwardAPI.items.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesemptydir","title":"obj spec.additionalVolumes.emptyDir","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesemptydirwithmedium","title":"fn spec.additionalVolumes.emptyDir.withMedium","text":"<pre><code>withMedium(medium)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesemptydirwithsizelimit","title":"fn spec.additionalVolumes.emptyDir.withSizeLimit","text":"<pre><code>withSizeLimit(sizeLimit)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesephemeral","title":"obj spec.additionalVolumes.ephemeral","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplate","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplatemetadata","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithannotations","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithannotationsmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithfinalizers","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithfinalizersmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithlabels","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithlabelsmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithname","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatemetadatawithnamespace","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplatespec","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecwithaccessmodes","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.withAccessModes","text":"<pre><code>withAccessModes(accessModes)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecwithaccessmodesmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.withAccessModesMixin","text":"<pre><code>withAccessModesMixin(accessModes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecwithstorageclassname","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.withStorageClassName","text":"<pre><code>withStorageClassName(storageClassName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecwithvolumeattributesclassname","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.withVolumeAttributesClassName","text":"<pre><code>withVolumeAttributesClassName(volumeAttributesClassName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecwithvolumemode","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.withVolumeMode","text":"<pre><code>withVolumeMode(volumeMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecwithvolumename","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasource","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSource","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourcewithapigroup","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSource.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourcewithkind","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSource.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourcewithname","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSource.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourceref","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithapigroup","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithkind","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithname","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithnamespace","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplatespecresources","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.resources","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecresourceswithlimits","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecresourceswithlimitsmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecresourceswithrequests","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecresourceswithrequestsmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplatespecselector","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectorwithmatchexpressions","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectorwithmatchexpressionsmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectorwithmatchlabels","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectorwithmatchlabelsmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesephemeralvolumeclaimtemplatespecselectormatchexpressions","title":"obj spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithkey","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithoperator","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithvalues","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithvaluesmixin","title":"fn spec.additionalVolumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesfc","title":"obj spec.additionalVolumes.fc","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesfcwithfstype","title":"fn spec.additionalVolumes.fc.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesfcwithlun","title":"fn spec.additionalVolumes.fc.withLun","text":"<pre><code>withLun(lun)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesfcwithreadonly","title":"fn spec.additionalVolumes.fc.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesfcwithtargetwwns","title":"fn spec.additionalVolumes.fc.withTargetWWNs","text":"<pre><code>withTargetWWNs(targetWWNs)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesfcwithtargetwwnsmixin","title":"fn spec.additionalVolumes.fc.withTargetWWNsMixin","text":"<pre><code>withTargetWWNsMixin(targetWWNs)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesfcwithwwids","title":"fn spec.additionalVolumes.fc.withWwids","text":"<pre><code>withWwids(wwids)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesfcwithwwidsmixin","title":"fn spec.additionalVolumes.fc.withWwidsMixin","text":"<pre><code>withWwidsMixin(wwids)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesflexvolume","title":"obj spec.additionalVolumes.flexVolume","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesflexvolumewithdriver","title":"fn spec.additionalVolumes.flexVolume.withDriver","text":"<pre><code>withDriver(driver)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesflexvolumewithfstype","title":"fn spec.additionalVolumes.flexVolume.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesflexvolumewithoptions","title":"fn spec.additionalVolumes.flexVolume.withOptions","text":"<pre><code>withOptions(options)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesflexvolumewithoptionsmixin","title":"fn spec.additionalVolumes.flexVolume.withOptionsMixin","text":"<pre><code>withOptionsMixin(options)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesflexvolumewithreadonly","title":"fn spec.additionalVolumes.flexVolume.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesflexvolumesecretref","title":"obj spec.additionalVolumes.flexVolume.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesflexvolumesecretrefwithname","title":"fn spec.additionalVolumes.flexVolume.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesflocker","title":"obj spec.additionalVolumes.flocker","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesflockerwithdatasetname","title":"fn spec.additionalVolumes.flocker.withDatasetName","text":"<pre><code>withDatasetName(datasetName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesflockerwithdatasetuuid","title":"fn spec.additionalVolumes.flocker.withDatasetUUID","text":"<pre><code>withDatasetUUID(datasetUUID)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesgcepersistentdisk","title":"obj spec.additionalVolumes.gcePersistentDisk","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesgcepersistentdiskwithfstype","title":"fn spec.additionalVolumes.gcePersistentDisk.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesgcepersistentdiskwithpartition","title":"fn spec.additionalVolumes.gcePersistentDisk.withPartition","text":"<pre><code>withPartition(partition)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesgcepersistentdiskwithpdname","title":"fn spec.additionalVolumes.gcePersistentDisk.withPdName","text":"<pre><code>withPdName(pdName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesgcepersistentdiskwithreadonly","title":"fn spec.additionalVolumes.gcePersistentDisk.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesgitrepo","title":"obj spec.additionalVolumes.gitRepo","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesgitrepowithdirectory","title":"fn spec.additionalVolumes.gitRepo.withDirectory","text":"<pre><code>withDirectory(directory)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesgitrepowithrepository","title":"fn spec.additionalVolumes.gitRepo.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesgitrepowithrevision","title":"fn spec.additionalVolumes.gitRepo.withRevision","text":"<pre><code>withRevision(revision)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesglusterfs","title":"obj spec.additionalVolumes.glusterfs","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesglusterfswithendpoints","title":"fn spec.additionalVolumes.glusterfs.withEndpoints","text":"<pre><code>withEndpoints(endpoints)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesglusterfswithpath","title":"fn spec.additionalVolumes.glusterfs.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesglusterfswithreadonly","title":"fn spec.additionalVolumes.glusterfs.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumeshostpath","title":"obj spec.additionalVolumes.hostPath","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumeshostpathwithpath","title":"fn spec.additionalVolumes.hostPath.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumeshostpathwithtype","title":"fn spec.additionalVolumes.hostPath.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesiscsi","title":"obj spec.additionalVolumes.iscsi","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithchapauthdiscovery","title":"fn spec.additionalVolumes.iscsi.withChapAuthDiscovery","text":"<pre><code>withChapAuthDiscovery(chapAuthDiscovery)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithchapauthsession","title":"fn spec.additionalVolumes.iscsi.withChapAuthSession","text":"<pre><code>withChapAuthSession(chapAuthSession)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithfstype","title":"fn spec.additionalVolumes.iscsi.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithinitiatorname","title":"fn spec.additionalVolumes.iscsi.withInitiatorName","text":"<pre><code>withInitiatorName(initiatorName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithiqn","title":"fn spec.additionalVolumes.iscsi.withIqn","text":"<pre><code>withIqn(iqn)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithiscsiinterface","title":"fn spec.additionalVolumes.iscsi.withIscsiInterface","text":"<pre><code>withIscsiInterface(iscsiInterface)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithlun","title":"fn spec.additionalVolumes.iscsi.withLun","text":"<pre><code>withLun(lun)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithportals","title":"fn spec.additionalVolumes.iscsi.withPortals","text":"<pre><code>withPortals(portals)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithportalsmixin","title":"fn spec.additionalVolumes.iscsi.withPortalsMixin","text":"<pre><code>withPortalsMixin(portals)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithreadonly","title":"fn spec.additionalVolumes.iscsi.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesiscsiwithtargetportal","title":"fn spec.additionalVolumes.iscsi.withTargetPortal","text":"<pre><code>withTargetPortal(targetPortal)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesiscsisecretref","title":"obj spec.additionalVolumes.iscsi.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesiscsisecretrefwithname","title":"fn spec.additionalVolumes.iscsi.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesnfs","title":"obj spec.additionalVolumes.nfs","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesnfswithpath","title":"fn spec.additionalVolumes.nfs.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesnfswithreadonly","title":"fn spec.additionalVolumes.nfs.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesnfswithserver","title":"fn spec.additionalVolumes.nfs.withServer","text":"<pre><code>withServer(server)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumespersistentvolumeclaim","title":"obj spec.additionalVolumes.persistentVolumeClaim","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumespersistentvolumeclaimwithclaimname","title":"fn spec.additionalVolumes.persistentVolumeClaim.withClaimName","text":"<pre><code>withClaimName(claimName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumespersistentvolumeclaimwithreadonly","title":"fn spec.additionalVolumes.persistentVolumeClaim.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesphotonpersistentdisk","title":"obj spec.additionalVolumes.photonPersistentDisk","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesphotonpersistentdiskwithfstype","title":"fn spec.additionalVolumes.photonPersistentDisk.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesphotonpersistentdiskwithpdid","title":"fn spec.additionalVolumes.photonPersistentDisk.withPdID","text":"<pre><code>withPdID(pdID)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesportworxvolume","title":"obj spec.additionalVolumes.portworxVolume","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesportworxvolumewithfstype","title":"fn spec.additionalVolumes.portworxVolume.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesportworxvolumewithreadonly","title":"fn spec.additionalVolumes.portworxVolume.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesportworxvolumewithvolumeid","title":"fn spec.additionalVolumes.portworxVolume.withVolumeID","text":"<pre><code>withVolumeID(volumeID)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesprojected","title":"obj spec.additionalVolumes.projected","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedwithdefaultmode","title":"fn spec.additionalVolumes.projected.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedwithsources","title":"fn spec.additionalVolumes.projected.withSources","text":"<pre><code>withSources(sources)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedwithsourcesmixin","title":"fn spec.additionalVolumes.projected.withSourcesMixin","text":"<pre><code>withSourcesMixin(sources)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesprojectedsources","title":"obj spec.additionalVolumes.projected.sources","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesclustertrustbundle","title":"obj spec.additionalVolumes.projected.sources.clusterTrustBundle","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlewithname","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlewithoptional","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlewithpath","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlewithsignername","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.withSignerName","text":"<pre><code>withSignerName(signerName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselector","title":"obj spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchexpressions","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchexpressionsmixin","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchlabels","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchlabelsmixin","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressions","title":"obj spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithkey","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithoperator","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithvalues","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithvaluesmixin","title":"fn spec.additionalVolumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesconfigmap","title":"obj spec.additionalVolumes.projected.sources.configMap","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesconfigmapwithitems","title":"fn spec.additionalVolumes.projected.sources.configMap.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesconfigmapwithitemsmixin","title":"fn spec.additionalVolumes.projected.sources.configMap.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesconfigmapwithname","title":"fn spec.additionalVolumes.projected.sources.configMap.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesconfigmapwithoptional","title":"fn spec.additionalVolumes.projected.sources.configMap.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesconfigmapitems","title":"obj spec.additionalVolumes.projected.sources.configMap.items","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesconfigmapitemswithkey","title":"fn spec.additionalVolumes.projected.sources.configMap.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesconfigmapitemswithmode","title":"fn spec.additionalVolumes.projected.sources.configMap.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesconfigmapitemswithpath","title":"fn spec.additionalVolumes.projected.sources.configMap.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesdownwardapi","title":"obj spec.additionalVolumes.projected.sources.downwardAPI","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiwithitems","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiwithitemsmixin","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesdownwardapiitems","title":"obj spec.additionalVolumes.projected.sources.downwardAPI.items","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiitemswithmode","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiitemswithpath","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesdownwardapiitemsfieldref","title":"obj spec.additionalVolumes.projected.sources.downwardAPI.items.fieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiitemsfieldrefwithapiversion","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.items.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiitemsfieldrefwithfieldpath","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.items.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesdownwardapiitemsresourcefieldref","title":"obj spec.additionalVolumes.projected.sources.downwardAPI.items.resourceFieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiitemsresourcefieldrefwithcontainername","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.items.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiitemsresourcefieldrefwithdivisor","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.items.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesdownwardapiitemsresourcefieldrefwithresource","title":"fn spec.additionalVolumes.projected.sources.downwardAPI.items.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcessecret","title":"obj spec.additionalVolumes.projected.sources.secret","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcessecretwithitems","title":"fn spec.additionalVolumes.projected.sources.secret.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcessecretwithitemsmixin","title":"fn spec.additionalVolumes.projected.sources.secret.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcessecretwithname","title":"fn spec.additionalVolumes.projected.sources.secret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcessecretwithoptional","title":"fn spec.additionalVolumes.projected.sources.secret.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcessecretitems","title":"obj spec.additionalVolumes.projected.sources.secret.items","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcessecretitemswithkey","title":"fn spec.additionalVolumes.projected.sources.secret.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcessecretitemswithmode","title":"fn spec.additionalVolumes.projected.sources.secret.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcessecretitemswithpath","title":"fn spec.additionalVolumes.projected.sources.secret.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesprojectedsourcesserviceaccounttoken","title":"obj spec.additionalVolumes.projected.sources.serviceAccountToken","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesserviceaccounttokenwithaudience","title":"fn spec.additionalVolumes.projected.sources.serviceAccountToken.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesserviceaccounttokenwithexpirationseconds","title":"fn spec.additionalVolumes.projected.sources.serviceAccountToken.withExpirationSeconds","text":"<pre><code>withExpirationSeconds(expirationSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesprojectedsourcesserviceaccounttokenwithpath","title":"fn spec.additionalVolumes.projected.sources.serviceAccountToken.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesquobyte","title":"obj spec.additionalVolumes.quobyte","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesquobytewithgroup","title":"fn spec.additionalVolumes.quobyte.withGroup","text":"<pre><code>withGroup(group)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesquobytewithreadonly","title":"fn spec.additionalVolumes.quobyte.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesquobytewithregistry","title":"fn spec.additionalVolumes.quobyte.withRegistry","text":"<pre><code>withRegistry(registry)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesquobytewithtenant","title":"fn spec.additionalVolumes.quobyte.withTenant","text":"<pre><code>withTenant(tenant)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesquobytewithuser","title":"fn spec.additionalVolumes.quobyte.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesquobytewithvolume","title":"fn spec.additionalVolumes.quobyte.withVolume","text":"<pre><code>withVolume(volume)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesrbd","title":"obj spec.additionalVolumes.rbd","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesrbdwithfstype","title":"fn spec.additionalVolumes.rbd.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesrbdwithimage","title":"fn spec.additionalVolumes.rbd.withImage","text":"<pre><code>withImage(image)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesrbdwithkeyring","title":"fn spec.additionalVolumes.rbd.withKeyring","text":"<pre><code>withKeyring(keyring)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesrbdwithmonitors","title":"fn spec.additionalVolumes.rbd.withMonitors","text":"<pre><code>withMonitors(monitors)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesrbdwithmonitorsmixin","title":"fn spec.additionalVolumes.rbd.withMonitorsMixin","text":"<pre><code>withMonitorsMixin(monitors)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesrbdwithpool","title":"fn spec.additionalVolumes.rbd.withPool","text":"<pre><code>withPool(pool)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesrbdwithreadonly","title":"fn spec.additionalVolumes.rbd.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesrbdwithuser","title":"fn spec.additionalVolumes.rbd.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesrbdsecretref","title":"obj spec.additionalVolumes.rbd.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesrbdsecretrefwithname","title":"fn spec.additionalVolumes.rbd.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesscaleio","title":"obj spec.additionalVolumes.scaleIO","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithfstype","title":"fn spec.additionalVolumes.scaleIO.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithgateway","title":"fn spec.additionalVolumes.scaleIO.withGateway","text":"<pre><code>withGateway(gateway)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithprotectiondomain","title":"fn spec.additionalVolumes.scaleIO.withProtectionDomain","text":"<pre><code>withProtectionDomain(protectionDomain)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithreadonly","title":"fn spec.additionalVolumes.scaleIO.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithsslenabled","title":"fn spec.additionalVolumes.scaleIO.withSslEnabled","text":"<pre><code>withSslEnabled(sslEnabled)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithstoragemode","title":"fn spec.additionalVolumes.scaleIO.withStorageMode","text":"<pre><code>withStorageMode(storageMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithstoragepool","title":"fn spec.additionalVolumes.scaleIO.withStoragePool","text":"<pre><code>withStoragePool(storagePool)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithsystem","title":"fn spec.additionalVolumes.scaleIO.withSystem","text":"<pre><code>withSystem(system)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesscaleiowithvolumename","title":"fn spec.additionalVolumes.scaleIO.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesscaleiosecretref","title":"obj spec.additionalVolumes.scaleIO.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesscaleiosecretrefwithname","title":"fn spec.additionalVolumes.scaleIO.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumessecret","title":"obj spec.additionalVolumes.secret","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumessecretwithdefaultmode","title":"fn spec.additionalVolumes.secret.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumessecretwithitems","title":"fn spec.additionalVolumes.secret.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumessecretwithitemsmixin","title":"fn spec.additionalVolumes.secret.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumessecretwithoptional","title":"fn spec.additionalVolumes.secret.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumessecretwithsecretname","title":"fn spec.additionalVolumes.secret.withSecretName","text":"<pre><code>withSecretName(secretName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumessecretitems","title":"obj spec.additionalVolumes.secret.items","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumessecretitemswithkey","title":"fn spec.additionalVolumes.secret.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumessecretitemswithmode","title":"fn spec.additionalVolumes.secret.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumessecretitemswithpath","title":"fn spec.additionalVolumes.secret.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesstorageos","title":"obj spec.additionalVolumes.storageos","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesstorageoswithfstype","title":"fn spec.additionalVolumes.storageos.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesstorageoswithreadonly","title":"fn spec.additionalVolumes.storageos.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesstorageoswithvolumename","title":"fn spec.additionalVolumes.storageos.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesstorageoswithvolumenamespace","title":"fn spec.additionalVolumes.storageos.withVolumeNamespace","text":"<pre><code>withVolumeNamespace(volumeNamespace)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesstorageossecretref","title":"obj spec.additionalVolumes.storageos.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesstorageossecretrefwithname","title":"fn spec.additionalVolumes.storageos.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specadditionalvolumesvspherevolume","title":"obj spec.additionalVolumes.vsphereVolume","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesvspherevolumewithfstype","title":"fn spec.additionalVolumes.vsphereVolume.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesvspherevolumewithstoragepolicyid","title":"fn spec.additionalVolumes.vsphereVolume.withStoragePolicyID","text":"<pre><code>withStoragePolicyID(storagePolicyID)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesvspherevolumewithstoragepolicyname","title":"fn spec.additionalVolumes.vsphereVolume.withStoragePolicyName","text":"<pre><code>withStoragePolicyName(storagePolicyName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specadditionalvolumesvspherevolumewithvolumepath","title":"fn spec.additionalVolumes.vsphereVolume.withVolumePath","text":"<pre><code>withVolumePath(volumePath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specbuckets","title":"obj spec.buckets","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specbucketswithname","title":"fn spec.buckets.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specbucketswithobjectlock","title":"fn spec.buckets.withObjectLock","text":"<pre><code>withObjectLock(objectLock)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specbucketswithregion","title":"fn spec.buckets.withRegion","text":"<pre><code>withRegion(region)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speccertconfig","title":"obj spec.certConfig","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speccertconfigwithcommonname","title":"fn spec.certConfig.withCommonName","text":"<pre><code>withCommonName(commonName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speccertconfigwithdnsnames","title":"fn spec.certConfig.withDnsNames","text":"<pre><code>withDnsNames(dnsNames)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speccertconfigwithdnsnamesmixin","title":"fn spec.certConfig.withDnsNamesMixin","text":"<pre><code>withDnsNamesMixin(dnsNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speccertconfigwithorganizationname","title":"fn spec.certConfig.withOrganizationName","text":"<pre><code>withOrganizationName(organizationName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speccertconfigwithorganizationnamemixin","title":"fn spec.certConfig.withOrganizationNameMixin","text":"<pre><code>withOrganizationNameMixin(organizationName)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specconfiguration","title":"obj spec.configuration","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specconfigurationwithname","title":"fn spec.configuration.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specenv","title":"obj spec.env","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specenvwithname","title":"fn spec.env.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specenvwithvalue","title":"fn spec.env.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specenvvaluefrom","title":"obj spec.env.valueFrom","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specenvvaluefromconfigmapkeyref","title":"obj spec.env.valueFrom.configMapKeyRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specenvvaluefromconfigmapkeyrefwithkey","title":"fn spec.env.valueFrom.configMapKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specenvvaluefromconfigmapkeyrefwithname","title":"fn spec.env.valueFrom.configMapKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specenvvaluefromconfigmapkeyrefwithoptional","title":"fn spec.env.valueFrom.configMapKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specenvvaluefromfieldref","title":"obj spec.env.valueFrom.fieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specenvvaluefromfieldrefwithapiversion","title":"fn spec.env.valueFrom.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specenvvaluefromfieldrefwithfieldpath","title":"fn spec.env.valueFrom.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specenvvaluefromresourcefieldref","title":"obj spec.env.valueFrom.resourceFieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specenvvaluefromresourcefieldrefwithcontainername","title":"fn spec.env.valueFrom.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specenvvaluefromresourcefieldrefwithdivisor","title":"fn spec.env.valueFrom.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specenvvaluefromresourcefieldrefwithresource","title":"fn spec.env.valueFrom.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specenvvaluefromsecretkeyref","title":"obj spec.env.valueFrom.secretKeyRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specenvvaluefromsecretkeyrefwithkey","title":"fn spec.env.valueFrom.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specenvvaluefromsecretkeyrefwithname","title":"fn spec.env.valueFrom.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specenvvaluefromsecretkeyrefwithoptional","title":"fn spec.env.valueFrom.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specexposeservices","title":"obj spec.exposeServices","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specexposeserviceswithconsole","title":"fn spec.exposeServices.withConsole","text":"<pre><code>withConsole(console)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specexposeserviceswithminio","title":"fn spec.exposeServices.withMinio","text":"<pre><code>withMinio(minio)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specexternalcacertsecret","title":"obj spec.externalCaCertSecret","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specexternalcacertsecretwithname","title":"fn spec.externalCaCertSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specexternalcacertsecretwithtype","title":"fn spec.externalCaCertSecret.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specexternalcertsecret","title":"obj spec.externalCertSecret","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specexternalcertsecretwithname","title":"fn spec.externalCertSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specexternalcertsecretwithtype","title":"fn spec.externalCertSecret.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specexternalclientcertsecret","title":"obj spec.externalClientCertSecret","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specexternalclientcertsecretwithname","title":"fn spec.externalClientCertSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specexternalclientcertsecretwithtype","title":"fn spec.externalClientCertSecret.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specexternalclientcertsecrets","title":"obj spec.externalClientCertSecrets","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specexternalclientcertsecretswithname","title":"fn spec.externalClientCertSecrets.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specexternalclientcertsecretswithtype","title":"fn spec.externalClientCertSecrets.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specfeatures","title":"obj spec.features","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specfeatureswithbucketdns","title":"fn spec.features.withBucketDNS","text":"<pre><code>withBucketDNS(bucketDNS)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specfeatureswithenablesftp","title":"fn spec.features.withEnableSFTP","text":"<pre><code>withEnableSFTP(enableSFTP)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specfeaturesdomains","title":"obj spec.features.domains","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specfeaturesdomainswithconsole","title":"fn spec.features.domains.withConsole","text":"<pre><code>withConsole(console)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specfeaturesdomainswithminio","title":"fn spec.features.domains.withMinio","text":"<pre><code>withMinio(minio)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specfeaturesdomainswithminiomixin","title":"fn spec.features.domains.withMinioMixin","text":"<pre><code>withMinioMixin(minio)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specimagepullsecret","title":"obj spec.imagePullSecret","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specimagepullsecretwithname","title":"fn spec.imagePullSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainers","title":"obj spec.initContainers","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithargs","title":"fn spec.initContainers.withArgs","text":"<pre><code>withArgs(args)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithargsmixin","title":"fn spec.initContainers.withArgsMixin","text":"<pre><code>withArgsMixin(args)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithcommand","title":"fn spec.initContainers.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithcommandmixin","title":"fn spec.initContainers.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithenv","title":"fn spec.initContainers.withEnv","text":"<pre><code>withEnv(env)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithenvfrom","title":"fn spec.initContainers.withEnvFrom","text":"<pre><code>withEnvFrom(envFrom)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithenvfrommixin","title":"fn spec.initContainers.withEnvFromMixin","text":"<pre><code>withEnvFromMixin(envFrom)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithenvmixin","title":"fn spec.initContainers.withEnvMixin","text":"<pre><code>withEnvMixin(env)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithimage","title":"fn spec.initContainers.withImage","text":"<pre><code>withImage(image)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithimagepullpolicy","title":"fn spec.initContainers.withImagePullPolicy","text":"<pre><code>withImagePullPolicy(imagePullPolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithname","title":"fn spec.initContainers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithports","title":"fn spec.initContainers.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithportsmixin","title":"fn spec.initContainers.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithresizepolicy","title":"fn spec.initContainers.withResizePolicy","text":"<pre><code>withResizePolicy(resizePolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithresizepolicymixin","title":"fn spec.initContainers.withResizePolicyMixin","text":"<pre><code>withResizePolicyMixin(resizePolicy)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithrestartpolicy","title":"fn spec.initContainers.withRestartPolicy","text":"<pre><code>withRestartPolicy(restartPolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithstdin","title":"fn spec.initContainers.withStdin","text":"<pre><code>withStdin(stdin)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithstdinonce","title":"fn spec.initContainers.withStdinOnce","text":"<pre><code>withStdinOnce(stdinOnce)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithterminationmessagepath","title":"fn spec.initContainers.withTerminationMessagePath","text":"<pre><code>withTerminationMessagePath(terminationMessagePath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithterminationmessagepolicy","title":"fn spec.initContainers.withTerminationMessagePolicy","text":"<pre><code>withTerminationMessagePolicy(terminationMessagePolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithtty","title":"fn spec.initContainers.withTty","text":"<pre><code>withTty(tty)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithvolumedevices","title":"fn spec.initContainers.withVolumeDevices","text":"<pre><code>withVolumeDevices(volumeDevices)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithvolumedevicesmixin","title":"fn spec.initContainers.withVolumeDevicesMixin","text":"<pre><code>withVolumeDevicesMixin(volumeDevices)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithvolumemounts","title":"fn spec.initContainers.withVolumeMounts","text":"<pre><code>withVolumeMounts(volumeMounts)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithvolumemountsmixin","title":"fn spec.initContainers.withVolumeMountsMixin","text":"<pre><code>withVolumeMountsMixin(volumeMounts)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerswithworkingdir","title":"fn spec.initContainers.withWorkingDir","text":"<pre><code>withWorkingDir(workingDir)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersenv","title":"obj spec.initContainers.env","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvwithname","title":"fn spec.initContainers.env.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvwithvalue","title":"fn spec.initContainers.env.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersenvvaluefrom","title":"obj spec.initContainers.env.valueFrom","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersenvvaluefromconfigmapkeyref","title":"obj spec.initContainers.env.valueFrom.configMapKeyRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvvaluefromconfigmapkeyrefwithkey","title":"fn spec.initContainers.env.valueFrom.configMapKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvvaluefromconfigmapkeyrefwithname","title":"fn spec.initContainers.env.valueFrom.configMapKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvvaluefromconfigmapkeyrefwithoptional","title":"fn spec.initContainers.env.valueFrom.configMapKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersenvvaluefromfieldref","title":"obj spec.initContainers.env.valueFrom.fieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvvaluefromfieldrefwithapiversion","title":"fn spec.initContainers.env.valueFrom.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvvaluefromfieldrefwithfieldpath","title":"fn spec.initContainers.env.valueFrom.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersenvvaluefromresourcefieldref","title":"obj spec.initContainers.env.valueFrom.resourceFieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvvaluefromresourcefieldrefwithcontainername","title":"fn spec.initContainers.env.valueFrom.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvvaluefromresourcefieldrefwithdivisor","title":"fn spec.initContainers.env.valueFrom.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvvaluefromresourcefieldrefwithresource","title":"fn spec.initContainers.env.valueFrom.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersenvvaluefromsecretkeyref","title":"obj spec.initContainers.env.valueFrom.secretKeyRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvvaluefromsecretkeyrefwithkey","title":"fn spec.initContainers.env.valueFrom.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvvaluefromsecretkeyrefwithname","title":"fn spec.initContainers.env.valueFrom.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvvaluefromsecretkeyrefwithoptional","title":"fn spec.initContainers.env.valueFrom.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersenvfrom","title":"obj spec.initContainers.envFrom","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvfromwithprefix","title":"fn spec.initContainers.envFrom.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersenvfromconfigmapref","title":"obj spec.initContainers.envFrom.configMapRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvfromconfigmaprefwithname","title":"fn spec.initContainers.envFrom.configMapRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvfromconfigmaprefwithoptional","title":"fn spec.initContainers.envFrom.configMapRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersenvfromsecretref","title":"obj spec.initContainers.envFrom.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvfromsecretrefwithname","title":"fn spec.initContainers.envFrom.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersenvfromsecretrefwithoptional","title":"fn spec.initContainers.envFrom.secretRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslifecycle","title":"obj spec.initContainers.lifecycle","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslifecyclepoststart","title":"obj spec.initContainers.lifecycle.postStart","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslifecyclepoststartexec","title":"obj spec.initContainers.lifecycle.postStart.exec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststartexecwithcommand","title":"fn spec.initContainers.lifecycle.postStart.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststartexecwithcommandmixin","title":"fn spec.initContainers.lifecycle.postStart.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslifecyclepoststarthttpget","title":"obj spec.initContainers.lifecycle.postStart.httpGet","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgetwithhost","title":"fn spec.initContainers.lifecycle.postStart.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgetwithhttpheaders","title":"fn spec.initContainers.lifecycle.postStart.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgetwithhttpheadersmixin","title":"fn spec.initContainers.lifecycle.postStart.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgetwithpath","title":"fn spec.initContainers.lifecycle.postStart.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgetwithport","title":"fn spec.initContainers.lifecycle.postStart.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgetwithscheme","title":"fn spec.initContainers.lifecycle.postStart.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslifecyclepoststarthttpgethttpheaders","title":"obj spec.initContainers.lifecycle.postStart.httpGet.httpHeaders","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgethttpheaderswithname","title":"fn spec.initContainers.lifecycle.postStart.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarthttpgethttpheaderswithvalue","title":"fn spec.initContainers.lifecycle.postStart.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslifecyclepoststartsleep","title":"obj spec.initContainers.lifecycle.postStart.sleep","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststartsleepwithseconds","title":"fn spec.initContainers.lifecycle.postStart.sleep.withSeconds","text":"<pre><code>withSeconds(seconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslifecyclepoststarttcpsocket","title":"obj spec.initContainers.lifecycle.postStart.tcpSocket","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarttcpsocketwithhost","title":"fn spec.initContainers.lifecycle.postStart.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecyclepoststarttcpsocketwithport","title":"fn spec.initContainers.lifecycle.postStart.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslifecycleprestop","title":"obj spec.initContainers.lifecycle.preStop","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslifecycleprestopexec","title":"obj spec.initContainers.lifecycle.preStop.exec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecycleprestopexecwithcommand","title":"fn spec.initContainers.lifecycle.preStop.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecycleprestopexecwithcommandmixin","title":"fn spec.initContainers.lifecycle.preStop.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslifecycleprestophttpget","title":"obj spec.initContainers.lifecycle.preStop.httpGet","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgetwithhost","title":"fn spec.initContainers.lifecycle.preStop.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgetwithhttpheaders","title":"fn spec.initContainers.lifecycle.preStop.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgetwithhttpheadersmixin","title":"fn spec.initContainers.lifecycle.preStop.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgetwithpath","title":"fn spec.initContainers.lifecycle.preStop.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgetwithport","title":"fn spec.initContainers.lifecycle.preStop.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgetwithscheme","title":"fn spec.initContainers.lifecycle.preStop.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslifecycleprestophttpgethttpheaders","title":"obj spec.initContainers.lifecycle.preStop.httpGet.httpHeaders","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgethttpheaderswithname","title":"fn spec.initContainers.lifecycle.preStop.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecycleprestophttpgethttpheaderswithvalue","title":"fn spec.initContainers.lifecycle.preStop.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslifecycleprestopsleep","title":"obj spec.initContainers.lifecycle.preStop.sleep","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecycleprestopsleepwithseconds","title":"fn spec.initContainers.lifecycle.preStop.sleep.withSeconds","text":"<pre><code>withSeconds(seconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslifecycleprestoptcpsocket","title":"obj spec.initContainers.lifecycle.preStop.tcpSocket","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecycleprestoptcpsocketwithhost","title":"fn spec.initContainers.lifecycle.preStop.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslifecycleprestoptcpsocketwithport","title":"fn spec.initContainers.lifecycle.preStop.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslivenessprobe","title":"obj spec.initContainers.livenessProbe","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobewithfailurethreshold","title":"fn spec.initContainers.livenessProbe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobewithinitialdelayseconds","title":"fn spec.initContainers.livenessProbe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobewithperiodseconds","title":"fn spec.initContainers.livenessProbe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobewithsuccessthreshold","title":"fn spec.initContainers.livenessProbe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobewithterminationgraceperiodseconds","title":"fn spec.initContainers.livenessProbe.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobewithtimeoutseconds","title":"fn spec.initContainers.livenessProbe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslivenessprobeexec","title":"obj spec.initContainers.livenessProbe.exec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobeexecwithcommand","title":"fn spec.initContainers.livenessProbe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobeexecwithcommandmixin","title":"fn spec.initContainers.livenessProbe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslivenessprobegrpc","title":"obj spec.initContainers.livenessProbe.grpc","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobegrpcwithport","title":"fn spec.initContainers.livenessProbe.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobegrpcwithservice","title":"fn spec.initContainers.livenessProbe.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslivenessprobehttpget","title":"obj spec.initContainers.livenessProbe.httpGet","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgetwithhost","title":"fn spec.initContainers.livenessProbe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgetwithhttpheaders","title":"fn spec.initContainers.livenessProbe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgetwithhttpheadersmixin","title":"fn spec.initContainers.livenessProbe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgetwithpath","title":"fn spec.initContainers.livenessProbe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgetwithport","title":"fn spec.initContainers.livenessProbe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgetwithscheme","title":"fn spec.initContainers.livenessProbe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslivenessprobehttpgethttpheaders","title":"obj spec.initContainers.livenessProbe.httpGet.httpHeaders","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgethttpheaderswithname","title":"fn spec.initContainers.livenessProbe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobehttpgethttpheaderswithvalue","title":"fn spec.initContainers.livenessProbe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerslivenessprobetcpsocket","title":"obj spec.initContainers.livenessProbe.tcpSocket","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobetcpsocketwithhost","title":"fn spec.initContainers.livenessProbe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerslivenessprobetcpsocketwithport","title":"fn spec.initContainers.livenessProbe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersports","title":"obj spec.initContainers.ports","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersportswithcontainerport","title":"fn spec.initContainers.ports.withContainerPort","text":"<pre><code>withContainerPort(containerPort)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersportswithhostip","title":"fn spec.initContainers.ports.withHostIP","text":"<pre><code>withHostIP(hostIP)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersportswithhostport","title":"fn spec.initContainers.ports.withHostPort","text":"<pre><code>withHostPort(hostPort)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersportswithname","title":"fn spec.initContainers.ports.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersportswithprotocol","title":"fn spec.initContainers.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersreadinessprobe","title":"obj spec.initContainers.readinessProbe","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobewithfailurethreshold","title":"fn spec.initContainers.readinessProbe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobewithinitialdelayseconds","title":"fn spec.initContainers.readinessProbe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobewithperiodseconds","title":"fn spec.initContainers.readinessProbe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobewithsuccessthreshold","title":"fn spec.initContainers.readinessProbe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobewithterminationgraceperiodseconds","title":"fn spec.initContainers.readinessProbe.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobewithtimeoutseconds","title":"fn spec.initContainers.readinessProbe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersreadinessprobeexec","title":"obj spec.initContainers.readinessProbe.exec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobeexecwithcommand","title":"fn spec.initContainers.readinessProbe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobeexecwithcommandmixin","title":"fn spec.initContainers.readinessProbe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersreadinessprobegrpc","title":"obj spec.initContainers.readinessProbe.grpc","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobegrpcwithport","title":"fn spec.initContainers.readinessProbe.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobegrpcwithservice","title":"fn spec.initContainers.readinessProbe.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersreadinessprobehttpget","title":"obj spec.initContainers.readinessProbe.httpGet","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgetwithhost","title":"fn spec.initContainers.readinessProbe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgetwithhttpheaders","title":"fn spec.initContainers.readinessProbe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgetwithhttpheadersmixin","title":"fn spec.initContainers.readinessProbe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgetwithpath","title":"fn spec.initContainers.readinessProbe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgetwithport","title":"fn spec.initContainers.readinessProbe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgetwithscheme","title":"fn spec.initContainers.readinessProbe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersreadinessprobehttpgethttpheaders","title":"obj spec.initContainers.readinessProbe.httpGet.httpHeaders","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgethttpheaderswithname","title":"fn spec.initContainers.readinessProbe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobehttpgethttpheaderswithvalue","title":"fn spec.initContainers.readinessProbe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersreadinessprobetcpsocket","title":"obj spec.initContainers.readinessProbe.tcpSocket","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobetcpsocketwithhost","title":"fn spec.initContainers.readinessProbe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersreadinessprobetcpsocketwithport","title":"fn spec.initContainers.readinessProbe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersresizepolicy","title":"obj spec.initContainers.resizePolicy","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersresizepolicywithresourcename","title":"fn spec.initContainers.resizePolicy.withResourceName","text":"<pre><code>withResourceName(resourceName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersresizepolicywithrestartpolicy","title":"fn spec.initContainers.resizePolicy.withRestartPolicy","text":"<pre><code>withRestartPolicy(restartPolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersresources","title":"obj spec.initContainers.resources","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersresourceswithclaims","title":"fn spec.initContainers.resources.withClaims","text":"<pre><code>withClaims(claims)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersresourceswithclaimsmixin","title":"fn spec.initContainers.resources.withClaimsMixin","text":"<pre><code>withClaimsMixin(claims)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersresourceswithlimits","title":"fn spec.initContainers.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersresourceswithlimitsmixin","title":"fn spec.initContainers.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersresourceswithrequests","title":"fn spec.initContainers.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersresourceswithrequestsmixin","title":"fn spec.initContainers.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersresourcesclaims","title":"obj spec.initContainers.resources.claims","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersresourcesclaimswithname","title":"fn spec.initContainers.resources.claims.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerssecuritycontext","title":"obj spec.initContainers.securityContext","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwithallowprivilegeescalation","title":"fn spec.initContainers.securityContext.withAllowPrivilegeEscalation","text":"<pre><code>withAllowPrivilegeEscalation(allowPrivilegeEscalation)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwithprivileged","title":"fn spec.initContainers.securityContext.withPrivileged","text":"<pre><code>withPrivileged(privileged)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwithprocmount","title":"fn spec.initContainers.securityContext.withProcMount","text":"<pre><code>withProcMount(procMount)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwithreadonlyrootfilesystem","title":"fn spec.initContainers.securityContext.withReadOnlyRootFilesystem","text":"<pre><code>withReadOnlyRootFilesystem(readOnlyRootFilesystem)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwithrunasgroup","title":"fn spec.initContainers.securityContext.withRunAsGroup","text":"<pre><code>withRunAsGroup(runAsGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwithrunasnonroot","title":"fn spec.initContainers.securityContext.withRunAsNonRoot","text":"<pre><code>withRunAsNonRoot(runAsNonRoot)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwithrunasuser","title":"fn spec.initContainers.securityContext.withRunAsUser","text":"<pre><code>withRunAsUser(runAsUser)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerssecuritycontextapparmorprofile","title":"obj spec.initContainers.securityContext.appArmorProfile","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextapparmorprofilewithlocalhostprofile","title":"fn spec.initContainers.securityContext.appArmorProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextapparmorprofilewithtype","title":"fn spec.initContainers.securityContext.appArmorProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerssecuritycontextcapabilities","title":"obj spec.initContainers.securityContext.capabilities","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextcapabilitieswithadd","title":"fn spec.initContainers.securityContext.capabilities.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextcapabilitieswithaddmixin","title":"fn spec.initContainers.securityContext.capabilities.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextcapabilitieswithdrop","title":"fn spec.initContainers.securityContext.capabilities.withDrop","text":"<pre><code>withDrop(drop)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextcapabilitieswithdropmixin","title":"fn spec.initContainers.securityContext.capabilities.withDropMixin","text":"<pre><code>withDropMixin(drop)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerssecuritycontextselinuxoptions","title":"obj spec.initContainers.securityContext.seLinuxOptions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextselinuxoptionswithlevel","title":"fn spec.initContainers.securityContext.seLinuxOptions.withLevel","text":"<pre><code>withLevel(level)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextselinuxoptionswithrole","title":"fn spec.initContainers.securityContext.seLinuxOptions.withRole","text":"<pre><code>withRole(role)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextselinuxoptionswithtype","title":"fn spec.initContainers.securityContext.seLinuxOptions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextselinuxoptionswithuser","title":"fn spec.initContainers.securityContext.seLinuxOptions.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerssecuritycontextseccompprofile","title":"obj spec.initContainers.securityContext.seccompProfile","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextseccompprofilewithlocalhostprofile","title":"fn spec.initContainers.securityContext.seccompProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextseccompprofilewithtype","title":"fn spec.initContainers.securityContext.seccompProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainerssecuritycontextwindowsoptions","title":"obj spec.initContainers.securityContext.windowsOptions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwindowsoptionswithgmsacredentialspec","title":"fn spec.initContainers.securityContext.windowsOptions.withGmsaCredentialSpec","text":"<pre><code>withGmsaCredentialSpec(gmsaCredentialSpec)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwindowsoptionswithgmsacredentialspecname","title":"fn spec.initContainers.securityContext.windowsOptions.withGmsaCredentialSpecName","text":"<pre><code>withGmsaCredentialSpecName(gmsaCredentialSpecName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwindowsoptionswithhostprocess","title":"fn spec.initContainers.securityContext.windowsOptions.withHostProcess","text":"<pre><code>withHostProcess(hostProcess)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainerssecuritycontextwindowsoptionswithrunasusername","title":"fn spec.initContainers.securityContext.windowsOptions.withRunAsUserName","text":"<pre><code>withRunAsUserName(runAsUserName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersstartupprobe","title":"obj spec.initContainers.startupProbe","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobewithfailurethreshold","title":"fn spec.initContainers.startupProbe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobewithinitialdelayseconds","title":"fn spec.initContainers.startupProbe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobewithperiodseconds","title":"fn spec.initContainers.startupProbe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobewithsuccessthreshold","title":"fn spec.initContainers.startupProbe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobewithterminationgraceperiodseconds","title":"fn spec.initContainers.startupProbe.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobewithtimeoutseconds","title":"fn spec.initContainers.startupProbe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersstartupprobeexec","title":"obj spec.initContainers.startupProbe.exec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobeexecwithcommand","title":"fn spec.initContainers.startupProbe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobeexecwithcommandmixin","title":"fn spec.initContainers.startupProbe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersstartupprobegrpc","title":"obj spec.initContainers.startupProbe.grpc","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobegrpcwithport","title":"fn spec.initContainers.startupProbe.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobegrpcwithservice","title":"fn spec.initContainers.startupProbe.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersstartupprobehttpget","title":"obj spec.initContainers.startupProbe.httpGet","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgetwithhost","title":"fn spec.initContainers.startupProbe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgetwithhttpheaders","title":"fn spec.initContainers.startupProbe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgetwithhttpheadersmixin","title":"fn spec.initContainers.startupProbe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgetwithpath","title":"fn spec.initContainers.startupProbe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgetwithport","title":"fn spec.initContainers.startupProbe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgetwithscheme","title":"fn spec.initContainers.startupProbe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersstartupprobehttpgethttpheaders","title":"obj spec.initContainers.startupProbe.httpGet.httpHeaders","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgethttpheaderswithname","title":"fn spec.initContainers.startupProbe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobehttpgethttpheaderswithvalue","title":"fn spec.initContainers.startupProbe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersstartupprobetcpsocket","title":"obj spec.initContainers.startupProbe.tcpSocket","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobetcpsocketwithhost","title":"fn spec.initContainers.startupProbe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersstartupprobetcpsocketwithport","title":"fn spec.initContainers.startupProbe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersvolumedevices","title":"obj spec.initContainers.volumeDevices","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersvolumedeviceswithdevicepath","title":"fn spec.initContainers.volumeDevices.withDevicePath","text":"<pre><code>withDevicePath(devicePath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersvolumedeviceswithname","title":"fn spec.initContainers.volumeDevices.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specinitcontainersvolumemounts","title":"obj spec.initContainers.volumeMounts","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersvolumemountswithmountpath","title":"fn spec.initContainers.volumeMounts.withMountPath","text":"<pre><code>withMountPath(mountPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersvolumemountswithmountpropagation","title":"fn spec.initContainers.volumeMounts.withMountPropagation","text":"<pre><code>withMountPropagation(mountPropagation)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersvolumemountswithname","title":"fn spec.initContainers.volumeMounts.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersvolumemountswithreadonly","title":"fn spec.initContainers.volumeMounts.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersvolumemountswithrecursivereadonly","title":"fn spec.initContainers.volumeMounts.withRecursiveReadOnly","text":"<pre><code>withRecursiveReadOnly(recursiveReadOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersvolumemountswithsubpath","title":"fn spec.initContainers.volumeMounts.withSubPath","text":"<pre><code>withSubPath(subPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specinitcontainersvolumemountswithsubpathexpr","title":"fn spec.initContainers.volumeMounts.withSubPathExpr","text":"<pre><code>withSubPathExpr(subPathExpr)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckes","title":"obj spec.kes","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithannotations","title":"fn spec.kes.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithannotationsmixin","title":"fn spec.kes.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithenv","title":"fn spec.kes.withEnv","text":"<pre><code>withEnv(env)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithenvmixin","title":"fn spec.kes.withEnvMixin","text":"<pre><code>withEnvMixin(env)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithgcpcredentialsecretname","title":"fn spec.kes.withGcpCredentialSecretName","text":"<pre><code>withGcpCredentialSecretName(gcpCredentialSecretName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithgcpworkloadidentitypool","title":"fn spec.kes.withGcpWorkloadIdentityPool","text":"<pre><code>withGcpWorkloadIdentityPool(gcpWorkloadIdentityPool)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithimage","title":"fn spec.kes.withImage","text":"<pre><code>withImage(image)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithimagepullpolicy","title":"fn spec.kes.withImagePullPolicy","text":"<pre><code>withImagePullPolicy(imagePullPolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithkeyname","title":"fn spec.kes.withKeyName","text":"<pre><code>withKeyName(keyName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithlabels","title":"fn spec.kes.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithlabelsmixin","title":"fn spec.kes.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithnodeselector","title":"fn spec.kes.withNodeSelector","text":"<pre><code>withNodeSelector(nodeSelector)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithnodeselectormixin","title":"fn spec.kes.withNodeSelectorMixin","text":"<pre><code>withNodeSelectorMixin(nodeSelector)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithreplicas","title":"fn spec.kes.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithserviceaccountname","title":"fn spec.kes.withServiceAccountName","text":"<pre><code>withServiceAccountName(serviceAccountName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithtolerations","title":"fn spec.kes.withTolerations","text":"<pre><code>withTolerations(tolerations)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithtolerationsmixin","title":"fn spec.kes.withTolerationsMixin","text":"<pre><code>withTolerationsMixin(tolerations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithtopologyspreadconstraints","title":"fn spec.kes.withTopologySpreadConstraints","text":"<pre><code>withTopologySpreadConstraints(topologySpreadConstraints)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeswithtopologyspreadconstraintsmixin","title":"fn spec.kes.withTopologySpreadConstraintsMixin","text":"<pre><code>withTopologySpreadConstraintsMixin(topologySpreadConstraints)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinity","title":"obj spec.kes.affinity","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitynodeaffinity","title":"obj spec.kes.affinity.nodeAffinity","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinitywithpreferredduringschedulingignoredduringexecution","title":"fn spec.kes.affinity.nodeAffinity.withPreferredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinitywithpreferredduringschedulingignoredduringexecutionmixin","title":"fn spec.kes.affinity.nodeAffinity.withPreferredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecution","title":"obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionwithweight","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreference","title":"obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchexpressions","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchexpressionsmixin","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchfields","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchFields","text":"<pre><code>withMatchFields(matchFields)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchfieldsmixin","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchFieldsMixin","text":"<pre><code>withMatchFieldsMixin(matchFields)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressions","title":"obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithkey","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithoperator","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithvalues","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfields","title":"obj spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithkey","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithoperator","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithvalues","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithvaluesmixin","title":"fn spec.kes.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecution","title":"obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionwithnodeselectorterms","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNodeSelectorTerms","text":"<pre><code>withNodeSelectorTerms(nodeSelectorTerms)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionwithnodeselectortermsmixin","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNodeSelectorTermsMixin","text":"<pre><code>withNodeSelectorTermsMixin(nodeSelectorTerms)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectorterms","title":"obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchexpressions","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchexpressionsmixin","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchfields","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchFields","text":"<pre><code>withMatchFields(matchFields)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchfieldsmixin","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchFieldsMixin","text":"<pre><code>withMatchFieldsMixin(matchFields)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressions","title":"obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithkey","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithoperator","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithvalues","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfields","title":"obj spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithkey","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithoperator","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithvalues","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithvaluesmixin","title":"fn spec.kes.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodaffinity","title":"obj spec.kes.affinity.podAffinity","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitywithpreferredduringschedulingignoredduringexecution","title":"fn spec.kes.affinity.podAffinity.withPreferredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitywithpreferredduringschedulingignoredduringexecutionmixin","title":"fn spec.kes.affinity.podAffinity.withPreferredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitywithrequiredduringschedulingignoredduringexecution","title":"fn spec.kes.affinity.podAffinity.withRequiredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitywithrequiredduringschedulingignoredduringexecutionmixin","title":"fn spec.kes.affinity.podAffinity.withRequiredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecution","title":"obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionwithweight","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinityterm","title":"obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeys","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeysmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeys","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeysmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespaces","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespacesmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithtopologykey","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselector","title":"obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabels","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressions","title":"obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselector","title":"obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabels","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressions","title":"obj spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecution","title":"obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeys","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeysmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeys","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeysmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithnamespaces","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithnamespacesmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithtopologykey","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselector","title":"obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabels","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressions","title":"obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselector","title":"obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabels","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressions","title":"obj spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodantiaffinity","title":"obj spec.kes.affinity.podAntiAffinity","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitywithpreferredduringschedulingignoredduringexecution","title":"fn spec.kes.affinity.podAntiAffinity.withPreferredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitywithpreferredduringschedulingignoredduringexecutionmixin","title":"fn spec.kes.affinity.podAntiAffinity.withPreferredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitywithrequiredduringschedulingignoredduringexecution","title":"fn spec.kes.affinity.podAntiAffinity.withRequiredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitywithrequiredduringschedulingignoredduringexecutionmixin","title":"fn spec.kes.affinity.podAntiAffinity.withRequiredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecution","title":"obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionwithweight","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinityterm","title":"obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeys","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeysmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeys","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeysmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespaces","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespacesmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithtopologykey","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselector","title":"obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabels","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressions","title":"obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselector","title":"obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabels","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressions","title":"obj spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecution","title":"obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeys","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeysmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeys","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeysmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithnamespaces","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithnamespacesmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithtopologykey","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselector","title":"obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabels","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressions","title":"obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselector","title":"obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressions","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabels","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabelsmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressions","title":"obj spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithkey","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithoperator","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvalues","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesclientcertsecret","title":"obj spec.kes.clientCertSecret","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesclientcertsecretwithname","title":"fn spec.kes.clientCertSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesclientcertsecretwithtype","title":"fn spec.kes.clientCertSecret.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckescontainersecuritycontext","title":"obj spec.kes.containerSecurityContext","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextwithallowprivilegeescalation","title":"fn spec.kes.containerSecurityContext.withAllowPrivilegeEscalation","text":"<pre><code>withAllowPrivilegeEscalation(allowPrivilegeEscalation)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextwithprivileged","title":"fn spec.kes.containerSecurityContext.withPrivileged","text":"<pre><code>withPrivileged(privileged)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextwithprocmount","title":"fn spec.kes.containerSecurityContext.withProcMount","text":"<pre><code>withProcMount(procMount)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextwithreadonlyrootfilesystem","title":"fn spec.kes.containerSecurityContext.withReadOnlyRootFilesystem","text":"<pre><code>withReadOnlyRootFilesystem(readOnlyRootFilesystem)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextwithrunasgroup","title":"fn spec.kes.containerSecurityContext.withRunAsGroup","text":"<pre><code>withRunAsGroup(runAsGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextwithrunasnonroot","title":"fn spec.kes.containerSecurityContext.withRunAsNonRoot","text":"<pre><code>withRunAsNonRoot(runAsNonRoot)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextwithrunasuser","title":"fn spec.kes.containerSecurityContext.withRunAsUser","text":"<pre><code>withRunAsUser(runAsUser)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckescontainersecuritycontextapparmorprofile","title":"obj spec.kes.containerSecurityContext.appArmorProfile","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextapparmorprofilewithlocalhostprofile","title":"fn spec.kes.containerSecurityContext.appArmorProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextapparmorprofilewithtype","title":"fn spec.kes.containerSecurityContext.appArmorProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckescontainersecuritycontextcapabilities","title":"obj spec.kes.containerSecurityContext.capabilities","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextcapabilitieswithadd","title":"fn spec.kes.containerSecurityContext.capabilities.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextcapabilitieswithaddmixin","title":"fn spec.kes.containerSecurityContext.capabilities.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextcapabilitieswithdrop","title":"fn spec.kes.containerSecurityContext.capabilities.withDrop","text":"<pre><code>withDrop(drop)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextcapabilitieswithdropmixin","title":"fn spec.kes.containerSecurityContext.capabilities.withDropMixin","text":"<pre><code>withDropMixin(drop)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckescontainersecuritycontextselinuxoptions","title":"obj spec.kes.containerSecurityContext.seLinuxOptions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextselinuxoptionswithlevel","title":"fn spec.kes.containerSecurityContext.seLinuxOptions.withLevel","text":"<pre><code>withLevel(level)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextselinuxoptionswithrole","title":"fn spec.kes.containerSecurityContext.seLinuxOptions.withRole","text":"<pre><code>withRole(role)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextselinuxoptionswithtype","title":"fn spec.kes.containerSecurityContext.seLinuxOptions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextselinuxoptionswithuser","title":"fn spec.kes.containerSecurityContext.seLinuxOptions.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckescontainersecuritycontextseccompprofile","title":"obj spec.kes.containerSecurityContext.seccompProfile","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextseccompprofilewithlocalhostprofile","title":"fn spec.kes.containerSecurityContext.seccompProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextseccompprofilewithtype","title":"fn spec.kes.containerSecurityContext.seccompProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckescontainersecuritycontextwindowsoptions","title":"obj spec.kes.containerSecurityContext.windowsOptions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextwindowsoptionswithgmsacredentialspec","title":"fn spec.kes.containerSecurityContext.windowsOptions.withGmsaCredentialSpec","text":"<pre><code>withGmsaCredentialSpec(gmsaCredentialSpec)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextwindowsoptionswithgmsacredentialspecname","title":"fn spec.kes.containerSecurityContext.windowsOptions.withGmsaCredentialSpecName","text":"<pre><code>withGmsaCredentialSpecName(gmsaCredentialSpecName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextwindowsoptionswithhostprocess","title":"fn spec.kes.containerSecurityContext.windowsOptions.withHostProcess","text":"<pre><code>withHostProcess(hostProcess)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckescontainersecuritycontextwindowsoptionswithrunasusername","title":"fn spec.kes.containerSecurityContext.windowsOptions.withRunAsUserName","text":"<pre><code>withRunAsUserName(runAsUserName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesenv","title":"obj spec.kes.env","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesenvwithname","title":"fn spec.kes.env.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesenvwithvalue","title":"fn spec.kes.env.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesenvvaluefrom","title":"obj spec.kes.env.valueFrom","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesenvvaluefromconfigmapkeyref","title":"obj spec.kes.env.valueFrom.configMapKeyRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesenvvaluefromconfigmapkeyrefwithkey","title":"fn spec.kes.env.valueFrom.configMapKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesenvvaluefromconfigmapkeyrefwithname","title":"fn spec.kes.env.valueFrom.configMapKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesenvvaluefromconfigmapkeyrefwithoptional","title":"fn spec.kes.env.valueFrom.configMapKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesenvvaluefromfieldref","title":"obj spec.kes.env.valueFrom.fieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesenvvaluefromfieldrefwithapiversion","title":"fn spec.kes.env.valueFrom.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesenvvaluefromfieldrefwithfieldpath","title":"fn spec.kes.env.valueFrom.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesenvvaluefromresourcefieldref","title":"obj spec.kes.env.valueFrom.resourceFieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesenvvaluefromresourcefieldrefwithcontainername","title":"fn spec.kes.env.valueFrom.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesenvvaluefromresourcefieldrefwithdivisor","title":"fn spec.kes.env.valueFrom.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesenvvaluefromresourcefieldrefwithresource","title":"fn spec.kes.env.valueFrom.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesenvvaluefromsecretkeyref","title":"obj spec.kes.env.valueFrom.secretKeyRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesenvvaluefromsecretkeyrefwithkey","title":"fn spec.kes.env.valueFrom.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesenvvaluefromsecretkeyrefwithname","title":"fn spec.kes.env.valueFrom.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesenvvaluefromsecretkeyrefwithoptional","title":"fn spec.kes.env.valueFrom.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesexternalcertsecret","title":"obj spec.kes.externalCertSecret","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesexternalcertsecretwithname","title":"fn spec.kes.externalCertSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesexternalcertsecretwithtype","title":"fn spec.kes.externalCertSecret.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckeskessecret","title":"obj spec.kes.kesSecret","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckeskessecretwithname","title":"fn spec.kes.kesSecret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesresources","title":"obj spec.kes.resources","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesresourceswithclaims","title":"fn spec.kes.resources.withClaims","text":"<pre><code>withClaims(claims)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesresourceswithclaimsmixin","title":"fn spec.kes.resources.withClaimsMixin","text":"<pre><code>withClaimsMixin(claims)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesresourceswithlimits","title":"fn spec.kes.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesresourceswithlimitsmixin","title":"fn spec.kes.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesresourceswithrequests","title":"fn spec.kes.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesresourceswithrequestsmixin","title":"fn spec.kes.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckesresourcesclaims","title":"obj spec.kes.resources.claims","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckesresourcesclaimswithname","title":"fn spec.kes.resources.claims.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckessecuritycontext","title":"obj spec.kes.securityContext","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextwithfsgroup","title":"fn spec.kes.securityContext.withFsGroup","text":"<pre><code>withFsGroup(fsGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextwithfsgroupchangepolicy","title":"fn spec.kes.securityContext.withFsGroupChangePolicy","text":"<pre><code>withFsGroupChangePolicy(fsGroupChangePolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextwithrunasgroup","title":"fn spec.kes.securityContext.withRunAsGroup","text":"<pre><code>withRunAsGroup(runAsGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextwithrunasnonroot","title":"fn spec.kes.securityContext.withRunAsNonRoot","text":"<pre><code>withRunAsNonRoot(runAsNonRoot)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextwithrunasuser","title":"fn spec.kes.securityContext.withRunAsUser","text":"<pre><code>withRunAsUser(runAsUser)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextwithsupplementalgroups","title":"fn spec.kes.securityContext.withSupplementalGroups","text":"<pre><code>withSupplementalGroups(supplementalGroups)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextwithsupplementalgroupsmixin","title":"fn spec.kes.securityContext.withSupplementalGroupsMixin","text":"<pre><code>withSupplementalGroupsMixin(supplementalGroups)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextwithsysctls","title":"fn spec.kes.securityContext.withSysctls","text":"<pre><code>withSysctls(sysctls)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextwithsysctlsmixin","title":"fn spec.kes.securityContext.withSysctlsMixin","text":"<pre><code>withSysctlsMixin(sysctls)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckessecuritycontextapparmorprofile","title":"obj spec.kes.securityContext.appArmorProfile","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextapparmorprofilewithlocalhostprofile","title":"fn spec.kes.securityContext.appArmorProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextapparmorprofilewithtype","title":"fn spec.kes.securityContext.appArmorProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckessecuritycontextselinuxoptions","title":"obj spec.kes.securityContext.seLinuxOptions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextselinuxoptionswithlevel","title":"fn spec.kes.securityContext.seLinuxOptions.withLevel","text":"<pre><code>withLevel(level)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextselinuxoptionswithrole","title":"fn spec.kes.securityContext.seLinuxOptions.withRole","text":"<pre><code>withRole(role)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextselinuxoptionswithtype","title":"fn spec.kes.securityContext.seLinuxOptions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextselinuxoptionswithuser","title":"fn spec.kes.securityContext.seLinuxOptions.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckessecuritycontextseccompprofile","title":"obj spec.kes.securityContext.seccompProfile","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextseccompprofilewithlocalhostprofile","title":"fn spec.kes.securityContext.seccompProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextseccompprofilewithtype","title":"fn spec.kes.securityContext.seccompProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckessecuritycontextsysctls","title":"obj spec.kes.securityContext.sysctls","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextsysctlswithname","title":"fn spec.kes.securityContext.sysctls.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextsysctlswithvalue","title":"fn spec.kes.securityContext.sysctls.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckessecuritycontextwindowsoptions","title":"obj spec.kes.securityContext.windowsOptions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextwindowsoptionswithgmsacredentialspec","title":"fn spec.kes.securityContext.windowsOptions.withGmsaCredentialSpec","text":"<pre><code>withGmsaCredentialSpec(gmsaCredentialSpec)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextwindowsoptionswithgmsacredentialspecname","title":"fn spec.kes.securityContext.windowsOptions.withGmsaCredentialSpecName","text":"<pre><code>withGmsaCredentialSpecName(gmsaCredentialSpecName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextwindowsoptionswithhostprocess","title":"fn spec.kes.securityContext.windowsOptions.withHostProcess","text":"<pre><code>withHostProcess(hostProcess)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckessecuritycontextwindowsoptionswithrunasusername","title":"fn spec.kes.securityContext.windowsOptions.withRunAsUserName","text":"<pre><code>withRunAsUserName(runAsUserName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckestolerations","title":"obj spec.kes.tolerations","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestolerationswitheffect","title":"fn spec.kes.tolerations.withEffect","text":"<pre><code>withEffect(effect)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestolerationswithkey","title":"fn spec.kes.tolerations.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestolerationswithoperator","title":"fn spec.kes.tolerations.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestolerationswithtolerationseconds","title":"fn spec.kes.tolerations.withTolerationSeconds","text":"<pre><code>withTolerationSeconds(tolerationSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestolerationswithvalue","title":"fn spec.kes.tolerations.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckestopologyspreadconstraints","title":"obj spec.kes.topologySpreadConstraints","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithmatchlabelkeys","title":"fn spec.kes.topologySpreadConstraints.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithmatchlabelkeysmixin","title":"fn spec.kes.topologySpreadConstraints.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithmaxskew","title":"fn spec.kes.topologySpreadConstraints.withMaxSkew","text":"<pre><code>withMaxSkew(maxSkew)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithmindomains","title":"fn spec.kes.topologySpreadConstraints.withMinDomains","text":"<pre><code>withMinDomains(minDomains)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithnodeaffinitypolicy","title":"fn spec.kes.topologySpreadConstraints.withNodeAffinityPolicy","text":"<pre><code>withNodeAffinityPolicy(nodeAffinityPolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithnodetaintspolicy","title":"fn spec.kes.topologySpreadConstraints.withNodeTaintsPolicy","text":"<pre><code>withNodeTaintsPolicy(nodeTaintsPolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithtopologykey","title":"fn spec.kes.topologySpreadConstraints.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintswithwhenunsatisfiable","title":"fn spec.kes.topologySpreadConstraints.withWhenUnsatisfiable","text":"<pre><code>withWhenUnsatisfiable(whenUnsatisfiable)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckestopologyspreadconstraintslabelselector","title":"obj spec.kes.topologySpreadConstraints.labelSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectorwithmatchexpressions","title":"fn spec.kes.topologySpreadConstraints.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectorwithmatchexpressionsmixin","title":"fn spec.kes.topologySpreadConstraints.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectorwithmatchlabels","title":"fn spec.kes.topologySpreadConstraints.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectorwithmatchlabelsmixin","title":"fn spec.kes.topologySpreadConstraints.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speckestopologyspreadconstraintslabelselectormatchexpressions","title":"obj spec.kes.topologySpreadConstraints.labelSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectormatchexpressionswithkey","title":"fn spec.kes.topologySpreadConstraints.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectormatchexpressionswithoperator","title":"fn spec.kes.topologySpreadConstraints.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectormatchexpressionswithvalues","title":"fn spec.kes.topologySpreadConstraints.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speckestopologyspreadconstraintslabelselectormatchexpressionswithvaluesmixin","title":"fn spec.kes.topologySpreadConstraints.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclifecycle","title":"obj spec.lifecycle","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-speclifecyclepoststart","title":"obj spec.lifecycle.postStart","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-speclifecyclepoststartexec","title":"obj spec.lifecycle.postStart.exec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecyclepoststartexecwithcommand","title":"fn spec.lifecycle.postStart.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecyclepoststartexecwithcommandmixin","title":"fn spec.lifecycle.postStart.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclifecyclepoststarthttpget","title":"obj spec.lifecycle.postStart.httpGet","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecyclepoststarthttpgetwithhost","title":"fn spec.lifecycle.postStart.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecyclepoststarthttpgetwithhttpheaders","title":"fn spec.lifecycle.postStart.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecyclepoststarthttpgetwithhttpheadersmixin","title":"fn spec.lifecycle.postStart.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecyclepoststarthttpgetwithpath","title":"fn spec.lifecycle.postStart.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecyclepoststarthttpgetwithport","title":"fn spec.lifecycle.postStart.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecyclepoststarthttpgetwithscheme","title":"fn spec.lifecycle.postStart.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclifecyclepoststarthttpgethttpheaders","title":"obj spec.lifecycle.postStart.httpGet.httpHeaders","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecyclepoststarthttpgethttpheaderswithname","title":"fn spec.lifecycle.postStart.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecyclepoststarthttpgethttpheaderswithvalue","title":"fn spec.lifecycle.postStart.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclifecyclepoststartsleep","title":"obj spec.lifecycle.postStart.sleep","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecyclepoststartsleepwithseconds","title":"fn spec.lifecycle.postStart.sleep.withSeconds","text":"<pre><code>withSeconds(seconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclifecyclepoststarttcpsocket","title":"obj spec.lifecycle.postStart.tcpSocket","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecyclepoststarttcpsocketwithhost","title":"fn spec.lifecycle.postStart.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecyclepoststarttcpsocketwithport","title":"fn spec.lifecycle.postStart.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclifecycleprestop","title":"obj spec.lifecycle.preStop","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-speclifecycleprestopexec","title":"obj spec.lifecycle.preStop.exec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecycleprestopexecwithcommand","title":"fn spec.lifecycle.preStop.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecycleprestopexecwithcommandmixin","title":"fn spec.lifecycle.preStop.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclifecycleprestophttpget","title":"obj spec.lifecycle.preStop.httpGet","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecycleprestophttpgetwithhost","title":"fn spec.lifecycle.preStop.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecycleprestophttpgetwithhttpheaders","title":"fn spec.lifecycle.preStop.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecycleprestophttpgetwithhttpheadersmixin","title":"fn spec.lifecycle.preStop.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecycleprestophttpgetwithpath","title":"fn spec.lifecycle.preStop.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecycleprestophttpgetwithport","title":"fn spec.lifecycle.preStop.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecycleprestophttpgetwithscheme","title":"fn spec.lifecycle.preStop.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclifecycleprestophttpgethttpheaders","title":"obj spec.lifecycle.preStop.httpGet.httpHeaders","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecycleprestophttpgethttpheaderswithname","title":"fn spec.lifecycle.preStop.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecycleprestophttpgethttpheaderswithvalue","title":"fn spec.lifecycle.preStop.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclifecycleprestopsleep","title":"obj spec.lifecycle.preStop.sleep","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecycleprestopsleepwithseconds","title":"fn spec.lifecycle.preStop.sleep.withSeconds","text":"<pre><code>withSeconds(seconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclifecycleprestoptcpsocket","title":"obj spec.lifecycle.preStop.tcpSocket","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecycleprestoptcpsocketwithhost","title":"fn spec.lifecycle.preStop.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclifecycleprestoptcpsocketwithport","title":"fn spec.lifecycle.preStop.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specliveness","title":"obj spec.liveness","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesswithfailurethreshold","title":"fn spec.liveness.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesswithinitialdelayseconds","title":"fn spec.liveness.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesswithperiodseconds","title":"fn spec.liveness.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesswithsuccessthreshold","title":"fn spec.liveness.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesswithterminationgraceperiodseconds","title":"fn spec.liveness.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesswithtimeoutseconds","title":"fn spec.liveness.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclivenessexec","title":"obj spec.liveness.exec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenessexecwithcommand","title":"fn spec.liveness.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenessexecwithcommandmixin","title":"fn spec.liveness.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclivenessgrpc","title":"obj spec.liveness.grpc","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenessgrpcwithport","title":"fn spec.liveness.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenessgrpcwithservice","title":"fn spec.liveness.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclivenesshttpget","title":"obj spec.liveness.httpGet","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesshttpgetwithhost","title":"fn spec.liveness.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesshttpgetwithhttpheaders","title":"fn spec.liveness.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesshttpgetwithhttpheadersmixin","title":"fn spec.liveness.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesshttpgetwithpath","title":"fn spec.liveness.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesshttpgetwithport","title":"fn spec.liveness.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesshttpgetwithscheme","title":"fn spec.liveness.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclivenesshttpgethttpheaders","title":"obj spec.liveness.httpGet.httpHeaders","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesshttpgethttpheaderswithname","title":"fn spec.liveness.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesshttpgethttpheaderswithvalue","title":"fn spec.liveness.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclivenesstcpsocket","title":"obj spec.liveness.tcpSocket","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesstcpsocketwithhost","title":"fn spec.liveness.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-speclivenesstcpsocketwithport","title":"fn spec.liveness.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-speclogging","title":"obj spec.logging","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specloggingwithanonymous","title":"fn spec.logging.withAnonymous","text":"<pre><code>withAnonymous(anonymous)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specloggingwithjson","title":"fn spec.logging.withJson","text":"<pre><code>withJson(json)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specloggingwithquiet","title":"fn spec.logging.withQuiet","text":"<pre><code>withQuiet(quiet)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpools","title":"obj spec.pools","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolswithannotations","title":"fn spec.pools.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolswithannotationsmixin","title":"fn spec.pools.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolswithlabels","title":"fn spec.pools.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolswithlabelsmixin","title":"fn spec.pools.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolswithname","title":"fn spec.pools.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolswithnodeselector","title":"fn spec.pools.withNodeSelector","text":"<pre><code>withNodeSelector(nodeSelector)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolswithnodeselectormixin","title":"fn spec.pools.withNodeSelectorMixin","text":"<pre><code>withNodeSelectorMixin(nodeSelector)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolswithruntimeclassname","title":"fn spec.pools.withRuntimeClassName","text":"<pre><code>withRuntimeClassName(runtimeClassName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolswithservers","title":"fn spec.pools.withServers","text":"<pre><code>withServers(servers)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolswithtolerations","title":"fn spec.pools.withTolerations","text":"<pre><code>withTolerations(tolerations)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolswithtolerationsmixin","title":"fn spec.pools.withTolerationsMixin","text":"<pre><code>withTolerationsMixin(tolerations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolswithtopologyspreadconstraints","title":"fn spec.pools.withTopologySpreadConstraints","text":"<pre><code>withTopologySpreadConstraints(topologySpreadConstraints)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolswithtopologyspreadconstraintsmixin","title":"fn spec.pools.withTopologySpreadConstraintsMixin","text":"<pre><code>withTopologySpreadConstraintsMixin(topologySpreadConstraints)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolswithvolumesperserver","title":"fn spec.pools.withVolumesPerServer","text":"<pre><code>withVolumesPerServer(volumesPerServer)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinity","title":"obj spec.pools.affinity","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinity","title":"obj spec.pools.affinity.nodeAffinity","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitywithpreferredduringschedulingignoredduringexecution","title":"fn spec.pools.affinity.nodeAffinity.withPreferredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitywithpreferredduringschedulingignoredduringexecutionmixin","title":"fn spec.pools.affinity.nodeAffinity.withPreferredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecution","title":"obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionwithweight","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreference","title":"obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchexpressions","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchexpressionsmixin","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchfields","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchFields","text":"<pre><code>withMatchFields(matchFields)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencewithmatchfieldsmixin","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.withMatchFieldsMixin","text":"<pre><code>withMatchFieldsMixin(matchFields)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressions","title":"obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithkey","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithoperator","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithvalues","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfields","title":"obj spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithkey","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithoperator","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithvalues","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionpreferencematchfieldswithvaluesmixin","title":"fn spec.pools.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecution","title":"obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionwithnodeselectorterms","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNodeSelectorTerms","text":"<pre><code>withNodeSelectorTerms(nodeSelectorTerms)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionwithnodeselectortermsmixin","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNodeSelectorTermsMixin","text":"<pre><code>withNodeSelectorTermsMixin(nodeSelectorTerms)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectorterms","title":"obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchexpressions","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchexpressionsmixin","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchfields","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchFields","text":"<pre><code>withMatchFields(matchFields)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermswithmatchfieldsmixin","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.withMatchFieldsMixin","text":"<pre><code>withMatchFieldsMixin(matchFields)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressions","title":"obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithkey","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithoperator","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithvalues","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfields","title":"obj spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithkey","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithoperator","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithvalues","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsmatchfieldswithvaluesmixin","title":"fn spec.pools.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodaffinity","title":"obj spec.pools.affinity.podAffinity","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitywithpreferredduringschedulingignoredduringexecution","title":"fn spec.pools.affinity.podAffinity.withPreferredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitywithpreferredduringschedulingignoredduringexecutionmixin","title":"fn spec.pools.affinity.podAffinity.withPreferredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitywithrequiredduringschedulingignoredduringexecution","title":"fn spec.pools.affinity.podAffinity.withRequiredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitywithrequiredduringschedulingignoredduringexecutionmixin","title":"fn spec.pools.affinity.podAffinity.withRequiredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecution","title":"obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionwithweight","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinityterm","title":"obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeys","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeysmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeys","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeysmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespaces","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespacesmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithtopologykey","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselector","title":"obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabels","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressions","title":"obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselector","title":"obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabels","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressions","title":"obj spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecution","title":"obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeys","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeysmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeys","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeysmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithnamespaces","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithnamespacesmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionwithtopologykey","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselector","title":"obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabels","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressions","title":"obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselector","title":"obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabels","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressions","title":"obj spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinity","title":"obj spec.pools.affinity.podAntiAffinity","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitywithpreferredduringschedulingignoredduringexecution","title":"fn spec.pools.affinity.podAntiAffinity.withPreferredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitywithpreferredduringschedulingignoredduringexecutionmixin","title":"fn spec.pools.affinity.podAntiAffinity.withPreferredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withPreferredDuringSchedulingIgnoredDuringExecutionMixin(preferredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitywithrequiredduringschedulingignoredduringexecution","title":"fn spec.pools.affinity.podAntiAffinity.withRequiredDuringSchedulingIgnoredDuringExecution","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecution(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitywithrequiredduringschedulingignoredduringexecutionmixin","title":"fn spec.pools.affinity.podAntiAffinity.withRequiredDuringSchedulingIgnoredDuringExecutionMixin","text":"<pre><code>withRequiredDuringSchedulingIgnoredDuringExecutionMixin(requiredDuringSchedulingIgnoredDuringExecution)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecution","title":"obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionwithweight","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinityterm","title":"obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeys","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmatchlabelkeysmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeys","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithmismatchlabelkeysmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespaces","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithnamespacesmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermwithtopologykey","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselector","title":"obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabels","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressions","title":"obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselector","title":"obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabels","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressions","title":"obj spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionpodaffinitytermnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecution","title":"obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeys","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmatchlabelkeysmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeys","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeys","text":"<pre><code>withMismatchLabelKeys(mismatchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithmismatchlabelkeysmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withMismatchLabelKeysMixin","text":"<pre><code>withMismatchLabelKeysMixin(mismatchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithnamespaces","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithnamespacesmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionwithtopologykey","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselector","title":"obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabels","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressions","title":"obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionlabelselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselector","title":"obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressions","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchexpressionsmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabels","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectorwithmatchlabelsmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressions","title":"obj spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithkey","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithoperator","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvalues","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionnamespaceselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaceSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolscontainersecuritycontext","title":"obj spec.pools.containerSecurityContext","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwithallowprivilegeescalation","title":"fn spec.pools.containerSecurityContext.withAllowPrivilegeEscalation","text":"<pre><code>withAllowPrivilegeEscalation(allowPrivilegeEscalation)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwithprivileged","title":"fn spec.pools.containerSecurityContext.withPrivileged","text":"<pre><code>withPrivileged(privileged)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwithprocmount","title":"fn spec.pools.containerSecurityContext.withProcMount","text":"<pre><code>withProcMount(procMount)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwithreadonlyrootfilesystem","title":"fn spec.pools.containerSecurityContext.withReadOnlyRootFilesystem","text":"<pre><code>withReadOnlyRootFilesystem(readOnlyRootFilesystem)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwithrunasgroup","title":"fn spec.pools.containerSecurityContext.withRunAsGroup","text":"<pre><code>withRunAsGroup(runAsGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwithrunasnonroot","title":"fn spec.pools.containerSecurityContext.withRunAsNonRoot","text":"<pre><code>withRunAsNonRoot(runAsNonRoot)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwithrunasuser","title":"fn spec.pools.containerSecurityContext.withRunAsUser","text":"<pre><code>withRunAsUser(runAsUser)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolscontainersecuritycontextapparmorprofile","title":"obj spec.pools.containerSecurityContext.appArmorProfile","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextapparmorprofilewithlocalhostprofile","title":"fn spec.pools.containerSecurityContext.appArmorProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextapparmorprofilewithtype","title":"fn spec.pools.containerSecurityContext.appArmorProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolscontainersecuritycontextcapabilities","title":"obj spec.pools.containerSecurityContext.capabilities","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextcapabilitieswithadd","title":"fn spec.pools.containerSecurityContext.capabilities.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextcapabilitieswithaddmixin","title":"fn spec.pools.containerSecurityContext.capabilities.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextcapabilitieswithdrop","title":"fn spec.pools.containerSecurityContext.capabilities.withDrop","text":"<pre><code>withDrop(drop)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextcapabilitieswithdropmixin","title":"fn spec.pools.containerSecurityContext.capabilities.withDropMixin","text":"<pre><code>withDropMixin(drop)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolscontainersecuritycontextselinuxoptions","title":"obj spec.pools.containerSecurityContext.seLinuxOptions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextselinuxoptionswithlevel","title":"fn spec.pools.containerSecurityContext.seLinuxOptions.withLevel","text":"<pre><code>withLevel(level)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextselinuxoptionswithrole","title":"fn spec.pools.containerSecurityContext.seLinuxOptions.withRole","text":"<pre><code>withRole(role)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextselinuxoptionswithtype","title":"fn spec.pools.containerSecurityContext.seLinuxOptions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextselinuxoptionswithuser","title":"fn spec.pools.containerSecurityContext.seLinuxOptions.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolscontainersecuritycontextseccompprofile","title":"obj spec.pools.containerSecurityContext.seccompProfile","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextseccompprofilewithlocalhostprofile","title":"fn spec.pools.containerSecurityContext.seccompProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextseccompprofilewithtype","title":"fn spec.pools.containerSecurityContext.seccompProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolscontainersecuritycontextwindowsoptions","title":"obj spec.pools.containerSecurityContext.windowsOptions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwindowsoptionswithgmsacredentialspec","title":"fn spec.pools.containerSecurityContext.windowsOptions.withGmsaCredentialSpec","text":"<pre><code>withGmsaCredentialSpec(gmsaCredentialSpec)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwindowsoptionswithgmsacredentialspecname","title":"fn spec.pools.containerSecurityContext.windowsOptions.withGmsaCredentialSpecName","text":"<pre><code>withGmsaCredentialSpecName(gmsaCredentialSpecName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwindowsoptionswithhostprocess","title":"fn spec.pools.containerSecurityContext.windowsOptions.withHostProcess","text":"<pre><code>withHostProcess(hostProcess)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolscontainersecuritycontextwindowsoptionswithrunasusername","title":"fn spec.pools.containerSecurityContext.windowsOptions.withRunAsUserName","text":"<pre><code>withRunAsUserName(runAsUserName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsresources","title":"obj spec.pools.resources","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsresourceswithclaims","title":"fn spec.pools.resources.withClaims","text":"<pre><code>withClaims(claims)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsresourceswithclaimsmixin","title":"fn spec.pools.resources.withClaimsMixin","text":"<pre><code>withClaimsMixin(claims)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsresourceswithlimits","title":"fn spec.pools.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsresourceswithlimitsmixin","title":"fn spec.pools.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsresourceswithrequests","title":"fn spec.pools.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsresourceswithrequestsmixin","title":"fn spec.pools.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsresourcesclaims","title":"obj spec.pools.resources.claims","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsresourcesclaimswithname","title":"fn spec.pools.resources.claims.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolssecuritycontext","title":"obj spec.pools.securityContext","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextwithfsgroup","title":"fn spec.pools.securityContext.withFsGroup","text":"<pre><code>withFsGroup(fsGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextwithfsgroupchangepolicy","title":"fn spec.pools.securityContext.withFsGroupChangePolicy","text":"<pre><code>withFsGroupChangePolicy(fsGroupChangePolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextwithrunasgroup","title":"fn spec.pools.securityContext.withRunAsGroup","text":"<pre><code>withRunAsGroup(runAsGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextwithrunasnonroot","title":"fn spec.pools.securityContext.withRunAsNonRoot","text":"<pre><code>withRunAsNonRoot(runAsNonRoot)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextwithrunasuser","title":"fn spec.pools.securityContext.withRunAsUser","text":"<pre><code>withRunAsUser(runAsUser)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextwithsupplementalgroups","title":"fn spec.pools.securityContext.withSupplementalGroups","text":"<pre><code>withSupplementalGroups(supplementalGroups)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextwithsupplementalgroupsmixin","title":"fn spec.pools.securityContext.withSupplementalGroupsMixin","text":"<pre><code>withSupplementalGroupsMixin(supplementalGroups)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextwithsysctls","title":"fn spec.pools.securityContext.withSysctls","text":"<pre><code>withSysctls(sysctls)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextwithsysctlsmixin","title":"fn spec.pools.securityContext.withSysctlsMixin","text":"<pre><code>withSysctlsMixin(sysctls)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolssecuritycontextapparmorprofile","title":"obj spec.pools.securityContext.appArmorProfile","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextapparmorprofilewithlocalhostprofile","title":"fn spec.pools.securityContext.appArmorProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextapparmorprofilewithtype","title":"fn spec.pools.securityContext.appArmorProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolssecuritycontextselinuxoptions","title":"obj spec.pools.securityContext.seLinuxOptions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextselinuxoptionswithlevel","title":"fn spec.pools.securityContext.seLinuxOptions.withLevel","text":"<pre><code>withLevel(level)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextselinuxoptionswithrole","title":"fn spec.pools.securityContext.seLinuxOptions.withRole","text":"<pre><code>withRole(role)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextselinuxoptionswithtype","title":"fn spec.pools.securityContext.seLinuxOptions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextselinuxoptionswithuser","title":"fn spec.pools.securityContext.seLinuxOptions.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolssecuritycontextseccompprofile","title":"obj spec.pools.securityContext.seccompProfile","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextseccompprofilewithlocalhostprofile","title":"fn spec.pools.securityContext.seccompProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextseccompprofilewithtype","title":"fn spec.pools.securityContext.seccompProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolssecuritycontextsysctls","title":"obj spec.pools.securityContext.sysctls","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextsysctlswithname","title":"fn spec.pools.securityContext.sysctls.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextsysctlswithvalue","title":"fn spec.pools.securityContext.sysctls.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolssecuritycontextwindowsoptions","title":"obj spec.pools.securityContext.windowsOptions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextwindowsoptionswithgmsacredentialspec","title":"fn spec.pools.securityContext.windowsOptions.withGmsaCredentialSpec","text":"<pre><code>withGmsaCredentialSpec(gmsaCredentialSpec)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextwindowsoptionswithgmsacredentialspecname","title":"fn spec.pools.securityContext.windowsOptions.withGmsaCredentialSpecName","text":"<pre><code>withGmsaCredentialSpecName(gmsaCredentialSpecName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextwindowsoptionswithhostprocess","title":"fn spec.pools.securityContext.windowsOptions.withHostProcess","text":"<pre><code>withHostProcess(hostProcess)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolssecuritycontextwindowsoptionswithrunasusername","title":"fn spec.pools.securityContext.windowsOptions.withRunAsUserName","text":"<pre><code>withRunAsUserName(runAsUserName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolstolerations","title":"obj spec.pools.tolerations","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstolerationswitheffect","title":"fn spec.pools.tolerations.withEffect","text":"<pre><code>withEffect(effect)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstolerationswithkey","title":"fn spec.pools.tolerations.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstolerationswithoperator","title":"fn spec.pools.tolerations.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstolerationswithtolerationseconds","title":"fn spec.pools.tolerations.withTolerationSeconds","text":"<pre><code>withTolerationSeconds(tolerationSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstolerationswithvalue","title":"fn spec.pools.tolerations.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolstopologyspreadconstraints","title":"obj spec.pools.topologySpreadConstraints","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithmatchlabelkeys","title":"fn spec.pools.topologySpreadConstraints.withMatchLabelKeys","text":"<pre><code>withMatchLabelKeys(matchLabelKeys)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithmatchlabelkeysmixin","title":"fn spec.pools.topologySpreadConstraints.withMatchLabelKeysMixin","text":"<pre><code>withMatchLabelKeysMixin(matchLabelKeys)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithmaxskew","title":"fn spec.pools.topologySpreadConstraints.withMaxSkew","text":"<pre><code>withMaxSkew(maxSkew)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithmindomains","title":"fn spec.pools.topologySpreadConstraints.withMinDomains","text":"<pre><code>withMinDomains(minDomains)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithnodeaffinitypolicy","title":"fn spec.pools.topologySpreadConstraints.withNodeAffinityPolicy","text":"<pre><code>withNodeAffinityPolicy(nodeAffinityPolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithnodetaintspolicy","title":"fn spec.pools.topologySpreadConstraints.withNodeTaintsPolicy","text":"<pre><code>withNodeTaintsPolicy(nodeTaintsPolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithtopologykey","title":"fn spec.pools.topologySpreadConstraints.withTopologyKey","text":"<pre><code>withTopologyKey(topologyKey)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintswithwhenunsatisfiable","title":"fn spec.pools.topologySpreadConstraints.withWhenUnsatisfiable","text":"<pre><code>withWhenUnsatisfiable(whenUnsatisfiable)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolstopologyspreadconstraintslabelselector","title":"obj spec.pools.topologySpreadConstraints.labelSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectorwithmatchexpressions","title":"fn spec.pools.topologySpreadConstraints.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectorwithmatchexpressionsmixin","title":"fn spec.pools.topologySpreadConstraints.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectorwithmatchlabels","title":"fn spec.pools.topologySpreadConstraints.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectorwithmatchlabelsmixin","title":"fn spec.pools.topologySpreadConstraints.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolstopologyspreadconstraintslabelselectormatchexpressions","title":"obj spec.pools.topologySpreadConstraints.labelSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectormatchexpressionswithkey","title":"fn spec.pools.topologySpreadConstraints.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectormatchexpressionswithoperator","title":"fn spec.pools.topologySpreadConstraints.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectormatchexpressionswithvalues","title":"fn spec.pools.topologySpreadConstraints.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolstopologyspreadconstraintslabelselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.topologySpreadConstraints.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplate","title":"obj spec.pools.volumeClaimTemplate","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatewithapiversion","title":"fn spec.pools.volumeClaimTemplate.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatewithkind","title":"fn spec.pools.volumeClaimTemplate.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplatemetadata","title":"obj spec.pools.volumeClaimTemplate.metadata","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithannotations","title":"fn spec.pools.volumeClaimTemplate.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithannotationsmixin","title":"fn spec.pools.volumeClaimTemplate.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithfinalizers","title":"fn spec.pools.volumeClaimTemplate.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithfinalizersmixin","title":"fn spec.pools.volumeClaimTemplate.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithlabels","title":"fn spec.pools.volumeClaimTemplate.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithlabelsmixin","title":"fn spec.pools.volumeClaimTemplate.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithname","title":"fn spec.pools.volumeClaimTemplate.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatemetadatawithnamespace","title":"fn spec.pools.volumeClaimTemplate.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplatespec","title":"obj spec.pools.volumeClaimTemplate.spec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecwithaccessmodes","title":"fn spec.pools.volumeClaimTemplate.spec.withAccessModes","text":"<pre><code>withAccessModes(accessModes)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecwithaccessmodesmixin","title":"fn spec.pools.volumeClaimTemplate.spec.withAccessModesMixin","text":"<pre><code>withAccessModesMixin(accessModes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecwithstorageclassname","title":"fn spec.pools.volumeClaimTemplate.spec.withStorageClassName","text":"<pre><code>withStorageClassName(storageClassName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecwithvolumeattributesclassname","title":"fn spec.pools.volumeClaimTemplate.spec.withVolumeAttributesClassName","text":"<pre><code>withVolumeAttributesClassName(volumeAttributesClassName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecwithvolumemode","title":"fn spec.pools.volumeClaimTemplate.spec.withVolumeMode","text":"<pre><code>withVolumeMode(volumeMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecwithvolumename","title":"fn spec.pools.volumeClaimTemplate.spec.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplatespecdatasource","title":"obj spec.pools.volumeClaimTemplate.spec.dataSource","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecdatasourcewithapigroup","title":"fn spec.pools.volumeClaimTemplate.spec.dataSource.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecdatasourcewithkind","title":"fn spec.pools.volumeClaimTemplate.spec.dataSource.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecdatasourcewithname","title":"fn spec.pools.volumeClaimTemplate.spec.dataSource.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplatespecdatasourceref","title":"obj spec.pools.volumeClaimTemplate.spec.dataSourceRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecdatasourcerefwithapigroup","title":"fn spec.pools.volumeClaimTemplate.spec.dataSourceRef.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecdatasourcerefwithkind","title":"fn spec.pools.volumeClaimTemplate.spec.dataSourceRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecdatasourcerefwithname","title":"fn spec.pools.volumeClaimTemplate.spec.dataSourceRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecdatasourcerefwithnamespace","title":"fn spec.pools.volumeClaimTemplate.spec.dataSourceRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplatespecresources","title":"obj spec.pools.volumeClaimTemplate.spec.resources","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecresourceswithlimits","title":"fn spec.pools.volumeClaimTemplate.spec.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecresourceswithlimitsmixin","title":"fn spec.pools.volumeClaimTemplate.spec.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecresourceswithrequests","title":"fn spec.pools.volumeClaimTemplate.spec.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecresourceswithrequestsmixin","title":"fn spec.pools.volumeClaimTemplate.spec.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplatespecselector","title":"obj spec.pools.volumeClaimTemplate.spec.selector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectorwithmatchexpressions","title":"fn spec.pools.volumeClaimTemplate.spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectorwithmatchexpressionsmixin","title":"fn spec.pools.volumeClaimTemplate.spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectorwithmatchlabels","title":"fn spec.pools.volumeClaimTemplate.spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectorwithmatchlabelsmixin","title":"fn spec.pools.volumeClaimTemplate.spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specpoolsvolumeclaimtemplatespecselectormatchexpressions","title":"obj spec.pools.volumeClaimTemplate.spec.selector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectormatchexpressionswithkey","title":"fn spec.pools.volumeClaimTemplate.spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectormatchexpressionswithoperator","title":"fn spec.pools.volumeClaimTemplate.spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectormatchexpressionswithvalues","title":"fn spec.pools.volumeClaimTemplate.spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specpoolsvolumeclaimtemplatespecselectormatchexpressionswithvaluesmixin","title":"fn spec.pools.volumeClaimTemplate.spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specreadiness","title":"obj spec.readiness","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesswithfailurethreshold","title":"fn spec.readiness.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesswithinitialdelayseconds","title":"fn spec.readiness.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesswithperiodseconds","title":"fn spec.readiness.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesswithsuccessthreshold","title":"fn spec.readiness.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesswithterminationgraceperiodseconds","title":"fn spec.readiness.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesswithtimeoutseconds","title":"fn spec.readiness.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specreadinessexec","title":"obj spec.readiness.exec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinessexecwithcommand","title":"fn spec.readiness.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinessexecwithcommandmixin","title":"fn spec.readiness.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specreadinessgrpc","title":"obj spec.readiness.grpc","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinessgrpcwithport","title":"fn spec.readiness.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinessgrpcwithservice","title":"fn spec.readiness.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specreadinesshttpget","title":"obj spec.readiness.httpGet","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesshttpgetwithhost","title":"fn spec.readiness.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesshttpgetwithhttpheaders","title":"fn spec.readiness.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesshttpgetwithhttpheadersmixin","title":"fn spec.readiness.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesshttpgetwithpath","title":"fn spec.readiness.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesshttpgetwithport","title":"fn spec.readiness.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesshttpgetwithscheme","title":"fn spec.readiness.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specreadinesshttpgethttpheaders","title":"obj spec.readiness.httpGet.httpHeaders","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesshttpgethttpheaderswithname","title":"fn spec.readiness.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesshttpgethttpheaderswithvalue","title":"fn spec.readiness.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specreadinesstcpsocket","title":"obj spec.readiness.tcpSocket","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesstcpsocketwithhost","title":"fn spec.readiness.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specreadinesstcpsocketwithport","title":"fn spec.readiness.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specservicemetadata","title":"obj spec.serviceMetadata","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specservicemetadatawithconsoleserviceannotations","title":"fn spec.serviceMetadata.withConsoleServiceAnnotations","text":"<pre><code>withConsoleServiceAnnotations(consoleServiceAnnotations)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specservicemetadatawithconsoleserviceannotationsmixin","title":"fn spec.serviceMetadata.withConsoleServiceAnnotationsMixin","text":"<pre><code>withConsoleServiceAnnotationsMixin(consoleServiceAnnotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specservicemetadatawithconsoleservicelabels","title":"fn spec.serviceMetadata.withConsoleServiceLabels","text":"<pre><code>withConsoleServiceLabels(consoleServiceLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specservicemetadatawithconsoleservicelabelsmixin","title":"fn spec.serviceMetadata.withConsoleServiceLabelsMixin","text":"<pre><code>withConsoleServiceLabelsMixin(consoleServiceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specservicemetadatawithminioserviceannotations","title":"fn spec.serviceMetadata.withMinioServiceAnnotations","text":"<pre><code>withMinioServiceAnnotations(minioServiceAnnotations)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specservicemetadatawithminioserviceannotationsmixin","title":"fn spec.serviceMetadata.withMinioServiceAnnotationsMixin","text":"<pre><code>withMinioServiceAnnotationsMixin(minioServiceAnnotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specservicemetadatawithminioservicelabels","title":"fn spec.serviceMetadata.withMinioServiceLabels","text":"<pre><code>withMinioServiceLabels(minioServiceLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specservicemetadatawithminioservicelabelsmixin","title":"fn spec.serviceMetadata.withMinioServiceLabelsMixin","text":"<pre><code>withMinioServiceLabelsMixin(minioServiceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecars","title":"obj spec.sideCars","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarswithcontainers","title":"fn spec.sideCars.withContainers","text":"<pre><code>withContainers(containers)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarswithcontainersmixin","title":"fn spec.sideCars.withContainersMixin","text":"<pre><code>withContainersMixin(containers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarswithvolumeclaimtemplates","title":"fn spec.sideCars.withVolumeClaimTemplates","text":"<pre><code>withVolumeClaimTemplates(volumeClaimTemplates)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarswithvolumeclaimtemplatesmixin","title":"fn spec.sideCars.withVolumeClaimTemplatesMixin","text":"<pre><code>withVolumeClaimTemplatesMixin(volumeClaimTemplates)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarswithvolumes","title":"fn spec.sideCars.withVolumes","text":"<pre><code>withVolumes(volumes)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarswithvolumesmixin","title":"fn spec.sideCars.withVolumesMixin","text":"<pre><code>withVolumesMixin(volumes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainers","title":"obj spec.sideCars.containers","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithargs","title":"fn spec.sideCars.containers.withArgs","text":"<pre><code>withArgs(args)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithargsmixin","title":"fn spec.sideCars.containers.withArgsMixin","text":"<pre><code>withArgsMixin(args)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithcommand","title":"fn spec.sideCars.containers.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithcommandmixin","title":"fn spec.sideCars.containers.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithenv","title":"fn spec.sideCars.containers.withEnv","text":"<pre><code>withEnv(env)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithenvfrom","title":"fn spec.sideCars.containers.withEnvFrom","text":"<pre><code>withEnvFrom(envFrom)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithenvfrommixin","title":"fn spec.sideCars.containers.withEnvFromMixin","text":"<pre><code>withEnvFromMixin(envFrom)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithenvmixin","title":"fn spec.sideCars.containers.withEnvMixin","text":"<pre><code>withEnvMixin(env)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithimage","title":"fn spec.sideCars.containers.withImage","text":"<pre><code>withImage(image)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithimagepullpolicy","title":"fn spec.sideCars.containers.withImagePullPolicy","text":"<pre><code>withImagePullPolicy(imagePullPolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithname","title":"fn spec.sideCars.containers.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithports","title":"fn spec.sideCars.containers.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithportsmixin","title":"fn spec.sideCars.containers.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithresizepolicy","title":"fn spec.sideCars.containers.withResizePolicy","text":"<pre><code>withResizePolicy(resizePolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithresizepolicymixin","title":"fn spec.sideCars.containers.withResizePolicyMixin","text":"<pre><code>withResizePolicyMixin(resizePolicy)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithrestartpolicy","title":"fn spec.sideCars.containers.withRestartPolicy","text":"<pre><code>withRestartPolicy(restartPolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithstdin","title":"fn spec.sideCars.containers.withStdin","text":"<pre><code>withStdin(stdin)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithstdinonce","title":"fn spec.sideCars.containers.withStdinOnce","text":"<pre><code>withStdinOnce(stdinOnce)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithterminationmessagepath","title":"fn spec.sideCars.containers.withTerminationMessagePath","text":"<pre><code>withTerminationMessagePath(terminationMessagePath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithterminationmessagepolicy","title":"fn spec.sideCars.containers.withTerminationMessagePolicy","text":"<pre><code>withTerminationMessagePolicy(terminationMessagePolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithtty","title":"fn spec.sideCars.containers.withTty","text":"<pre><code>withTty(tty)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithvolumedevices","title":"fn spec.sideCars.containers.withVolumeDevices","text":"<pre><code>withVolumeDevices(volumeDevices)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithvolumedevicesmixin","title":"fn spec.sideCars.containers.withVolumeDevicesMixin","text":"<pre><code>withVolumeDevicesMixin(volumeDevices)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithvolumemounts","title":"fn spec.sideCars.containers.withVolumeMounts","text":"<pre><code>withVolumeMounts(volumeMounts)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithvolumemountsmixin","title":"fn spec.sideCars.containers.withVolumeMountsMixin","text":"<pre><code>withVolumeMountsMixin(volumeMounts)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerswithworkingdir","title":"fn spec.sideCars.containers.withWorkingDir","text":"<pre><code>withWorkingDir(workingDir)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersenv","title":"obj spec.sideCars.containers.env","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvwithname","title":"fn spec.sideCars.containers.env.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvwithvalue","title":"fn spec.sideCars.containers.env.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersenvvaluefrom","title":"obj spec.sideCars.containers.env.valueFrom","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersenvvaluefromconfigmapkeyref","title":"obj spec.sideCars.containers.env.valueFrom.configMapKeyRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromconfigmapkeyrefwithkey","title":"fn spec.sideCars.containers.env.valueFrom.configMapKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromconfigmapkeyrefwithname","title":"fn spec.sideCars.containers.env.valueFrom.configMapKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromconfigmapkeyrefwithoptional","title":"fn spec.sideCars.containers.env.valueFrom.configMapKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersenvvaluefromfieldref","title":"obj spec.sideCars.containers.env.valueFrom.fieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromfieldrefwithapiversion","title":"fn spec.sideCars.containers.env.valueFrom.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromfieldrefwithfieldpath","title":"fn spec.sideCars.containers.env.valueFrom.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersenvvaluefromresourcefieldref","title":"obj spec.sideCars.containers.env.valueFrom.resourceFieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromresourcefieldrefwithcontainername","title":"fn spec.sideCars.containers.env.valueFrom.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromresourcefieldrefwithdivisor","title":"fn spec.sideCars.containers.env.valueFrom.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromresourcefieldrefwithresource","title":"fn spec.sideCars.containers.env.valueFrom.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersenvvaluefromsecretkeyref","title":"obj spec.sideCars.containers.env.valueFrom.secretKeyRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromsecretkeyrefwithkey","title":"fn spec.sideCars.containers.env.valueFrom.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromsecretkeyrefwithname","title":"fn spec.sideCars.containers.env.valueFrom.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvvaluefromsecretkeyrefwithoptional","title":"fn spec.sideCars.containers.env.valueFrom.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersenvfrom","title":"obj spec.sideCars.containers.envFrom","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvfromwithprefix","title":"fn spec.sideCars.containers.envFrom.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersenvfromconfigmapref","title":"obj spec.sideCars.containers.envFrom.configMapRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvfromconfigmaprefwithname","title":"fn spec.sideCars.containers.envFrom.configMapRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvfromconfigmaprefwithoptional","title":"fn spec.sideCars.containers.envFrom.configMapRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersenvfromsecretref","title":"obj spec.sideCars.containers.envFrom.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvfromsecretrefwithname","title":"fn spec.sideCars.containers.envFrom.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersenvfromsecretrefwithoptional","title":"fn spec.sideCars.containers.envFrom.secretRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslifecycle","title":"obj spec.sideCars.containers.lifecycle","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslifecyclepoststart","title":"obj spec.sideCars.containers.lifecycle.postStart","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslifecyclepoststartexec","title":"obj spec.sideCars.containers.lifecycle.postStart.exec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststartexecwithcommand","title":"fn spec.sideCars.containers.lifecycle.postStart.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststartexecwithcommandmixin","title":"fn spec.sideCars.containers.lifecycle.postStart.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslifecyclepoststarthttpget","title":"obj spec.sideCars.containers.lifecycle.postStart.httpGet","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgetwithhost","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgetwithhttpheaders","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgetwithhttpheadersmixin","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgetwithpath","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgetwithport","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgetwithscheme","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslifecyclepoststarthttpgethttpheaders","title":"obj spec.sideCars.containers.lifecycle.postStart.httpGet.httpHeaders","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgethttpheaderswithname","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarthttpgethttpheaderswithvalue","title":"fn spec.sideCars.containers.lifecycle.postStart.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslifecyclepoststartsleep","title":"obj spec.sideCars.containers.lifecycle.postStart.sleep","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststartsleepwithseconds","title":"fn spec.sideCars.containers.lifecycle.postStart.sleep.withSeconds","text":"<pre><code>withSeconds(seconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslifecyclepoststarttcpsocket","title":"obj spec.sideCars.containers.lifecycle.postStart.tcpSocket","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarttcpsocketwithhost","title":"fn spec.sideCars.containers.lifecycle.postStart.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecyclepoststarttcpsocketwithport","title":"fn spec.sideCars.containers.lifecycle.postStart.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslifecycleprestop","title":"obj spec.sideCars.containers.lifecycle.preStop","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslifecycleprestopexec","title":"obj spec.sideCars.containers.lifecycle.preStop.exec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestopexecwithcommand","title":"fn spec.sideCars.containers.lifecycle.preStop.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestopexecwithcommandmixin","title":"fn spec.sideCars.containers.lifecycle.preStop.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslifecycleprestophttpget","title":"obj spec.sideCars.containers.lifecycle.preStop.httpGet","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgetwithhost","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgetwithhttpheaders","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgetwithhttpheadersmixin","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgetwithpath","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgetwithport","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgetwithscheme","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslifecycleprestophttpgethttpheaders","title":"obj spec.sideCars.containers.lifecycle.preStop.httpGet.httpHeaders","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgethttpheaderswithname","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestophttpgethttpheaderswithvalue","title":"fn spec.sideCars.containers.lifecycle.preStop.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslifecycleprestopsleep","title":"obj spec.sideCars.containers.lifecycle.preStop.sleep","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestopsleepwithseconds","title":"fn spec.sideCars.containers.lifecycle.preStop.sleep.withSeconds","text":"<pre><code>withSeconds(seconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslifecycleprestoptcpsocket","title":"obj spec.sideCars.containers.lifecycle.preStop.tcpSocket","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestoptcpsocketwithhost","title":"fn spec.sideCars.containers.lifecycle.preStop.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslifecycleprestoptcpsocketwithport","title":"fn spec.sideCars.containers.lifecycle.preStop.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslivenessprobe","title":"obj spec.sideCars.containers.livenessProbe","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobewithfailurethreshold","title":"fn spec.sideCars.containers.livenessProbe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobewithinitialdelayseconds","title":"fn spec.sideCars.containers.livenessProbe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobewithperiodseconds","title":"fn spec.sideCars.containers.livenessProbe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobewithsuccessthreshold","title":"fn spec.sideCars.containers.livenessProbe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobewithterminationgraceperiodseconds","title":"fn spec.sideCars.containers.livenessProbe.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobewithtimeoutseconds","title":"fn spec.sideCars.containers.livenessProbe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslivenessprobeexec","title":"obj spec.sideCars.containers.livenessProbe.exec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobeexecwithcommand","title":"fn spec.sideCars.containers.livenessProbe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobeexecwithcommandmixin","title":"fn spec.sideCars.containers.livenessProbe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslivenessprobegrpc","title":"obj spec.sideCars.containers.livenessProbe.grpc","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobegrpcwithport","title":"fn spec.sideCars.containers.livenessProbe.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobegrpcwithservice","title":"fn spec.sideCars.containers.livenessProbe.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslivenessprobehttpget","title":"obj spec.sideCars.containers.livenessProbe.httpGet","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgetwithhost","title":"fn spec.sideCars.containers.livenessProbe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgetwithhttpheaders","title":"fn spec.sideCars.containers.livenessProbe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgetwithhttpheadersmixin","title":"fn spec.sideCars.containers.livenessProbe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgetwithpath","title":"fn spec.sideCars.containers.livenessProbe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgetwithport","title":"fn spec.sideCars.containers.livenessProbe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgetwithscheme","title":"fn spec.sideCars.containers.livenessProbe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslivenessprobehttpgethttpheaders","title":"obj spec.sideCars.containers.livenessProbe.httpGet.httpHeaders","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgethttpheaderswithname","title":"fn spec.sideCars.containers.livenessProbe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobehttpgethttpheaderswithvalue","title":"fn spec.sideCars.containers.livenessProbe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerslivenessprobetcpsocket","title":"obj spec.sideCars.containers.livenessProbe.tcpSocket","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobetcpsocketwithhost","title":"fn spec.sideCars.containers.livenessProbe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerslivenessprobetcpsocketwithport","title":"fn spec.sideCars.containers.livenessProbe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersports","title":"obj spec.sideCars.containers.ports","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersportswithcontainerport","title":"fn spec.sideCars.containers.ports.withContainerPort","text":"<pre><code>withContainerPort(containerPort)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersportswithhostip","title":"fn spec.sideCars.containers.ports.withHostIP","text":"<pre><code>withHostIP(hostIP)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersportswithhostport","title":"fn spec.sideCars.containers.ports.withHostPort","text":"<pre><code>withHostPort(hostPort)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersportswithname","title":"fn spec.sideCars.containers.ports.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersportswithprotocol","title":"fn spec.sideCars.containers.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersreadinessprobe","title":"obj spec.sideCars.containers.readinessProbe","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobewithfailurethreshold","title":"fn spec.sideCars.containers.readinessProbe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobewithinitialdelayseconds","title":"fn spec.sideCars.containers.readinessProbe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobewithperiodseconds","title":"fn spec.sideCars.containers.readinessProbe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobewithsuccessthreshold","title":"fn spec.sideCars.containers.readinessProbe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobewithterminationgraceperiodseconds","title":"fn spec.sideCars.containers.readinessProbe.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobewithtimeoutseconds","title":"fn spec.sideCars.containers.readinessProbe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersreadinessprobeexec","title":"obj spec.sideCars.containers.readinessProbe.exec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobeexecwithcommand","title":"fn spec.sideCars.containers.readinessProbe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobeexecwithcommandmixin","title":"fn spec.sideCars.containers.readinessProbe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersreadinessprobegrpc","title":"obj spec.sideCars.containers.readinessProbe.grpc","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobegrpcwithport","title":"fn spec.sideCars.containers.readinessProbe.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobegrpcwithservice","title":"fn spec.sideCars.containers.readinessProbe.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersreadinessprobehttpget","title":"obj spec.sideCars.containers.readinessProbe.httpGet","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgetwithhost","title":"fn spec.sideCars.containers.readinessProbe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgetwithhttpheaders","title":"fn spec.sideCars.containers.readinessProbe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgetwithhttpheadersmixin","title":"fn spec.sideCars.containers.readinessProbe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgetwithpath","title":"fn spec.sideCars.containers.readinessProbe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgetwithport","title":"fn spec.sideCars.containers.readinessProbe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgetwithscheme","title":"fn spec.sideCars.containers.readinessProbe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersreadinessprobehttpgethttpheaders","title":"obj spec.sideCars.containers.readinessProbe.httpGet.httpHeaders","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgethttpheaderswithname","title":"fn spec.sideCars.containers.readinessProbe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobehttpgethttpheaderswithvalue","title":"fn spec.sideCars.containers.readinessProbe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersreadinessprobetcpsocket","title":"obj spec.sideCars.containers.readinessProbe.tcpSocket","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobetcpsocketwithhost","title":"fn spec.sideCars.containers.readinessProbe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersreadinessprobetcpsocketwithport","title":"fn spec.sideCars.containers.readinessProbe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersresizepolicy","title":"obj spec.sideCars.containers.resizePolicy","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersresizepolicywithresourcename","title":"fn spec.sideCars.containers.resizePolicy.withResourceName","text":"<pre><code>withResourceName(resourceName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersresizepolicywithrestartpolicy","title":"fn spec.sideCars.containers.resizePolicy.withRestartPolicy","text":"<pre><code>withRestartPolicy(restartPolicy)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersresources","title":"obj spec.sideCars.containers.resources","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersresourceswithclaims","title":"fn spec.sideCars.containers.resources.withClaims","text":"<pre><code>withClaims(claims)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersresourceswithclaimsmixin","title":"fn spec.sideCars.containers.resources.withClaimsMixin","text":"<pre><code>withClaimsMixin(claims)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersresourceswithlimits","title":"fn spec.sideCars.containers.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersresourceswithlimitsmixin","title":"fn spec.sideCars.containers.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersresourceswithrequests","title":"fn spec.sideCars.containers.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersresourceswithrequestsmixin","title":"fn spec.sideCars.containers.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersresourcesclaims","title":"obj spec.sideCars.containers.resources.claims","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersresourcesclaimswithname","title":"fn spec.sideCars.containers.resources.claims.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerssecuritycontext","title":"obj spec.sideCars.containers.securityContext","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwithallowprivilegeescalation","title":"fn spec.sideCars.containers.securityContext.withAllowPrivilegeEscalation","text":"<pre><code>withAllowPrivilegeEscalation(allowPrivilegeEscalation)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwithprivileged","title":"fn spec.sideCars.containers.securityContext.withPrivileged","text":"<pre><code>withPrivileged(privileged)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwithprocmount","title":"fn spec.sideCars.containers.securityContext.withProcMount","text":"<pre><code>withProcMount(procMount)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwithreadonlyrootfilesystem","title":"fn spec.sideCars.containers.securityContext.withReadOnlyRootFilesystem","text":"<pre><code>withReadOnlyRootFilesystem(readOnlyRootFilesystem)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwithrunasgroup","title":"fn spec.sideCars.containers.securityContext.withRunAsGroup","text":"<pre><code>withRunAsGroup(runAsGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwithrunasnonroot","title":"fn spec.sideCars.containers.securityContext.withRunAsNonRoot","text":"<pre><code>withRunAsNonRoot(runAsNonRoot)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwithrunasuser","title":"fn spec.sideCars.containers.securityContext.withRunAsUser","text":"<pre><code>withRunAsUser(runAsUser)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerssecuritycontextapparmorprofile","title":"obj spec.sideCars.containers.securityContext.appArmorProfile","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextapparmorprofilewithlocalhostprofile","title":"fn spec.sideCars.containers.securityContext.appArmorProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextapparmorprofilewithtype","title":"fn spec.sideCars.containers.securityContext.appArmorProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerssecuritycontextcapabilities","title":"obj spec.sideCars.containers.securityContext.capabilities","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextcapabilitieswithadd","title":"fn spec.sideCars.containers.securityContext.capabilities.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextcapabilitieswithaddmixin","title":"fn spec.sideCars.containers.securityContext.capabilities.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextcapabilitieswithdrop","title":"fn spec.sideCars.containers.securityContext.capabilities.withDrop","text":"<pre><code>withDrop(drop)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextcapabilitieswithdropmixin","title":"fn spec.sideCars.containers.securityContext.capabilities.withDropMixin","text":"<pre><code>withDropMixin(drop)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerssecuritycontextselinuxoptions","title":"obj spec.sideCars.containers.securityContext.seLinuxOptions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextselinuxoptionswithlevel","title":"fn spec.sideCars.containers.securityContext.seLinuxOptions.withLevel","text":"<pre><code>withLevel(level)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextselinuxoptionswithrole","title":"fn spec.sideCars.containers.securityContext.seLinuxOptions.withRole","text":"<pre><code>withRole(role)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextselinuxoptionswithtype","title":"fn spec.sideCars.containers.securityContext.seLinuxOptions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextselinuxoptionswithuser","title":"fn spec.sideCars.containers.securityContext.seLinuxOptions.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerssecuritycontextseccompprofile","title":"obj spec.sideCars.containers.securityContext.seccompProfile","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextseccompprofilewithlocalhostprofile","title":"fn spec.sideCars.containers.securityContext.seccompProfile.withLocalhostProfile","text":"<pre><code>withLocalhostProfile(localhostProfile)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextseccompprofilewithtype","title":"fn spec.sideCars.containers.securityContext.seccompProfile.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainerssecuritycontextwindowsoptions","title":"obj spec.sideCars.containers.securityContext.windowsOptions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwindowsoptionswithgmsacredentialspec","title":"fn spec.sideCars.containers.securityContext.windowsOptions.withGmsaCredentialSpec","text":"<pre><code>withGmsaCredentialSpec(gmsaCredentialSpec)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwindowsoptionswithgmsacredentialspecname","title":"fn spec.sideCars.containers.securityContext.windowsOptions.withGmsaCredentialSpecName","text":"<pre><code>withGmsaCredentialSpecName(gmsaCredentialSpecName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwindowsoptionswithhostprocess","title":"fn spec.sideCars.containers.securityContext.windowsOptions.withHostProcess","text":"<pre><code>withHostProcess(hostProcess)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainerssecuritycontextwindowsoptionswithrunasusername","title":"fn spec.sideCars.containers.securityContext.windowsOptions.withRunAsUserName","text":"<pre><code>withRunAsUserName(runAsUserName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersstartupprobe","title":"obj spec.sideCars.containers.startupProbe","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobewithfailurethreshold","title":"fn spec.sideCars.containers.startupProbe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobewithinitialdelayseconds","title":"fn spec.sideCars.containers.startupProbe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobewithperiodseconds","title":"fn spec.sideCars.containers.startupProbe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobewithsuccessthreshold","title":"fn spec.sideCars.containers.startupProbe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobewithterminationgraceperiodseconds","title":"fn spec.sideCars.containers.startupProbe.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobewithtimeoutseconds","title":"fn spec.sideCars.containers.startupProbe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersstartupprobeexec","title":"obj spec.sideCars.containers.startupProbe.exec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobeexecwithcommand","title":"fn spec.sideCars.containers.startupProbe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobeexecwithcommandmixin","title":"fn spec.sideCars.containers.startupProbe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersstartupprobegrpc","title":"obj spec.sideCars.containers.startupProbe.grpc","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobegrpcwithport","title":"fn spec.sideCars.containers.startupProbe.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobegrpcwithservice","title":"fn spec.sideCars.containers.startupProbe.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersstartupprobehttpget","title":"obj spec.sideCars.containers.startupProbe.httpGet","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgetwithhost","title":"fn spec.sideCars.containers.startupProbe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgetwithhttpheaders","title":"fn spec.sideCars.containers.startupProbe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgetwithhttpheadersmixin","title":"fn spec.sideCars.containers.startupProbe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgetwithpath","title":"fn spec.sideCars.containers.startupProbe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgetwithport","title":"fn spec.sideCars.containers.startupProbe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgetwithscheme","title":"fn spec.sideCars.containers.startupProbe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersstartupprobehttpgethttpheaders","title":"obj spec.sideCars.containers.startupProbe.httpGet.httpHeaders","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgethttpheaderswithname","title":"fn spec.sideCars.containers.startupProbe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobehttpgethttpheaderswithvalue","title":"fn spec.sideCars.containers.startupProbe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersstartupprobetcpsocket","title":"obj spec.sideCars.containers.startupProbe.tcpSocket","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobetcpsocketwithhost","title":"fn spec.sideCars.containers.startupProbe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersstartupprobetcpsocketwithport","title":"fn spec.sideCars.containers.startupProbe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersvolumedevices","title":"obj spec.sideCars.containers.volumeDevices","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersvolumedeviceswithdevicepath","title":"fn spec.sideCars.containers.volumeDevices.withDevicePath","text":"<pre><code>withDevicePath(devicePath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersvolumedeviceswithname","title":"fn spec.sideCars.containers.volumeDevices.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarscontainersvolumemounts","title":"obj spec.sideCars.containers.volumeMounts","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersvolumemountswithmountpath","title":"fn spec.sideCars.containers.volumeMounts.withMountPath","text":"<pre><code>withMountPath(mountPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersvolumemountswithmountpropagation","title":"fn spec.sideCars.containers.volumeMounts.withMountPropagation","text":"<pre><code>withMountPropagation(mountPropagation)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersvolumemountswithname","title":"fn spec.sideCars.containers.volumeMounts.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersvolumemountswithreadonly","title":"fn spec.sideCars.containers.volumeMounts.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersvolumemountswithrecursivereadonly","title":"fn spec.sideCars.containers.volumeMounts.withRecursiveReadOnly","text":"<pre><code>withRecursiveReadOnly(recursiveReadOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersvolumemountswithsubpath","title":"fn spec.sideCars.containers.volumeMounts.withSubPath","text":"<pre><code>withSubPath(subPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarscontainersvolumemountswithsubpathexpr","title":"fn spec.sideCars.containers.volumeMounts.withSubPathExpr","text":"<pre><code>withSubPathExpr(subPathExpr)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsresources","title":"obj spec.sideCars.resources","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsresourceswithclaims","title":"fn spec.sideCars.resources.withClaims","text":"<pre><code>withClaims(claims)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsresourceswithclaimsmixin","title":"fn spec.sideCars.resources.withClaimsMixin","text":"<pre><code>withClaimsMixin(claims)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsresourceswithlimits","title":"fn spec.sideCars.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsresourceswithlimitsmixin","title":"fn spec.sideCars.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsresourceswithrequests","title":"fn spec.sideCars.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsresourceswithrequestsmixin","title":"fn spec.sideCars.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsresourcesclaims","title":"obj spec.sideCars.resources.claims","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsresourcesclaimswithname","title":"fn spec.sideCars.resources.claims.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplates","title":"obj spec.sideCars.volumeClaimTemplates","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplateswithapiversion","title":"fn spec.sideCars.volumeClaimTemplates.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplateswithkind","title":"fn spec.sideCars.volumeClaimTemplates.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplatesmetadata","title":"obj spec.sideCars.volumeClaimTemplates.metadata","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithannotations","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithannotationsmixin","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithfinalizers","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithfinalizersmixin","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithlabels","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithlabelsmixin","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithname","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesmetadatawithnamespace","title":"fn spec.sideCars.volumeClaimTemplates.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplatesspec","title":"obj spec.sideCars.volumeClaimTemplates.spec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecwithaccessmodes","title":"fn spec.sideCars.volumeClaimTemplates.spec.withAccessModes","text":"<pre><code>withAccessModes(accessModes)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecwithaccessmodesmixin","title":"fn spec.sideCars.volumeClaimTemplates.spec.withAccessModesMixin","text":"<pre><code>withAccessModesMixin(accessModes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecwithstorageclassname","title":"fn spec.sideCars.volumeClaimTemplates.spec.withStorageClassName","text":"<pre><code>withStorageClassName(storageClassName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecwithvolumeattributesclassname","title":"fn spec.sideCars.volumeClaimTemplates.spec.withVolumeAttributesClassName","text":"<pre><code>withVolumeAttributesClassName(volumeAttributesClassName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecwithvolumemode","title":"fn spec.sideCars.volumeClaimTemplates.spec.withVolumeMode","text":"<pre><code>withVolumeMode(volumeMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecwithvolumename","title":"fn spec.sideCars.volumeClaimTemplates.spec.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplatesspecdatasource","title":"obj spec.sideCars.volumeClaimTemplates.spec.dataSource","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecdatasourcewithapigroup","title":"fn spec.sideCars.volumeClaimTemplates.spec.dataSource.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecdatasourcewithkind","title":"fn spec.sideCars.volumeClaimTemplates.spec.dataSource.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecdatasourcewithname","title":"fn spec.sideCars.volumeClaimTemplates.spec.dataSource.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplatesspecdatasourceref","title":"obj spec.sideCars.volumeClaimTemplates.spec.dataSourceRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecdatasourcerefwithapigroup","title":"fn spec.sideCars.volumeClaimTemplates.spec.dataSourceRef.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecdatasourcerefwithkind","title":"fn spec.sideCars.volumeClaimTemplates.spec.dataSourceRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecdatasourcerefwithname","title":"fn spec.sideCars.volumeClaimTemplates.spec.dataSourceRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecdatasourcerefwithnamespace","title":"fn spec.sideCars.volumeClaimTemplates.spec.dataSourceRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplatesspecresources","title":"obj spec.sideCars.volumeClaimTemplates.spec.resources","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecresourceswithlimits","title":"fn spec.sideCars.volumeClaimTemplates.spec.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecresourceswithlimitsmixin","title":"fn spec.sideCars.volumeClaimTemplates.spec.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecresourceswithrequests","title":"fn spec.sideCars.volumeClaimTemplates.spec.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecresourceswithrequestsmixin","title":"fn spec.sideCars.volumeClaimTemplates.spec.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplatesspecselector","title":"obj spec.sideCars.volumeClaimTemplates.spec.selector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectorwithmatchexpressions","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectorwithmatchexpressionsmixin","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectorwithmatchlabels","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectorwithmatchlabelsmixin","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumeclaimtemplatesspecselectormatchexpressions","title":"obj spec.sideCars.volumeClaimTemplates.spec.selector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectormatchexpressionswithkey","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectormatchexpressionswithoperator","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectormatchexpressionswithvalues","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeclaimtemplatesspecselectormatchexpressionswithvaluesmixin","title":"fn spec.sideCars.volumeClaimTemplates.spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumes","title":"obj spec.sideCars.volumes","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeswithname","title":"fn spec.sideCars.volumes.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesawselasticblockstore","title":"obj spec.sideCars.volumes.awsElasticBlockStore","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesawselasticblockstorewithfstype","title":"fn spec.sideCars.volumes.awsElasticBlockStore.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesawselasticblockstorewithpartition","title":"fn spec.sideCars.volumes.awsElasticBlockStore.withPartition","text":"<pre><code>withPartition(partition)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesawselasticblockstorewithreadonly","title":"fn spec.sideCars.volumes.awsElasticBlockStore.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesawselasticblockstorewithvolumeid","title":"fn spec.sideCars.volumes.awsElasticBlockStore.withVolumeID","text":"<pre><code>withVolumeID(volumeID)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesazuredisk","title":"obj spec.sideCars.volumes.azureDisk","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesazurediskwithcachingmode","title":"fn spec.sideCars.volumes.azureDisk.withCachingMode","text":"<pre><code>withCachingMode(cachingMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesazurediskwithdiskname","title":"fn spec.sideCars.volumes.azureDisk.withDiskName","text":"<pre><code>withDiskName(diskName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesazurediskwithdiskuri","title":"fn spec.sideCars.volumes.azureDisk.withDiskURI","text":"<pre><code>withDiskURI(diskURI)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesazurediskwithfstype","title":"fn spec.sideCars.volumes.azureDisk.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesazurediskwithkind","title":"fn spec.sideCars.volumes.azureDisk.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesazurediskwithreadonly","title":"fn spec.sideCars.volumes.azureDisk.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesazurefile","title":"obj spec.sideCars.volumes.azureFile","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesazurefilewithreadonly","title":"fn spec.sideCars.volumes.azureFile.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesazurefilewithsecretname","title":"fn spec.sideCars.volumes.azureFile.withSecretName","text":"<pre><code>withSecretName(secretName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesazurefilewithsharename","title":"fn spec.sideCars.volumes.azureFile.withShareName","text":"<pre><code>withShareName(shareName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumescephfs","title":"obj spec.sideCars.volumes.cephfs","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescephfswithmonitors","title":"fn spec.sideCars.volumes.cephfs.withMonitors","text":"<pre><code>withMonitors(monitors)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescephfswithmonitorsmixin","title":"fn spec.sideCars.volumes.cephfs.withMonitorsMixin","text":"<pre><code>withMonitorsMixin(monitors)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescephfswithpath","title":"fn spec.sideCars.volumes.cephfs.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescephfswithreadonly","title":"fn spec.sideCars.volumes.cephfs.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescephfswithsecretfile","title":"fn spec.sideCars.volumes.cephfs.withSecretFile","text":"<pre><code>withSecretFile(secretFile)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescephfswithuser","title":"fn spec.sideCars.volumes.cephfs.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumescephfssecretref","title":"obj spec.sideCars.volumes.cephfs.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescephfssecretrefwithname","title":"fn spec.sideCars.volumes.cephfs.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumescinder","title":"obj spec.sideCars.volumes.cinder","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescinderwithfstype","title":"fn spec.sideCars.volumes.cinder.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescinderwithreadonly","title":"fn spec.sideCars.volumes.cinder.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescinderwithvolumeid","title":"fn spec.sideCars.volumes.cinder.withVolumeID","text":"<pre><code>withVolumeID(volumeID)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumescindersecretref","title":"obj spec.sideCars.volumes.cinder.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescindersecretrefwithname","title":"fn spec.sideCars.volumes.cinder.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesconfigmap","title":"obj spec.sideCars.volumes.configMap","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapwithdefaultmode","title":"fn spec.sideCars.volumes.configMap.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapwithitems","title":"fn spec.sideCars.volumes.configMap.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapwithitemsmixin","title":"fn spec.sideCars.volumes.configMap.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapwithname","title":"fn spec.sideCars.volumes.configMap.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapwithoptional","title":"fn spec.sideCars.volumes.configMap.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesconfigmapitems","title":"obj spec.sideCars.volumes.configMap.items","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapitemswithkey","title":"fn spec.sideCars.volumes.configMap.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapitemswithmode","title":"fn spec.sideCars.volumes.configMap.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesconfigmapitemswithpath","title":"fn spec.sideCars.volumes.configMap.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumescsi","title":"obj spec.sideCars.volumes.csi","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescsiwithdriver","title":"fn spec.sideCars.volumes.csi.withDriver","text":"<pre><code>withDriver(driver)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescsiwithfstype","title":"fn spec.sideCars.volumes.csi.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescsiwithreadonly","title":"fn spec.sideCars.volumes.csi.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescsiwithvolumeattributes","title":"fn spec.sideCars.volumes.csi.withVolumeAttributes","text":"<pre><code>withVolumeAttributes(volumeAttributes)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescsiwithvolumeattributesmixin","title":"fn spec.sideCars.volumes.csi.withVolumeAttributesMixin","text":"<pre><code>withVolumeAttributesMixin(volumeAttributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumescsinodepublishsecretref","title":"obj spec.sideCars.volumes.csi.nodePublishSecretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumescsinodepublishsecretrefwithname","title":"fn spec.sideCars.volumes.csi.nodePublishSecretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesdownwardapi","title":"obj spec.sideCars.volumes.downwardAPI","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiwithdefaultmode","title":"fn spec.sideCars.volumes.downwardAPI.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiwithitems","title":"fn spec.sideCars.volumes.downwardAPI.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiwithitemsmixin","title":"fn spec.sideCars.volumes.downwardAPI.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesdownwardapiitems","title":"obj spec.sideCars.volumes.downwardAPI.items","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiitemswithmode","title":"fn spec.sideCars.volumes.downwardAPI.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiitemswithpath","title":"fn spec.sideCars.volumes.downwardAPI.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesdownwardapiitemsfieldref","title":"obj spec.sideCars.volumes.downwardAPI.items.fieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiitemsfieldrefwithapiversion","title":"fn spec.sideCars.volumes.downwardAPI.items.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiitemsfieldrefwithfieldpath","title":"fn spec.sideCars.volumes.downwardAPI.items.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesdownwardapiitemsresourcefieldref","title":"obj spec.sideCars.volumes.downwardAPI.items.resourceFieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiitemsresourcefieldrefwithcontainername","title":"fn spec.sideCars.volumes.downwardAPI.items.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiitemsresourcefieldrefwithdivisor","title":"fn spec.sideCars.volumes.downwardAPI.items.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesdownwardapiitemsresourcefieldrefwithresource","title":"fn spec.sideCars.volumes.downwardAPI.items.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesemptydir","title":"obj spec.sideCars.volumes.emptyDir","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesemptydirwithmedium","title":"fn spec.sideCars.volumes.emptyDir.withMedium","text":"<pre><code>withMedium(medium)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesemptydirwithsizelimit","title":"fn spec.sideCars.volumes.emptyDir.withSizeLimit","text":"<pre><code>withSizeLimit(sizeLimit)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesephemeral","title":"obj spec.sideCars.volumes.ephemeral","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplate","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplatemetadata","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithannotations","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithannotationsmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithfinalizers","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithfinalizersmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithlabels","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithlabelsmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithname","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatemetadatawithnamespace","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplatespec","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecwithaccessmodes","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.withAccessModes","text":"<pre><code>withAccessModes(accessModes)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecwithaccessmodesmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.withAccessModesMixin","text":"<pre><code>withAccessModesMixin(accessModes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecwithstorageclassname","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.withStorageClassName","text":"<pre><code>withStorageClassName(storageClassName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecwithvolumeattributesclassname","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.withVolumeAttributesClassName","text":"<pre><code>withVolumeAttributesClassName(volumeAttributesClassName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecwithvolumemode","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.withVolumeMode","text":"<pre><code>withVolumeMode(volumeMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecwithvolumename","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasource","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSource","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourcewithapigroup","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSource.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourcewithkind","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSource.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourcewithname","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSource.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourceref","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithapigroup","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withApiGroup","text":"<pre><code>withApiGroup(apiGroup)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithkind","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithname","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecdatasourcerefwithnamespace","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.dataSourceRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplatespecresources","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.resources","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecresourceswithlimits","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.resources.withLimits","text":"<pre><code>withLimits(limits)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecresourceswithlimitsmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.resources.withLimitsMixin","text":"<pre><code>withLimitsMixin(limits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecresourceswithrequests","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.resources.withRequests","text":"<pre><code>withRequests(requests)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecresourceswithrequestsmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.resources.withRequestsMixin","text":"<pre><code>withRequestsMixin(requests)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplatespecselector","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectorwithmatchexpressions","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectorwithmatchexpressionsmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectorwithmatchlabels","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectorwithmatchlabelsmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectormatchexpressions","title":"obj spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithkey","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithoperator","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithvalues","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesephemeralvolumeclaimtemplatespecselectormatchexpressionswithvaluesmixin","title":"fn spec.sideCars.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesfc","title":"obj spec.sideCars.volumes.fc","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesfcwithfstype","title":"fn spec.sideCars.volumes.fc.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesfcwithlun","title":"fn spec.sideCars.volumes.fc.withLun","text":"<pre><code>withLun(lun)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesfcwithreadonly","title":"fn spec.sideCars.volumes.fc.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesfcwithtargetwwns","title":"fn spec.sideCars.volumes.fc.withTargetWWNs","text":"<pre><code>withTargetWWNs(targetWWNs)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesfcwithtargetwwnsmixin","title":"fn spec.sideCars.volumes.fc.withTargetWWNsMixin","text":"<pre><code>withTargetWWNsMixin(targetWWNs)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesfcwithwwids","title":"fn spec.sideCars.volumes.fc.withWwids","text":"<pre><code>withWwids(wwids)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesfcwithwwidsmixin","title":"fn spec.sideCars.volumes.fc.withWwidsMixin","text":"<pre><code>withWwidsMixin(wwids)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesflexvolume","title":"obj spec.sideCars.volumes.flexVolume","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesflexvolumewithdriver","title":"fn spec.sideCars.volumes.flexVolume.withDriver","text":"<pre><code>withDriver(driver)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesflexvolumewithfstype","title":"fn spec.sideCars.volumes.flexVolume.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesflexvolumewithoptions","title":"fn spec.sideCars.volumes.flexVolume.withOptions","text":"<pre><code>withOptions(options)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesflexvolumewithoptionsmixin","title":"fn spec.sideCars.volumes.flexVolume.withOptionsMixin","text":"<pre><code>withOptionsMixin(options)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesflexvolumewithreadonly","title":"fn spec.sideCars.volumes.flexVolume.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesflexvolumesecretref","title":"obj spec.sideCars.volumes.flexVolume.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesflexvolumesecretrefwithname","title":"fn spec.sideCars.volumes.flexVolume.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesflocker","title":"obj spec.sideCars.volumes.flocker","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesflockerwithdatasetname","title":"fn spec.sideCars.volumes.flocker.withDatasetName","text":"<pre><code>withDatasetName(datasetName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesflockerwithdatasetuuid","title":"fn spec.sideCars.volumes.flocker.withDatasetUUID","text":"<pre><code>withDatasetUUID(datasetUUID)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesgcepersistentdisk","title":"obj spec.sideCars.volumes.gcePersistentDisk","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesgcepersistentdiskwithfstype","title":"fn spec.sideCars.volumes.gcePersistentDisk.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesgcepersistentdiskwithpartition","title":"fn spec.sideCars.volumes.gcePersistentDisk.withPartition","text":"<pre><code>withPartition(partition)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesgcepersistentdiskwithpdname","title":"fn spec.sideCars.volumes.gcePersistentDisk.withPdName","text":"<pre><code>withPdName(pdName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesgcepersistentdiskwithreadonly","title":"fn spec.sideCars.volumes.gcePersistentDisk.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesgitrepo","title":"obj spec.sideCars.volumes.gitRepo","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesgitrepowithdirectory","title":"fn spec.sideCars.volumes.gitRepo.withDirectory","text":"<pre><code>withDirectory(directory)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesgitrepowithrepository","title":"fn spec.sideCars.volumes.gitRepo.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesgitrepowithrevision","title":"fn spec.sideCars.volumes.gitRepo.withRevision","text":"<pre><code>withRevision(revision)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesglusterfs","title":"obj spec.sideCars.volumes.glusterfs","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesglusterfswithendpoints","title":"fn spec.sideCars.volumes.glusterfs.withEndpoints","text":"<pre><code>withEndpoints(endpoints)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesglusterfswithpath","title":"fn spec.sideCars.volumes.glusterfs.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesglusterfswithreadonly","title":"fn spec.sideCars.volumes.glusterfs.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumeshostpath","title":"obj spec.sideCars.volumes.hostPath","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeshostpathwithpath","title":"fn spec.sideCars.volumes.hostPath.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumeshostpathwithtype","title":"fn spec.sideCars.volumes.hostPath.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesiscsi","title":"obj spec.sideCars.volumes.iscsi","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithchapauthdiscovery","title":"fn spec.sideCars.volumes.iscsi.withChapAuthDiscovery","text":"<pre><code>withChapAuthDiscovery(chapAuthDiscovery)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithchapauthsession","title":"fn spec.sideCars.volumes.iscsi.withChapAuthSession","text":"<pre><code>withChapAuthSession(chapAuthSession)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithfstype","title":"fn spec.sideCars.volumes.iscsi.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithinitiatorname","title":"fn spec.sideCars.volumes.iscsi.withInitiatorName","text":"<pre><code>withInitiatorName(initiatorName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithiqn","title":"fn spec.sideCars.volumes.iscsi.withIqn","text":"<pre><code>withIqn(iqn)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithiscsiinterface","title":"fn spec.sideCars.volumes.iscsi.withIscsiInterface","text":"<pre><code>withIscsiInterface(iscsiInterface)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithlun","title":"fn spec.sideCars.volumes.iscsi.withLun","text":"<pre><code>withLun(lun)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithportals","title":"fn spec.sideCars.volumes.iscsi.withPortals","text":"<pre><code>withPortals(portals)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithportalsmixin","title":"fn spec.sideCars.volumes.iscsi.withPortalsMixin","text":"<pre><code>withPortalsMixin(portals)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithreadonly","title":"fn spec.sideCars.volumes.iscsi.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesiscsiwithtargetportal","title":"fn spec.sideCars.volumes.iscsi.withTargetPortal","text":"<pre><code>withTargetPortal(targetPortal)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesiscsisecretref","title":"obj spec.sideCars.volumes.iscsi.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesiscsisecretrefwithname","title":"fn spec.sideCars.volumes.iscsi.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesnfs","title":"obj spec.sideCars.volumes.nfs","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesnfswithpath","title":"fn spec.sideCars.volumes.nfs.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesnfswithreadonly","title":"fn spec.sideCars.volumes.nfs.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesnfswithserver","title":"fn spec.sideCars.volumes.nfs.withServer","text":"<pre><code>withServer(server)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumespersistentvolumeclaim","title":"obj spec.sideCars.volumes.persistentVolumeClaim","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumespersistentvolumeclaimwithclaimname","title":"fn spec.sideCars.volumes.persistentVolumeClaim.withClaimName","text":"<pre><code>withClaimName(claimName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumespersistentvolumeclaimwithreadonly","title":"fn spec.sideCars.volumes.persistentVolumeClaim.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesphotonpersistentdisk","title":"obj spec.sideCars.volumes.photonPersistentDisk","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesphotonpersistentdiskwithfstype","title":"fn spec.sideCars.volumes.photonPersistentDisk.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesphotonpersistentdiskwithpdid","title":"fn spec.sideCars.volumes.photonPersistentDisk.withPdID","text":"<pre><code>withPdID(pdID)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesportworxvolume","title":"obj spec.sideCars.volumes.portworxVolume","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesportworxvolumewithfstype","title":"fn spec.sideCars.volumes.portworxVolume.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesportworxvolumewithreadonly","title":"fn spec.sideCars.volumes.portworxVolume.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesportworxvolumewithvolumeid","title":"fn spec.sideCars.volumes.portworxVolume.withVolumeID","text":"<pre><code>withVolumeID(volumeID)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesprojected","title":"obj spec.sideCars.volumes.projected","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedwithdefaultmode","title":"fn spec.sideCars.volumes.projected.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedwithsources","title":"fn spec.sideCars.volumes.projected.withSources","text":"<pre><code>withSources(sources)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedwithsourcesmixin","title":"fn spec.sideCars.volumes.projected.withSourcesMixin","text":"<pre><code>withSourcesMixin(sources)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsources","title":"obj spec.sideCars.volumes.projected.sources","text":""},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesclustertrustbundle","title":"obj spec.sideCars.volumes.projected.sources.clusterTrustBundle","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlewithname","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlewithoptional","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlewithpath","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlewithsignername","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.withSignerName","text":"<pre><code>withSignerName(signerName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselector","title":"obj spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchexpressions","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchexpressionsmixin","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchlabels","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectorwithmatchlabelsmixin","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressions","title":"obj spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithkey","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithoperator","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithvalues","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesclustertrustbundlelabelselectormatchexpressionswithvaluesmixin","title":"fn spec.sideCars.volumes.projected.sources.clusterTrustBundle.labelSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesconfigmap","title":"obj spec.sideCars.volumes.projected.sources.configMap","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesconfigmapwithitems","title":"fn spec.sideCars.volumes.projected.sources.configMap.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesconfigmapwithitemsmixin","title":"fn spec.sideCars.volumes.projected.sources.configMap.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesconfigmapwithname","title":"fn spec.sideCars.volumes.projected.sources.configMap.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesconfigmapwithoptional","title":"fn spec.sideCars.volumes.projected.sources.configMap.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesconfigmapitems","title":"obj spec.sideCars.volumes.projected.sources.configMap.items","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesconfigmapitemswithkey","title":"fn spec.sideCars.volumes.projected.sources.configMap.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesconfigmapitemswithmode","title":"fn spec.sideCars.volumes.projected.sources.configMap.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesconfigmapitemswithpath","title":"fn spec.sideCars.volumes.projected.sources.configMap.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesdownwardapi","title":"obj spec.sideCars.volumes.projected.sources.downwardAPI","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiwithitems","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiwithitemsmixin","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesdownwardapiitems","title":"obj spec.sideCars.volumes.projected.sources.downwardAPI.items","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiitemswithmode","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiitemswithpath","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesdownwardapiitemsfieldref","title":"obj spec.sideCars.volumes.projected.sources.downwardAPI.items.fieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiitemsfieldrefwithapiversion","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.items.fieldRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiitemsfieldrefwithfieldpath","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.items.fieldRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesdownwardapiitemsresourcefieldref","title":"obj spec.sideCars.volumes.projected.sources.downwardAPI.items.resourceFieldRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiitemsresourcefieldrefwithcontainername","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.items.resourceFieldRef.withContainerName","text":"<pre><code>withContainerName(containerName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiitemsresourcefieldrefwithdivisor","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.items.resourceFieldRef.withDivisor","text":"<pre><code>withDivisor(divisor)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesdownwardapiitemsresourcefieldrefwithresource","title":"fn spec.sideCars.volumes.projected.sources.downwardAPI.items.resourceFieldRef.withResource","text":"<pre><code>withResource(resource)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcessecret","title":"obj spec.sideCars.volumes.projected.sources.secret","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcessecretwithitems","title":"fn spec.sideCars.volumes.projected.sources.secret.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcessecretwithitemsmixin","title":"fn spec.sideCars.volumes.projected.sources.secret.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcessecretwithname","title":"fn spec.sideCars.volumes.projected.sources.secret.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcessecretwithoptional","title":"fn spec.sideCars.volumes.projected.sources.secret.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcessecretitems","title":"obj spec.sideCars.volumes.projected.sources.secret.items","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcessecretitemswithkey","title":"fn spec.sideCars.volumes.projected.sources.secret.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcessecretitemswithmode","title":"fn spec.sideCars.volumes.projected.sources.secret.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcessecretitemswithpath","title":"fn spec.sideCars.volumes.projected.sources.secret.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesprojectedsourcesserviceaccounttoken","title":"obj spec.sideCars.volumes.projected.sources.serviceAccountToken","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesserviceaccounttokenwithaudience","title":"fn spec.sideCars.volumes.projected.sources.serviceAccountToken.withAudience","text":"<pre><code>withAudience(audience)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesserviceaccounttokenwithexpirationseconds","title":"fn spec.sideCars.volumes.projected.sources.serviceAccountToken.withExpirationSeconds","text":"<pre><code>withExpirationSeconds(expirationSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesprojectedsourcesserviceaccounttokenwithpath","title":"fn spec.sideCars.volumes.projected.sources.serviceAccountToken.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesquobyte","title":"obj spec.sideCars.volumes.quobyte","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesquobytewithgroup","title":"fn spec.sideCars.volumes.quobyte.withGroup","text":"<pre><code>withGroup(group)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesquobytewithreadonly","title":"fn spec.sideCars.volumes.quobyte.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesquobytewithregistry","title":"fn spec.sideCars.volumes.quobyte.withRegistry","text":"<pre><code>withRegistry(registry)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesquobytewithtenant","title":"fn spec.sideCars.volumes.quobyte.withTenant","text":"<pre><code>withTenant(tenant)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesquobytewithuser","title":"fn spec.sideCars.volumes.quobyte.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesquobytewithvolume","title":"fn spec.sideCars.volumes.quobyte.withVolume","text":"<pre><code>withVolume(volume)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesrbd","title":"obj spec.sideCars.volumes.rbd","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithfstype","title":"fn spec.sideCars.volumes.rbd.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithimage","title":"fn spec.sideCars.volumes.rbd.withImage","text":"<pre><code>withImage(image)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithkeyring","title":"fn spec.sideCars.volumes.rbd.withKeyring","text":"<pre><code>withKeyring(keyring)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithmonitors","title":"fn spec.sideCars.volumes.rbd.withMonitors","text":"<pre><code>withMonitors(monitors)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithmonitorsmixin","title":"fn spec.sideCars.volumes.rbd.withMonitorsMixin","text":"<pre><code>withMonitorsMixin(monitors)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithpool","title":"fn spec.sideCars.volumes.rbd.withPool","text":"<pre><code>withPool(pool)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithreadonly","title":"fn spec.sideCars.volumes.rbd.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesrbdwithuser","title":"fn spec.sideCars.volumes.rbd.withUser","text":"<pre><code>withUser(user)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesrbdsecretref","title":"obj spec.sideCars.volumes.rbd.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesrbdsecretrefwithname","title":"fn spec.sideCars.volumes.rbd.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesscaleio","title":"obj spec.sideCars.volumes.scaleIO","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithfstype","title":"fn spec.sideCars.volumes.scaleIO.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithgateway","title":"fn spec.sideCars.volumes.scaleIO.withGateway","text":"<pre><code>withGateway(gateway)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithprotectiondomain","title":"fn spec.sideCars.volumes.scaleIO.withProtectionDomain","text":"<pre><code>withProtectionDomain(protectionDomain)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithreadonly","title":"fn spec.sideCars.volumes.scaleIO.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithsslenabled","title":"fn spec.sideCars.volumes.scaleIO.withSslEnabled","text":"<pre><code>withSslEnabled(sslEnabled)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithstoragemode","title":"fn spec.sideCars.volumes.scaleIO.withStorageMode","text":"<pre><code>withStorageMode(storageMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithstoragepool","title":"fn spec.sideCars.volumes.scaleIO.withStoragePool","text":"<pre><code>withStoragePool(storagePool)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithsystem","title":"fn spec.sideCars.volumes.scaleIO.withSystem","text":"<pre><code>withSystem(system)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesscaleiowithvolumename","title":"fn spec.sideCars.volumes.scaleIO.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesscaleiosecretref","title":"obj spec.sideCars.volumes.scaleIO.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesscaleiosecretrefwithname","title":"fn spec.sideCars.volumes.scaleIO.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumessecret","title":"obj spec.sideCars.volumes.secret","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumessecretwithdefaultmode","title":"fn spec.sideCars.volumes.secret.withDefaultMode","text":"<pre><code>withDefaultMode(defaultMode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumessecretwithitems","title":"fn spec.sideCars.volumes.secret.withItems","text":"<pre><code>withItems(items)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumessecretwithitemsmixin","title":"fn spec.sideCars.volumes.secret.withItemsMixin","text":"<pre><code>withItemsMixin(items)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumessecretwithoptional","title":"fn spec.sideCars.volumes.secret.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumessecretwithsecretname","title":"fn spec.sideCars.volumes.secret.withSecretName","text":"<pre><code>withSecretName(secretName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumessecretitems","title":"obj spec.sideCars.volumes.secret.items","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumessecretitemswithkey","title":"fn spec.sideCars.volumes.secret.items.withKey","text":"<pre><code>withKey(key)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumessecretitemswithmode","title":"fn spec.sideCars.volumes.secret.items.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumessecretitemswithpath","title":"fn spec.sideCars.volumes.secret.items.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesstorageos","title":"obj spec.sideCars.volumes.storageos","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesstorageoswithfstype","title":"fn spec.sideCars.volumes.storageos.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesstorageoswithreadonly","title":"fn spec.sideCars.volumes.storageos.withReadOnly","text":"<pre><code>withReadOnly(readOnly)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesstorageoswithvolumename","title":"fn spec.sideCars.volumes.storageos.withVolumeName","text":"<pre><code>withVolumeName(volumeName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesstorageoswithvolumenamespace","title":"fn spec.sideCars.volumes.storageos.withVolumeNamespace","text":"<pre><code>withVolumeNamespace(volumeNamespace)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesstorageossecretref","title":"obj spec.sideCars.volumes.storageos.secretRef","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesstorageossecretrefwithname","title":"fn spec.sideCars.volumes.storageos.secretRef.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specsidecarsvolumesvspherevolume","title":"obj spec.sideCars.volumes.vsphereVolume","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesvspherevolumewithfstype","title":"fn spec.sideCars.volumes.vsphereVolume.withFsType","text":"<pre><code>withFsType(fsType)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesvspherevolumewithstoragepolicyid","title":"fn spec.sideCars.volumes.vsphereVolume.withStoragePolicyID","text":"<pre><code>withStoragePolicyID(storagePolicyID)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesvspherevolumewithstoragepolicyname","title":"fn spec.sideCars.volumes.vsphereVolume.withStoragePolicyName","text":"<pre><code>withStoragePolicyName(storagePolicyName)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specsidecarsvolumesvspherevolumewithvolumepath","title":"fn spec.sideCars.volumes.vsphereVolume.withVolumePath","text":"<pre><code>withVolumePath(volumePath)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specstartup","title":"obj spec.startup","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartupwithfailurethreshold","title":"fn spec.startup.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartupwithinitialdelayseconds","title":"fn spec.startup.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartupwithperiodseconds","title":"fn spec.startup.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartupwithsuccessthreshold","title":"fn spec.startup.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartupwithterminationgraceperiodseconds","title":"fn spec.startup.withTerminationGracePeriodSeconds","text":"<pre><code>withTerminationGracePeriodSeconds(terminationGracePeriodSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartupwithtimeoutseconds","title":"fn spec.startup.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specstartupexec","title":"obj spec.startup.exec","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartupexecwithcommand","title":"fn spec.startup.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartupexecwithcommandmixin","title":"fn spec.startup.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specstartupgrpc","title":"obj spec.startup.grpc","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartupgrpcwithport","title":"fn spec.startup.grpc.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartupgrpcwithservice","title":"fn spec.startup.grpc.withService","text":"<pre><code>withService(service)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specstartuphttpget","title":"obj spec.startup.httpGet","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartuphttpgetwithhost","title":"fn spec.startup.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartuphttpgetwithhttpheaders","title":"fn spec.startup.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartuphttpgetwithhttpheadersmixin","title":"fn spec.startup.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartuphttpgetwithpath","title":"fn spec.startup.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartuphttpgetwithport","title":"fn spec.startup.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartuphttpgetwithscheme","title":"fn spec.startup.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specstartuphttpgethttpheaders","title":"obj spec.startup.httpGet.httpHeaders","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartuphttpgethttpheaderswithname","title":"fn spec.startup.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartuphttpgethttpheaderswithvalue","title":"fn spec.startup.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specstartuptcpsocket","title":"obj spec.startup.tcpSocket","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartuptcpsocketwithhost","title":"fn spec.startup.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#fn-specstartuptcpsocketwithport","title":"fn spec.startup.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"v6.0.0/minio/v2/tenant/#obj-specusers","title":"obj spec.users","text":""},{"location":"v6.0.0/minio/v2/tenant/#fn-specuserswithname","title":"fn spec.users.withName","text":"<pre><code>withName(name)\n</code></pre>"}]}